{"abi":[{"type":"constructor","inputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"owner","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"positiveEven","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"renounceOwnership","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setPositiveEven","inputs":[{"name":"_positiveEven","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"transferOwnership","inputs":[{"name":"newOwner","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"event","name":"OwnershipTransferred","inputs":[{"name":"previousOwner","type":"address","indexed":true,"internalType":"address"},{"name":"newOwner","type":"address","indexed":true,"internalType":"address"}],"anonymous":false},{"type":"event","name":"PositiveEvenSet","inputs":[{"name":"_prevPositiveEven","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"_newPositiveEven","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"error","name":"OwnableInvalidOwner","inputs":[{"name":"owner","type":"address","internalType":"address"}]},{"type":"error","name":"OwnableUnauthorizedAccount","inputs":[{"name":"account","type":"address","internalType":"address"}]},{"type":"error","name":"SetEvenToOddNumber","inputs":[{"name":"_oddNumber","type":"uint256","internalType":"uint256"}]},{"type":"error","name":"SetPositiveNumberToZero","inputs":[]}],"bytecode":{"object":"0x6080604052348015600f57600080fd5b503380603557604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b603c816046565b5060026001556096565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6102ce806100a56000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c806308eb4bc31461005c578063715018a6146100715780638da5cb5b14610079578063d3a1c07114610099578063f2fde38b146100b0575b600080fd5b61006f61006a36600461022d565b6100c3565b005b61006f61015e565b6000546040516001600160a01b0390911681526020015b60405180910390f35b6100a260015481565b604051908152602001610090565b61006f6100be366004610246565b610172565b6100cb6101b0565b806000036100ec57604051632c03496560e21b815260040160405180910390fd5b6100f7600282610276565b1561011d5760405163cff917b960e01b8152600481018290526024015b60405180910390fd5b60015460408051918252602082018390527fc710b576f0e4b3f7a795b1879c5fbe339c5fbc5542f03ba09cb81254ef870ee8910160405180910390a1600155565b6101666101b0565b61017060006101dd565b565b61017a6101b0565b6001600160a01b0381166101a457604051631e4fbdf760e01b815260006004820152602401610114565b6101ad816101dd565b50565b6000546001600160a01b031633146101705760405163118cdaa760e01b8152336004820152602401610114565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561023f57600080fd5b5035919050565b60006020828403121561025857600080fd5b81356001600160a01b038116811461026f57600080fd5b9392505050565b60008261029357634e487b7160e01b600052601260045260246000fd5b50069056fea26469706673582212205bd08fb72696a4307029b83538be42d9f60dbb42ea1580498e08eedea37d6d2e64736f6c634300081b0033","sourceMap":"385:2011:0:-:0;;;1530:115;;;;;;;;;-1:-1:-1;1552:10:0;;1269:95:25;;1322:31;;-1:-1:-1;;;1322:31:25;;1350:1;1322:31;;;160:51:44;133:18;;1322:31:25;;;;;;;1269:95;1373:32;1392:12;1373:18;:32::i;:::-;-1:-1:-1;1589:1:0::1;1574:12;:16:::0;385:2011;;2912:187:25;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:25;;;-1:-1:-1;;;;;;3020:17:25;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;14:203:44:-;385:2011:0;;;;;;","linkReferences":{}},"deployedBytecode":{"object":"0x608060405234801561001057600080fd5b50600436106100575760003560e01c806308eb4bc31461005c578063715018a6146100715780638da5cb5b14610079578063d3a1c07114610099578063f2fde38b146100b0575b600080fd5b61006f61006a36600461022d565b6100c3565b005b61006f61015e565b6000546040516001600160a01b0390911681526020015b60405180910390f35b6100a260015481565b604051908152602001610090565b61006f6100be366004610246565b610172565b6100cb6101b0565b806000036100ec57604051632c03496560e21b815260040160405180910390fd5b6100f7600282610276565b1561011d5760405163cff917b960e01b8152600481018290526024015b60405180910390fd5b60015460408051918252602082018390527fc710b576f0e4b3f7a795b1879c5fbe339c5fbc5542f03ba09cb81254ef870ee8910160405180910390a1600155565b6101666101b0565b61017060006101dd565b565b61017a6101b0565b6001600160a01b0381166101a457604051631e4fbdf760e01b815260006004820152602401610114565b6101ad816101dd565b50565b6000546001600160a01b031633146101705760405163118cdaa760e01b8152336004820152602401610114565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561023f57600080fd5b5035919050565b60006020828403121561025857600080fd5b81356001600160a01b038116811461026f57600080fd5b9392505050565b60008261029357634e487b7160e01b600052601260045260246000fd5b50069056fea26469706673582212205bd08fb72696a4307029b83538be42d9f60dbb42ea1580498e08eedea37d6d2e64736f6c634300081b0033","sourceMap":"385:2011:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2054:340;;;;;;:::i;:::-;;:::i;:::-;;2293:101:25;;;:::i;1638:85::-;1684:7;1710:6;1638:85;;-1:-1:-1;;;;;1710:6:25;;;345:51:44;;333:2;318:18;1638:85:25;;;;;;;;515:27:0;;;;;;;;;553:25:44;;;541:2;526:18;515:27:0;407:177:44;2543:215:25;;;;;;:::i;:::-;;:::i;2054:340:0:-;1531:13:25;:11;:13::i;:::-;2135::0::1;2152:1;2135:18:::0;2131:68:::1;;2174:25;;-1:-1:-1::0;;;2174:25:0::1;;;;;;;;;;;2131:68;2213:17;2229:1;2213:13:::0;:17:::1;:::i;:::-;:22:::0;2209:80:::1;;2256:33;::::0;-1:-1:-1;;;2256:33:0;;::::1;::::0;::::1;553:25:44::0;;;526:18;;2256:33:0::1;;;;;;;;2209:80;2321:12;::::0;2305:44:::1;::::0;;1268:25:44;;;1324:2;1309:18;;1302:34;;;2305:44:0::1;::::0;1241:18:44;2305:44:0::1;;;;;;;2359:12;:28:::0;2054:340::o;2293:101:25:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;2543:215::-;1531:13;:11;:13::i;:::-;-1:-1:-1;;;;;2627:22:25;::::1;2623:91;;2672:31;::::0;-1:-1:-1;;;2672:31:25;;2700:1:::1;2672:31;::::0;::::1;345:51:44::0;318:18;;2672:31:25::1;199:203:44::0;2623:91:25::1;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;1796:162::-;1684:7;1710:6;-1:-1:-1;;;;;1710:6:25;735:10:33;1855:23:25;1851:101;;1901:40;;-1:-1:-1;;;1901:40:25;;735:10:33;1901:40:25;;;345:51:44;318:18;;1901:40:25;199:203:44;2912:187:25;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:25;;;-1:-1:-1;;;;;;3020:17:25;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;14:180:44:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:44;;14:180;-1:-1:-1;14:180:44:o;589:286::-;648:6;701:2;689:9;680:7;676:23;672:32;669:52;;;717:1;714;707:12;669:52;743:23;;-1:-1:-1;;;;;795:31:44;;785:42;;775:70;;841:1;838;831:12;775:70;864:5;589:286;-1:-1:-1;;;589:286:44:o;880:209::-;912:1;938;928:132;;982:10;977:3;973:20;970:1;963:31;1017:4;1014:1;1007:15;1045:4;1042:1;1035:15;928:132;-1:-1:-1;1074:9:44;;880:209::o","linkReferences":{}},"methodIdentifiers":{"owner()":"8da5cb5b","positiveEven()":"d3a1c071","renounceOwnership()":"715018a6","setPositiveEven(uint256)":"08eb4bc3","transferOwnership(address)":"f2fde38b"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_oddNumber\",\"type\":\"uint256\"}],\"name\":\"SetEvenToOddNumber\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SetPositiveNumberToZero\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_prevPositiveEven\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_newPositiveEven\",\"type\":\"uint256\"}],\"name\":\"PositiveEvenSet\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"positiveEven\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_positiveEven\",\"type\":\"uint256\"}],\"name\":\"setPositiveEven\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This contract includes the following functionality:  - Setting of the positive even number by the owner.  - Getting of a value of the set number.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"SetEvenToOddNumber(uint256)\":[{\"details\":\"Reverse when setting of `positiveEven` to an odd number (`_oddNumber`).\",\"params\":{\"_oddNumber\":\"An odd number attempted to be assigned to the variable `positiveEven`.\"}}],\"SetPositiveNumberToZero()\":[{\"details\":\"Reverse when setting of `positiveEven` to zero.\"}]},\"events\":{\"PositiveEvenSet(uint256,uint256)\":{\"details\":\"Emitted when the positive even number (`positiveEven`) is set to a value `_newPositiveEven`.\",\"params\":{\"_newPositiveEven\":\"The new value of `positiveEven` which was set.\",\"_prevPositiveEven\":\"The previous value of `positiveEven`.\"}}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner and the variable `positiveEven` with 2.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"setPositiveEven(uint256)\":{\"details\":\"Sets a value of the variable `positiveEven` to `_positiveEven`. Requirements:  - The caller should be the owner of this contract.  - `_positiveEven` should be a positive even number.\",\"params\":{\"_positiveEven\":\"A number that is assigned to `positiveEven`.\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"stateVariables\":{\"positiveEven\":{\"details\":\"A positive even number.\"}},\"title\":\"Positive Even Number Setter -- the contract which sets a value of the positive even number.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/PositiveEvenSetter.sol\":\"PositiveEvenSetter\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=node_modules/@openzeppelin/\",\":@uniswap/=node_modules/@uniswap/\",\":base64-sol/=node_modules/base64-sol/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\"]},\"sources\":{\"contracts/PositiveEvenSetter.sol\":{\"keccak256\":\"0x7bce895105fa9ef09a825c00924de64c1fbf7d9f0af8a3dc4d5134cd61167000\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4bdc1498aa81c42835a1fd26d5fd2e599a6d3e2d9f730c18d212dffe0a0ebf3b\",\"dweb:/ipfs/QmPUdcLwfbhceiEeJhrVvCebvVQ1oviEBzBXcFWSF2K5Z4\"]},\"node_modules/@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.27+commit.40a35a09"},"language":"Solidity","output":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"type":"error","name":"OwnableInvalidOwner"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"type":"error","name":"OwnableUnauthorizedAccount"},{"inputs":[{"internalType":"uint256","name":"_oddNumber","type":"uint256"}],"type":"error","name":"SetEvenToOddNumber"},{"inputs":[],"type":"error","name":"SetPositiveNumberToZero"},{"inputs":[{"internalType":"address","name":"previousOwner","type":"address","indexed":true},{"internalType":"address","name":"newOwner","type":"address","indexed":true}],"type":"event","name":"OwnershipTransferred","anonymous":false},{"inputs":[{"internalType":"uint256","name":"_prevPositiveEven","type":"uint256","indexed":false},{"internalType":"uint256","name":"_newPositiveEven","type":"uint256","indexed":false}],"type":"event","name":"PositiveEvenSet","anonymous":false},{"inputs":[],"stateMutability":"view","type":"function","name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"positiveEven","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"renounceOwnership"},{"inputs":[{"internalType":"uint256","name":"_positiveEven","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"setPositiveEven"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"transferOwnership"}],"devdoc":{"kind":"dev","methods":{"constructor":{"details":"Initializes the contract setting the deployer as the initial owner and the variable `positiveEven` with 2."},"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"setPositiveEven(uint256)":{"details":"Sets a value of the variable `positiveEven` to `_positiveEven`. Requirements:  - The caller should be the owner of this contract.  - `_positiveEven` should be a positive even number.","params":{"_positiveEven":"A number that is assigned to `positiveEven`."}},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"remappings":["@openzeppelin/=node_modules/@openzeppelin/","@uniswap/=node_modules/@uniswap/","base64-sol/=node_modules/base64-sol/","eth-gas-reporter/=node_modules/eth-gas-reporter/","forge-std/=lib/forge-std/src/","hardhat/=node_modules/hardhat/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"contracts/PositiveEvenSetter.sol":"PositiveEvenSetter"},"evmVersion":"paris","libraries":{}},"sources":{"contracts/PositiveEvenSetter.sol":{"keccak256":"0x7bce895105fa9ef09a825c00924de64c1fbf7d9f0af8a3dc4d5134cd61167000","urls":["bzz-raw://4bdc1498aa81c42835a1fd26d5fd2e599a6d3e2d9f730c18d212dffe0a0ebf3b","dweb:/ipfs/QmPUdcLwfbhceiEeJhrVvCebvVQ1oviEBzBXcFWSF2K5Z4"],"license":"MIT"},"node_modules/@openzeppelin/contracts/access/Ownable.sol":{"keccak256":"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb","urls":["bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6","dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a"],"license":"MIT"},"node_modules/@openzeppelin/contracts/utils/Context.sol":{"keccak256":"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2","urls":["bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12","dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF"],"license":"MIT"}},"version":1},"ast":{"absolutePath":"contracts/PositiveEvenSetter.sol","id":73,"exportedSymbols":{"Context":[40233],"Ownable":[39232],"PositiveEvenSetter":[72]},"nodeType":"SourceUnit","src":"33:2364:0","nodes":[{"id":1,"nodeType":"PragmaDirective","src":"33:23:0","nodes":[],"literals":["solidity","0.8",".27"]},{"id":2,"nodeType":"ImportDirective","src":"58:52:0","nodes":[],"absolutePath":"node_modules/@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","nameLocation":"-1:-1:-1","scope":73,"sourceUnit":39233,"symbolAliases":[],"unitAlias":""},{"id":72,"nodeType":"ContractDefinition","src":"385:2011:0","nodes":[{"id":8,"nodeType":"VariableDeclaration","src":"515:27:0","nodes":[],"constant":false,"documentation":{"id":6,"nodeType":"StructuredDocumentation","src":"478:32:0","text":"@dev A positive even number."},"functionSelector":"d3a1c071","mutability":"mutable","name":"positiveEven","nameLocation":"530:12:0","scope":72,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7,"name":"uint256","nodeType":"ElementaryTypeName","src":"515:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"id":11,"nodeType":"ErrorDefinition","src":"657:32:0","nodes":[],"documentation":{"id":9,"nodeType":"StructuredDocumentation","src":"596:56:0","text":"@dev Reverse when setting of `positiveEven` to zero."},"errorSelector":"b00d2594","name":"SetPositiveNumberToZero","nameLocation":"663:23:0","parameters":{"id":10,"nodeType":"ParameterList","parameters":[],"src":"686:2:0"}},{"id":16,"nodeType":"ErrorDefinition","src":"900:45:0","nodes":[],"documentation":{"id":12,"nodeType":"StructuredDocumentation","src":"695:200:0","text":" @dev Reverse when setting of `positiveEven` to an odd number (`_oddNumber`).\n @param _oddNumber   An odd number attempted to be assigned to the variable `positiveEven`."},"errorSelector":"cff917b9","name":"SetEvenToOddNumber","nameLocation":"906:18:0","parameters":{"id":15,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14,"mutability":"mutable","name":"_oddNumber","nameLocation":"933:10:0","nodeType":"VariableDeclaration","scope":16,"src":"925:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13,"name":"uint256","nodeType":"ElementaryTypeName","src":"925:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"924:20:0"}},{"id":23,"nodeType":"EventDefinition","src":"1278:75:0","nodes":[],"anonymous":false,"documentation":{"id":17,"nodeType":"StructuredDocumentation","src":"998:275:0","text":" @dev Emitted when the positive even number (`positiveEven`) is set to a value `_newPositiveEven`.\n @param _prevPositiveEven   The previous value of `positiveEven`.\n @param _newPositiveEven   The new value of `positiveEven` which was set."},"eventSelector":"c710b576f0e4b3f7a795b1879c5fbe339c5fbc5542f03ba09cb81254ef870ee8","name":"PositiveEvenSet","nameLocation":"1284:15:0","parameters":{"id":22,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19,"indexed":false,"mutability":"mutable","name":"_prevPositiveEven","nameLocation":"1308:17:0","nodeType":"VariableDeclaration","scope":23,"src":"1300:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18,"name":"uint256","nodeType":"ElementaryTypeName","src":"1300:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":21,"indexed":false,"mutability":"mutable","name":"_newPositiveEven","nameLocation":"1335:16:0","nodeType":"VariableDeclaration","scope":23,"src":"1327:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":20,"name":"uint256","nodeType":"ElementaryTypeName","src":"1327:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1299:53:0"}},{"id":36,"nodeType":"FunctionDefinition","src":"1530:115:0","nodes":[],"body":{"id":35,"nodeType":"Block","src":"1564:81:0","nodes":[],"statements":[{"expression":{"id":33,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":31,"name":"positiveEven","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"1574:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"32","id":32,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1589:1:0","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"1574:16:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":34,"nodeType":"ExpressionStatement","src":"1574:16:0"}]},"documentation":{"id":24,"nodeType":"StructuredDocumentation","src":"1410:115:0","text":"@dev Initializes the contract setting the deployer as the initial owner and the variable `positiveEven` with 2."},"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"expression":{"id":27,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1552:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":28,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1556:6:0","memberName":"sender","nodeType":"MemberAccess","src":"1552:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":29,"kind":"baseConstructorSpecifier","modifierName":{"id":26,"name":"Ownable","nameLocations":["1544:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":39232,"src":"1544:7:0"},"nodeType":"ModifierInvocation","src":"1544:19:0"}],"name":"","nameLocation":"-1:-1:-1","parameters":{"id":25,"nodeType":"ParameterList","parameters":[],"src":"1541:2:0"},"returnParameters":{"id":30,"nodeType":"ParameterList","parameters":[],"src":"1564:0:0"},"scope":72,"stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"id":71,"nodeType":"FunctionDefinition","src":"2054:340:0","nodes":[],"body":{"id":70,"nodeType":"Block","src":"2121:273:0","nodes":[],"statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":46,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":44,"name":"_positiveEven","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":39,"src":"2135:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":45,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2152:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2135:18:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":50,"nodeType":"IfStatement","src":"2131:68:0","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":47,"name":"SetPositiveNumberToZero","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11,"src":"2174:23:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":48,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2174:25:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":49,"nodeType":"RevertStatement","src":"2167:32:0"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":55,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":53,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":51,"name":"_positiveEven","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":39,"src":"2213:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"32","id":52,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2229:1:0","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2213:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":54,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2234:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2213:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":60,"nodeType":"IfStatement","src":"2209:80:0","trueBody":{"errorCall":{"arguments":[{"id":57,"name":"_positiveEven","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":39,"src":"2275:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":56,"name":"SetEvenToOddNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":16,"src":"2256:18:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$_t_error_$","typeString":"function (uint256) pure returns (error)"}},"id":58,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2256:33:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":59,"nodeType":"RevertStatement","src":"2249:40:0"}},{"eventCall":{"arguments":[{"id":62,"name":"positiveEven","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"2321:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":63,"name":"_positiveEven","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":39,"src":"2335:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":61,"name":"PositiveEvenSet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":23,"src":"2305:15:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256)"}},"id":64,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2305:44:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":65,"nodeType":"EmitStatement","src":"2300:49:0"},{"expression":{"id":68,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":66,"name":"positiveEven","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"2359:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":67,"name":"_positiveEven","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":39,"src":"2374:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2359:28:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":69,"nodeType":"ExpressionStatement","src":"2359:28:0"}]},"documentation":{"id":37,"nodeType":"StructuredDocumentation","src":"1710:316:0","text":" @dev Sets a value of the variable `positiveEven` to `_positiveEven`.\n Requirements:\n  - The caller should be the owner of this contract.\n  - `_positiveEven` should be a positive even number.\n @param _positiveEven   A number that is assigned to `positiveEven`."},"functionSelector":"08eb4bc3","implemented":true,"kind":"function","modifiers":[{"id":42,"kind":"modifierInvocation","modifierName":{"id":41,"name":"onlyOwner","nameLocations":["2111:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":39143,"src":"2111:9:0"},"nodeType":"ModifierInvocation","src":"2111:9:0"}],"name":"setPositiveEven","nameLocation":"2063:15:0","parameters":{"id":40,"nodeType":"ParameterList","parameters":[{"constant":false,"id":39,"mutability":"mutable","name":"_positiveEven","nameLocation":"2087:13:0","nodeType":"VariableDeclaration","scope":71,"src":"2079:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":38,"name":"uint256","nodeType":"ElementaryTypeName","src":"2079:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2078:23:0"},"returnParameters":{"id":43,"nodeType":"ParameterList","parameters":[],"src":"2121:0:0"},"scope":72,"stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"abstract":false,"baseContracts":[{"baseName":{"id":4,"name":"Ownable","nameLocations":["416:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":39232,"src":"416:7:0"},"id":5,"nodeType":"InheritanceSpecifier","src":"416:7:0"}],"canonicalName":"PositiveEvenSetter","contractDependencies":[],"contractKind":"contract","documentation":{"id":3,"nodeType":"StructuredDocumentation","src":"112:272:0","text":" @title Positive Even Number Setter -- the contract which sets a value of the positive even number.\n @dev This contract includes the following functionality:\n  - Setting of the positive even number by the owner.\n  - Getting of a value of the set number."},"fullyImplemented":true,"linearizedBaseContracts":[72,39232,40233],"name":"PositiveEvenSetter","nameLocation":"394:18:0","scope":73,"usedErrors":[11,16,39098,39103],"usedEvents":[23,39109]}],"license":"MIT"},"id":0}