{"abi":[{"type":"function","name":"accesses","inputs":[{"name":"target","type":"address","internalType":"address"}],"outputs":[{"name":"readSlots","type":"bytes32[]","internalType":"bytes32[]"},{"name":"writeSlots","type":"bytes32[]","internalType":"bytes32[]"}],"stateMutability":"nonpayable"},{"type":"function","name":"addr","inputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"keyAddr","type":"address","internalType":"address"}],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqAbs","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"maxDelta","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqAbs","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"maxDelta","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqAbs","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"maxDelta","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqAbs","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"maxDelta","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqAbsDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"maxDelta","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqAbsDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"maxDelta","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqAbsDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"maxDelta","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqAbsDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"maxDelta","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqRel","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"maxPercentDelta","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqRel","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"maxPercentDelta","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqRel","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"maxPercentDelta","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqRel","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"maxPercentDelta","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqRelDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"maxPercentDelta","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqRelDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"maxPercentDelta","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqRelDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"maxPercentDelta","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqRelDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"maxPercentDelta","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bytes32[]","internalType":"bytes32[]"},{"name":"right","type":"bytes32[]","internalType":"bytes32[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"int256[]","internalType":"int256[]"},{"name":"right","type":"int256[]","internalType":"int256[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"address","internalType":"address"},{"name":"right","type":"address","internalType":"address"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"string","internalType":"string"},{"name":"right","type":"string","internalType":"string"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"address[]","internalType":"address[]"},{"name":"right","type":"address[]","internalType":"address[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"address[]","internalType":"address[]"},{"name":"right","type":"address[]","internalType":"address[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bool","internalType":"bool"},{"name":"right","type":"bool","internalType":"bool"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"address","internalType":"address"},{"name":"right","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"uint256[]","internalType":"uint256[]"},{"name":"right","type":"uint256[]","internalType":"uint256[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bool[]","internalType":"bool[]"},{"name":"right","type":"bool[]","internalType":"bool[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"int256[]","internalType":"int256[]"},{"name":"right","type":"int256[]","internalType":"int256[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bytes32","internalType":"bytes32"},{"name":"right","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"uint256[]","internalType":"uint256[]"},{"name":"right","type":"uint256[]","internalType":"uint256[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bytes","internalType":"bytes"},{"name":"right","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bytes32","internalType":"bytes32"},{"name":"right","type":"bytes32","internalType":"bytes32"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"string[]","internalType":"string[]"},{"name":"right","type":"string[]","internalType":"string[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bytes32[]","internalType":"bytes32[]"},{"name":"right","type":"bytes32[]","internalType":"bytes32[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bytes","internalType":"bytes"},{"name":"right","type":"bytes","internalType":"bytes"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bool[]","internalType":"bool[]"},{"name":"right","type":"bool[]","internalType":"bool[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bytes[]","internalType":"bytes[]"},{"name":"right","type":"bytes[]","internalType":"bytes[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"string[]","internalType":"string[]"},{"name":"right","type":"string[]","internalType":"string[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"string","internalType":"string"},{"name":"right","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bytes[]","internalType":"bytes[]"},{"name":"right","type":"bytes[]","internalType":"bytes[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bool","internalType":"bool"},{"name":"right","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEqDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEqDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEqDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEqDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertFalse","inputs":[{"name":"condition","type":"bool","internalType":"bool"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertFalse","inputs":[{"name":"condition","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGe","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGe","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGe","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGe","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGeDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGeDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGeDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGeDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGt","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGt","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGt","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGt","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGtDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGtDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGtDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGtDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLe","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLe","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLe","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLe","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLeDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLeDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLeDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLeDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLt","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLt","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLt","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLt","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLtDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLtDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLtDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLtDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bytes32[]","internalType":"bytes32[]"},{"name":"right","type":"bytes32[]","internalType":"bytes32[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"int256[]","internalType":"int256[]"},{"name":"right","type":"int256[]","internalType":"int256[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bool","internalType":"bool"},{"name":"right","type":"bool","internalType":"bool"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bytes[]","internalType":"bytes[]"},{"name":"right","type":"bytes[]","internalType":"bytes[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bool","internalType":"bool"},{"name":"right","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bool[]","internalType":"bool[]"},{"name":"right","type":"bool[]","internalType":"bool[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bytes","internalType":"bytes"},{"name":"right","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"address[]","internalType":"address[]"},{"name":"right","type":"address[]","internalType":"address[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"uint256[]","internalType":"uint256[]"},{"name":"right","type":"uint256[]","internalType":"uint256[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bool[]","internalType":"bool[]"},{"name":"right","type":"bool[]","internalType":"bool[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"string","internalType":"string"},{"name":"right","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"address[]","internalType":"address[]"},{"name":"right","type":"address[]","internalType":"address[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"string","internalType":"string"},{"name":"right","type":"string","internalType":"string"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"address","internalType":"address"},{"name":"right","type":"address","internalType":"address"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bytes32","internalType":"bytes32"},{"name":"right","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bytes","internalType":"bytes"},{"name":"right","type":"bytes","internalType":"bytes"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"uint256[]","internalType":"uint256[]"},{"name":"right","type":"uint256[]","internalType":"uint256[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"address","internalType":"address"},{"name":"right","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bytes32","internalType":"bytes32"},{"name":"right","type":"bytes32","internalType":"bytes32"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"string[]","internalType":"string[]"},{"name":"right","type":"string[]","internalType":"string[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bytes32[]","internalType":"bytes32[]"},{"name":"right","type":"bytes32[]","internalType":"bytes32[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"string[]","internalType":"string[]"},{"name":"right","type":"string[]","internalType":"string[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"int256[]","internalType":"int256[]"},{"name":"right","type":"int256[]","internalType":"int256[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bytes[]","internalType":"bytes[]"},{"name":"right","type":"bytes[]","internalType":"bytes[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEqDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEqDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEqDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEqDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertTrue","inputs":[{"name":"condition","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertTrue","inputs":[{"name":"condition","type":"bool","internalType":"bool"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assume","inputs":[{"name":"condition","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"breakpoint","inputs":[{"name":"char","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"breakpoint","inputs":[{"name":"char","type":"string","internalType":"string"},{"name":"value","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"broadcast","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"broadcast","inputs":[{"name":"signer","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"broadcast","inputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"broadcastRawTransaction","inputs":[{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"closeFile","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"computeCreate2Address","inputs":[{"name":"salt","type":"bytes32","internalType":"bytes32"},{"name":"initCodeHash","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"pure"},{"type":"function","name":"computeCreate2Address","inputs":[{"name":"salt","type":"bytes32","internalType":"bytes32"},{"name":"initCodeHash","type":"bytes32","internalType":"bytes32"},{"name":"deployer","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"pure"},{"type":"function","name":"computeCreateAddress","inputs":[{"name":"deployer","type":"address","internalType":"address"},{"name":"nonce","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"pure"},{"type":"function","name":"copyFile","inputs":[{"name":"from","type":"string","internalType":"string"},{"name":"to","type":"string","internalType":"string"}],"outputs":[{"name":"copied","type":"uint64","internalType":"uint64"}],"stateMutability":"nonpayable"},{"type":"function","name":"createDir","inputs":[{"name":"path","type":"string","internalType":"string"},{"name":"recursive","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"createWallet","inputs":[{"name":"walletLabel","type":"string","internalType":"string"}],"outputs":[{"name":"wallet","type":"tuple","internalType":"struct VmSafe.Wallet","components":[{"name":"addr","type":"address","internalType":"address"},{"name":"publicKeyX","type":"uint256","internalType":"uint256"},{"name":"publicKeyY","type":"uint256","internalType":"uint256"},{"name":"privateKey","type":"uint256","internalType":"uint256"}]}],"stateMutability":"nonpayable"},{"type":"function","name":"createWallet","inputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"wallet","type":"tuple","internalType":"struct VmSafe.Wallet","components":[{"name":"addr","type":"address","internalType":"address"},{"name":"publicKeyX","type":"uint256","internalType":"uint256"},{"name":"publicKeyY","type":"uint256","internalType":"uint256"},{"name":"privateKey","type":"uint256","internalType":"uint256"}]}],"stateMutability":"nonpayable"},{"type":"function","name":"createWallet","inputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"},{"name":"walletLabel","type":"string","internalType":"string"}],"outputs":[{"name":"wallet","type":"tuple","internalType":"struct VmSafe.Wallet","components":[{"name":"addr","type":"address","internalType":"address"},{"name":"publicKeyX","type":"uint256","internalType":"uint256"},{"name":"publicKeyY","type":"uint256","internalType":"uint256"},{"name":"privateKey","type":"uint256","internalType":"uint256"}]}],"stateMutability":"nonpayable"},{"type":"function","name":"deployCode","inputs":[{"name":"artifactPath","type":"string","internalType":"string"},{"name":"constructorArgs","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"deployedAddress","type":"address","internalType":"address"}],"stateMutability":"nonpayable"},{"type":"function","name":"deployCode","inputs":[{"name":"artifactPath","type":"string","internalType":"string"}],"outputs":[{"name":"deployedAddress","type":"address","internalType":"address"}],"stateMutability":"nonpayable"},{"type":"function","name":"deriveKey","inputs":[{"name":"mnemonic","type":"string","internalType":"string"},{"name":"derivationPath","type":"string","internalType":"string"},{"name":"index","type":"uint32","internalType":"uint32"},{"name":"language","type":"string","internalType":"string"}],"outputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"deriveKey","inputs":[{"name":"mnemonic","type":"string","internalType":"string"},{"name":"index","type":"uint32","internalType":"uint32"},{"name":"language","type":"string","internalType":"string"}],"outputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"deriveKey","inputs":[{"name":"mnemonic","type":"string","internalType":"string"},{"name":"index","type":"uint32","internalType":"uint32"}],"outputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"deriveKey","inputs":[{"name":"mnemonic","type":"string","internalType":"string"},{"name":"derivationPath","type":"string","internalType":"string"},{"name":"index","type":"uint32","internalType":"uint32"}],"outputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"ensNamehash","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"envAddress","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"envAddress","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"address[]","internalType":"address[]"}],"stateMutability":"view"},{"type":"function","name":"envBool","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"envBool","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"bool[]","internalType":"bool[]"}],"stateMutability":"view"},{"type":"function","name":"envBytes","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"bytes","internalType":"bytes"}],"stateMutability":"view"},{"type":"function","name":"envBytes","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"bytes[]","internalType":"bytes[]"}],"stateMutability":"view"},{"type":"function","name":"envBytes32","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"bytes32[]","internalType":"bytes32[]"}],"stateMutability":"view"},{"type":"function","name":"envBytes32","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"envExists","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"result","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"envInt","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"int256[]","internalType":"int256[]"}],"stateMutability":"view"},{"type":"function","name":"envInt","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"int256","internalType":"int256"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"},{"name":"defaultValue","type":"bytes32[]","internalType":"bytes32[]"}],"outputs":[{"name":"value","type":"bytes32[]","internalType":"bytes32[]"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"},{"name":"defaultValue","type":"int256[]","internalType":"int256[]"}],"outputs":[{"name":"value","type":"int256[]","internalType":"int256[]"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"defaultValue","type":"bool","internalType":"bool"}],"outputs":[{"name":"value","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"defaultValue","type":"address","internalType":"address"}],"outputs":[{"name":"value","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"defaultValue","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"value","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"},{"name":"defaultValue","type":"bytes[]","internalType":"bytes[]"}],"outputs":[{"name":"value","type":"bytes[]","internalType":"bytes[]"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"},{"name":"defaultValue","type":"uint256[]","internalType":"uint256[]"}],"outputs":[{"name":"value","type":"uint256[]","internalType":"uint256[]"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"},{"name":"defaultValue","type":"string[]","internalType":"string[]"}],"outputs":[{"name":"value","type":"string[]","internalType":"string[]"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"defaultValue","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"value","type":"bytes","internalType":"bytes"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"defaultValue","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"value","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"defaultValue","type":"int256","internalType":"int256"}],"outputs":[{"name":"value","type":"int256","internalType":"int256"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"},{"name":"defaultValue","type":"address[]","internalType":"address[]"}],"outputs":[{"name":"value","type":"address[]","internalType":"address[]"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"defaultValue","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"},{"name":"defaultValue","type":"bool[]","internalType":"bool[]"}],"outputs":[{"name":"value","type":"bool[]","internalType":"bool[]"}],"stateMutability":"view"},{"type":"function","name":"envString","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"string[]","internalType":"string[]"}],"stateMutability":"view"},{"type":"function","name":"envString","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"envUint","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"envUint","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"uint256[]","internalType":"uint256[]"}],"stateMutability":"view"},{"type":"function","name":"eth_getLogs","inputs":[{"name":"fromBlock","type":"uint256","internalType":"uint256"},{"name":"toBlock","type":"uint256","internalType":"uint256"},{"name":"target","type":"address","internalType":"address"},{"name":"topics","type":"bytes32[]","internalType":"bytes32[]"}],"outputs":[{"name":"logs","type":"tuple[]","internalType":"struct VmSafe.EthGetLogs[]","components":[{"name":"emitter","type":"address","internalType":"address"},{"name":"topics","type":"bytes32[]","internalType":"bytes32[]"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"blockHash","type":"bytes32","internalType":"bytes32"},{"name":"blockNumber","type":"uint64","internalType":"uint64"},{"name":"transactionHash","type":"bytes32","internalType":"bytes32"},{"name":"transactionIndex","type":"uint64","internalType":"uint64"},{"name":"logIndex","type":"uint256","internalType":"uint256"},{"name":"removed","type":"bool","internalType":"bool"}]}],"stateMutability":"nonpayable"},{"type":"function","name":"exists","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[{"name":"result","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"ffi","inputs":[{"name":"commandInput","type":"string[]","internalType":"string[]"}],"outputs":[{"name":"result","type":"bytes","internalType":"bytes"}],"stateMutability":"nonpayable"},{"type":"function","name":"fsMetadata","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[{"name":"metadata","type":"tuple","internalType":"struct VmSafe.FsMetadata","components":[{"name":"isDir","type":"bool","internalType":"bool"},{"name":"isSymlink","type":"bool","internalType":"bool"},{"name":"length","type":"uint256","internalType":"uint256"},{"name":"readOnly","type":"bool","internalType":"bool"},{"name":"modified","type":"uint256","internalType":"uint256"},{"name":"accessed","type":"uint256","internalType":"uint256"},{"name":"created","type":"uint256","internalType":"uint256"}]}],"stateMutability":"view"},{"type":"function","name":"getBlobBaseFee","inputs":[],"outputs":[{"name":"blobBaseFee","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getBlockNumber","inputs":[],"outputs":[{"name":"height","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getBlockTimestamp","inputs":[],"outputs":[{"name":"timestamp","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getCode","inputs":[{"name":"artifactPath","type":"string","internalType":"string"}],"outputs":[{"name":"creationBytecode","type":"bytes","internalType":"bytes"}],"stateMutability":"view"},{"type":"function","name":"getDeployedCode","inputs":[{"name":"artifactPath","type":"string","internalType":"string"}],"outputs":[{"name":"runtimeBytecode","type":"bytes","internalType":"bytes"}],"stateMutability":"view"},{"type":"function","name":"getFoundryVersion","inputs":[],"outputs":[{"name":"version","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"getLabel","inputs":[{"name":"account","type":"address","internalType":"address"}],"outputs":[{"name":"currentLabel","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"getMappingKeyAndParentOf","inputs":[{"name":"target","type":"address","internalType":"address"},{"name":"elementSlot","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"found","type":"bool","internalType":"bool"},{"name":"key","type":"bytes32","internalType":"bytes32"},{"name":"parent","type":"bytes32","internalType":"bytes32"}],"stateMutability":"nonpayable"},{"type":"function","name":"getMappingLength","inputs":[{"name":"target","type":"address","internalType":"address"},{"name":"mappingSlot","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"length","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"getMappingSlotAt","inputs":[{"name":"target","type":"address","internalType":"address"},{"name":"mappingSlot","type":"bytes32","internalType":"bytes32"},{"name":"idx","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"value","type":"bytes32","internalType":"bytes32"}],"stateMutability":"nonpayable"},{"type":"function","name":"getNonce","inputs":[{"name":"account","type":"address","internalType":"address"}],"outputs":[{"name":"nonce","type":"uint64","internalType":"uint64"}],"stateMutability":"view"},{"type":"function","name":"getNonce","inputs":[{"name":"wallet","type":"tuple","internalType":"struct VmSafe.Wallet","components":[{"name":"addr","type":"address","internalType":"address"},{"name":"publicKeyX","type":"uint256","internalType":"uint256"},{"name":"publicKeyY","type":"uint256","internalType":"uint256"},{"name":"privateKey","type":"uint256","internalType":"uint256"}]}],"outputs":[{"name":"nonce","type":"uint64","internalType":"uint64"}],"stateMutability":"nonpayable"},{"type":"function","name":"getRecordedLogs","inputs":[],"outputs":[{"name":"logs","type":"tuple[]","internalType":"struct VmSafe.Log[]","components":[{"name":"topics","type":"bytes32[]","internalType":"bytes32[]"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"emitter","type":"address","internalType":"address"}]}],"stateMutability":"nonpayable"},{"type":"function","name":"indexOf","inputs":[{"name":"input","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"isContext","inputs":[{"name":"context","type":"uint8","internalType":"enum VmSafe.ForgeContext"}],"outputs":[{"name":"result","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"isDir","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[{"name":"result","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"isFile","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[{"name":"result","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"keyExists","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"keyExistsJson","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"keyExistsToml","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"label","inputs":[{"name":"account","type":"address","internalType":"address"},{"name":"newLabel","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"lastCallGas","inputs":[],"outputs":[{"name":"gas","type":"tuple","internalType":"struct VmSafe.Gas","components":[{"name":"gasLimit","type":"uint64","internalType":"uint64"},{"name":"gasTotalUsed","type":"uint64","internalType":"uint64"},{"name":"gasMemoryUsed","type":"uint64","internalType":"uint64"},{"name":"gasRefunded","type":"int64","internalType":"int64"},{"name":"gasRemaining","type":"uint64","internalType":"uint64"}]}],"stateMutability":"view"},{"type":"function","name":"load","inputs":[{"name":"target","type":"address","internalType":"address"},{"name":"slot","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"data","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"parseAddress","inputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"outputs":[{"name":"parsedValue","type":"address","internalType":"address"}],"stateMutability":"pure"},{"type":"function","name":"parseBool","inputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"outputs":[{"name":"parsedValue","type":"bool","internalType":"bool"}],"stateMutability":"pure"},{"type":"function","name":"parseBytes","inputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"outputs":[{"name":"parsedValue","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseBytes32","inputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"outputs":[{"name":"parsedValue","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"parseInt","inputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"outputs":[{"name":"parsedValue","type":"int256","internalType":"int256"}],"stateMutability":"pure"},{"type":"function","name":"parseJson","inputs":[{"name":"json","type":"string","internalType":"string"}],"outputs":[{"name":"abiEncodedData","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseJson","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"abiEncodedData","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonAddress","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonAddressArray","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"address[]","internalType":"address[]"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonBool","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonBoolArray","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bool[]","internalType":"bool[]"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonBytes","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonBytes32","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonBytes32Array","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes32[]","internalType":"bytes32[]"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonBytesArray","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes[]","internalType":"bytes[]"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonInt","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"int256","internalType":"int256"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonIntArray","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"int256[]","internalType":"int256[]"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonKeys","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"keys","type":"string[]","internalType":"string[]"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonString","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonStringArray","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"string[]","internalType":"string[]"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonType","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"typeDescription","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonType","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"},{"name":"typeDescription","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonTypeArray","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"},{"name":"typeDescription","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonUint","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonUintArray","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"uint256[]","internalType":"uint256[]"}],"stateMutability":"pure"},{"type":"function","name":"parseToml","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"abiEncodedData","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseToml","inputs":[{"name":"toml","type":"string","internalType":"string"}],"outputs":[{"name":"abiEncodedData","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlAddress","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlAddressArray","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"address[]","internalType":"address[]"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlBool","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlBoolArray","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bool[]","internalType":"bool[]"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlBytes","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlBytes32","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlBytes32Array","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes32[]","internalType":"bytes32[]"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlBytesArray","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes[]","internalType":"bytes[]"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlInt","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"int256","internalType":"int256"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlIntArray","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"int256[]","internalType":"int256[]"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlKeys","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"keys","type":"string[]","internalType":"string[]"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlString","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlStringArray","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"string[]","internalType":"string[]"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlUint","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlUintArray","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"uint256[]","internalType":"uint256[]"}],"stateMutability":"pure"},{"type":"function","name":"parseUint","inputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"outputs":[{"name":"parsedValue","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"pauseGasMetering","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"projectRoot","inputs":[],"outputs":[{"name":"path","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"prompt","inputs":[{"name":"promptText","type":"string","internalType":"string"}],"outputs":[{"name":"input","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"promptAddress","inputs":[{"name":"promptText","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"nonpayable"},{"type":"function","name":"promptSecret","inputs":[{"name":"promptText","type":"string","internalType":"string"}],"outputs":[{"name":"input","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"promptSecretUint","inputs":[{"name":"promptText","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"promptUint","inputs":[{"name":"promptText","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"randomAddress","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"nonpayable"},{"type":"function","name":"randomUint","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"randomUint","inputs":[{"name":"min","type":"uint256","internalType":"uint256"},{"name":"max","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"readDir","inputs":[{"name":"path","type":"string","internalType":"string"},{"name":"maxDepth","type":"uint64","internalType":"uint64"}],"outputs":[{"name":"entries","type":"tuple[]","internalType":"struct VmSafe.DirEntry[]","components":[{"name":"errorMessage","type":"string","internalType":"string"},{"name":"path","type":"string","internalType":"string"},{"name":"depth","type":"uint64","internalType":"uint64"},{"name":"isDir","type":"bool","internalType":"bool"},{"name":"isSymlink","type":"bool","internalType":"bool"}]}],"stateMutability":"view"},{"type":"function","name":"readDir","inputs":[{"name":"path","type":"string","internalType":"string"},{"name":"maxDepth","type":"uint64","internalType":"uint64"},{"name":"followLinks","type":"bool","internalType":"bool"}],"outputs":[{"name":"entries","type":"tuple[]","internalType":"struct VmSafe.DirEntry[]","components":[{"name":"errorMessage","type":"string","internalType":"string"},{"name":"path","type":"string","internalType":"string"},{"name":"depth","type":"uint64","internalType":"uint64"},{"name":"isDir","type":"bool","internalType":"bool"},{"name":"isSymlink","type":"bool","internalType":"bool"}]}],"stateMutability":"view"},{"type":"function","name":"readDir","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[{"name":"entries","type":"tuple[]","internalType":"struct VmSafe.DirEntry[]","components":[{"name":"errorMessage","type":"string","internalType":"string"},{"name":"path","type":"string","internalType":"string"},{"name":"depth","type":"uint64","internalType":"uint64"},{"name":"isDir","type":"bool","internalType":"bool"},{"name":"isSymlink","type":"bool","internalType":"bool"}]}],"stateMutability":"view"},{"type":"function","name":"readFile","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[{"name":"data","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"readFileBinary","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[{"name":"data","type":"bytes","internalType":"bytes"}],"stateMutability":"view"},{"type":"function","name":"readLine","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[{"name":"line","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"readLink","inputs":[{"name":"linkPath","type":"string","internalType":"string"}],"outputs":[{"name":"targetPath","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"record","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"recordLogs","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"rememberKey","inputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"keyAddr","type":"address","internalType":"address"}],"stateMutability":"nonpayable"},{"type":"function","name":"removeDir","inputs":[{"name":"path","type":"string","internalType":"string"},{"name":"recursive","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"removeFile","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"replace","inputs":[{"name":"input","type":"string","internalType":"string"},{"name":"from","type":"string","internalType":"string"},{"name":"to","type":"string","internalType":"string"}],"outputs":[{"name":"output","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"resumeGasMetering","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"rpc","inputs":[{"name":"urlOrAlias","type":"string","internalType":"string"},{"name":"method","type":"string","internalType":"string"},{"name":"params","type":"string","internalType":"string"}],"outputs":[{"name":"data","type":"bytes","internalType":"bytes"}],"stateMutability":"nonpayable"},{"type":"function","name":"rpc","inputs":[{"name":"method","type":"string","internalType":"string"},{"name":"params","type":"string","internalType":"string"}],"outputs":[{"name":"data","type":"bytes","internalType":"bytes"}],"stateMutability":"nonpayable"},{"type":"function","name":"rpcUrl","inputs":[{"name":"rpcAlias","type":"string","internalType":"string"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"rpcUrlStructs","inputs":[],"outputs":[{"name":"urls","type":"tuple[]","internalType":"struct VmSafe.Rpc[]","components":[{"name":"key","type":"string","internalType":"string"},{"name":"url","type":"string","internalType":"string"}]}],"stateMutability":"view"},{"type":"function","name":"rpcUrls","inputs":[],"outputs":[{"name":"urls","type":"string[2][]","internalType":"string[2][]"}],"stateMutability":"view"},{"type":"function","name":"serializeAddress","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"values","type":"address[]","internalType":"address[]"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeAddress","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"value","type":"address","internalType":"address"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeBool","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"values","type":"bool[]","internalType":"bool[]"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeBool","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"value","type":"bool","internalType":"bool"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeBytes","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"values","type":"bytes[]","internalType":"bytes[]"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeBytes","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"value","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeBytes32","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"values","type":"bytes32[]","internalType":"bytes32[]"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeBytes32","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"value","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeInt","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"value","type":"int256","internalType":"int256"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeInt","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"values","type":"int256[]","internalType":"int256[]"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeJson","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"value","type":"string","internalType":"string"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeJsonType","inputs":[{"name":"typeDescription","type":"string","internalType":"string"},{"name":"value","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"serializeJsonType","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"typeDescription","type":"string","internalType":"string"},{"name":"value","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeString","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"values","type":"string[]","internalType":"string[]"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeString","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"value","type":"string","internalType":"string"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeUint","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"value","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeUint","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"values","type":"uint256[]","internalType":"uint256[]"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeUintToHex","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"value","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"setEnv","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"value","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"sign","inputs":[{"name":"digest","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"v","type":"uint8","internalType":"uint8"},{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"s","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"sign","inputs":[{"name":"signer","type":"address","internalType":"address"},{"name":"digest","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"v","type":"uint8","internalType":"uint8"},{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"s","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"sign","inputs":[{"name":"wallet","type":"tuple","internalType":"struct VmSafe.Wallet","components":[{"name":"addr","type":"address","internalType":"address"},{"name":"publicKeyX","type":"uint256","internalType":"uint256"},{"name":"publicKeyY","type":"uint256","internalType":"uint256"},{"name":"privateKey","type":"uint256","internalType":"uint256"}]},{"name":"digest","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"v","type":"uint8","internalType":"uint8"},{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"s","type":"bytes32","internalType":"bytes32"}],"stateMutability":"nonpayable"},{"type":"function","name":"sign","inputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"},{"name":"digest","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"v","type":"uint8","internalType":"uint8"},{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"s","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"signCompact","inputs":[{"name":"wallet","type":"tuple","internalType":"struct VmSafe.Wallet","components":[{"name":"addr","type":"address","internalType":"address"},{"name":"publicKeyX","type":"uint256","internalType":"uint256"},{"name":"publicKeyY","type":"uint256","internalType":"uint256"},{"name":"privateKey","type":"uint256","internalType":"uint256"}]},{"name":"digest","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"vs","type":"bytes32","internalType":"bytes32"}],"stateMutability":"nonpayable"},{"type":"function","name":"signCompact","inputs":[{"name":"signer","type":"address","internalType":"address"},{"name":"digest","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"vs","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"signCompact","inputs":[{"name":"digest","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"vs","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"signCompact","inputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"},{"name":"digest","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"vs","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"signP256","inputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"},{"name":"digest","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"s","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"sleep","inputs":[{"name":"duration","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"split","inputs":[{"name":"input","type":"string","internalType":"string"},{"name":"delimiter","type":"string","internalType":"string"}],"outputs":[{"name":"outputs","type":"string[]","internalType":"string[]"}],"stateMutability":"pure"},{"type":"function","name":"startBroadcast","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"startBroadcast","inputs":[{"name":"signer","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"startBroadcast","inputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"startMappingRecording","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"startStateDiffRecording","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"stopAndReturnStateDiff","inputs":[],"outputs":[{"name":"accountAccesses","type":"tuple[]","internalType":"struct VmSafe.AccountAccess[]","components":[{"name":"chainInfo","type":"tuple","internalType":"struct VmSafe.ChainInfo","components":[{"name":"forkId","type":"uint256","internalType":"uint256"},{"name":"chainId","type":"uint256","internalType":"uint256"}]},{"name":"kind","type":"uint8","internalType":"enum VmSafe.AccountAccessKind"},{"name":"account","type":"address","internalType":"address"},{"name":"accessor","type":"address","internalType":"address"},{"name":"initialized","type":"bool","internalType":"bool"},{"name":"oldBalance","type":"uint256","internalType":"uint256"},{"name":"newBalance","type":"uint256","internalType":"uint256"},{"name":"deployedCode","type":"bytes","internalType":"bytes"},{"name":"value","type":"uint256","internalType":"uint256"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"reverted","type":"bool","internalType":"bool"},{"name":"storageAccesses","type":"tuple[]","internalType":"struct VmSafe.StorageAccess[]","components":[{"name":"account","type":"address","internalType":"address"},{"name":"slot","type":"bytes32","internalType":"bytes32"},{"name":"isWrite","type":"bool","internalType":"bool"},{"name":"previousValue","type":"bytes32","internalType":"bytes32"},{"name":"newValue","type":"bytes32","internalType":"bytes32"},{"name":"reverted","type":"bool","internalType":"bool"}]},{"name":"depth","type":"uint64","internalType":"uint64"}]}],"stateMutability":"nonpayable"},{"type":"function","name":"stopBroadcast","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"stopMappingRecording","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"toBase64","inputs":[{"name":"data","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toBase64","inputs":[{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toBase64URL","inputs":[{"name":"data","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toBase64URL","inputs":[{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toLowercase","inputs":[{"name":"input","type":"string","internalType":"string"}],"outputs":[{"name":"output","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toString","inputs":[{"name":"value","type":"address","internalType":"address"}],"outputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toString","inputs":[{"name":"value","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toString","inputs":[{"name":"value","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toString","inputs":[{"name":"value","type":"bool","internalType":"bool"}],"outputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toString","inputs":[{"name":"value","type":"int256","internalType":"int256"}],"outputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toString","inputs":[{"name":"value","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toUppercase","inputs":[{"name":"input","type":"string","internalType":"string"}],"outputs":[{"name":"output","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"trim","inputs":[{"name":"input","type":"string","internalType":"string"}],"outputs":[{"name":"output","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"tryFfi","inputs":[{"name":"commandInput","type":"string[]","internalType":"string[]"}],"outputs":[{"name":"result","type":"tuple","internalType":"struct VmSafe.FfiResult","components":[{"name":"exitCode","type":"int32","internalType":"int32"},{"name":"stdout","type":"bytes","internalType":"bytes"},{"name":"stderr","type":"bytes","internalType":"bytes"}]}],"stateMutability":"nonpayable"},{"type":"function","name":"unixTime","inputs":[],"outputs":[{"name":"milliseconds","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"writeFile","inputs":[{"name":"path","type":"string","internalType":"string"},{"name":"data","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"writeFileBinary","inputs":[{"name":"path","type":"string","internalType":"string"},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"writeJson","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"path","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"writeJson","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"path","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"writeLine","inputs":[{"name":"path","type":"string","internalType":"string"},{"name":"data","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"writeToml","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"path","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"writeToml","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"path","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"accesses(address)":"65bc9481","addr(uint256)":"ffa18649","assertApproxEqAbs(int256,int256,uint256)":"240f839d","assertApproxEqAbs(int256,int256,uint256,string)":"8289e621","assertApproxEqAbs(uint256,uint256,uint256)":"16d207c6","assertApproxEqAbs(uint256,uint256,uint256,string)":"f710b062","assertApproxEqAbsDecimal(int256,int256,uint256,uint256)":"3d5bc8bc","assertApproxEqAbsDecimal(int256,int256,uint256,uint256,string)":"6a5066d4","assertApproxEqAbsDecimal(uint256,uint256,uint256,uint256)":"045c55ce","assertApproxEqAbsDecimal(uint256,uint256,uint256,uint256,string)":"60429eb2","assertApproxEqRel(int256,int256,uint256)":"fea2d14f","assertApproxEqRel(int256,int256,uint256,string)":"ef277d72","assertApproxEqRel(uint256,uint256,uint256)":"8cf25ef4","assertApproxEqRel(uint256,uint256,uint256,string)":"1ecb7d33","assertApproxEqRelDecimal(int256,int256,uint256,uint256)":"abbf21cc","assertApproxEqRelDecimal(int256,int256,uint256,uint256,string)":"fccc11c4","assertApproxEqRelDecimal(uint256,uint256,uint256,uint256)":"21ed2977","assertApproxEqRelDecimal(uint256,uint256,uint256,uint256,string)":"82d6c8fd","assertEq(address,address)":"515361f6","assertEq(address,address,string)":"2f2769d1","assertEq(address[],address[])":"3868ac34","assertEq(address[],address[],string)":"3e9173c5","assertEq(bool,bool)":"f7fe3477","assertEq(bool,bool,string)":"4db19e7e","assertEq(bool[],bool[])":"707df785","assertEq(bool[],bool[],string)":"e48a8f8d","assertEq(bytes,bytes)":"97624631","assertEq(bytes,bytes,string)":"e24fed00","assertEq(bytes32,bytes32)":"7c84c69b","assertEq(bytes32,bytes32,string)":"c1fa1ed0","assertEq(bytes32[],bytes32[])":"0cc9ee84","assertEq(bytes32[],bytes32[],string)":"e03e9177","assertEq(bytes[],bytes[])":"e5fb9b4a","assertEq(bytes[],bytes[],string)":"f413f0b6","assertEq(int256,int256)":"fe74f05b","assertEq(int256,int256,string)":"714a2f13","assertEq(int256[],int256[])":"711043ac","assertEq(int256[],int256[],string)":"191f1b30","assertEq(string,string)":"f320d963","assertEq(string,string,string)":"36f656d8","assertEq(string[],string[])":"cf1c049c","assertEq(string[],string[],string)":"eff6b27d","assertEq(uint256,uint256)":"98296c54","assertEq(uint256,uint256,string)":"88b44c85","assertEq(uint256[],uint256[])":"975d5a12","assertEq(uint256[],uint256[],string)":"5d18c73a","assertEqDecimal(int256,int256,uint256)":"48016c04","assertEqDecimal(int256,int256,uint256,string)":"7e77b0c5","assertEqDecimal(uint256,uint256,uint256)":"27af7d9c","assertEqDecimal(uint256,uint256,uint256,string)":"d0cbbdef","assertFalse(bool)":"a5982885","assertFalse(bool,string)":"7ba04809","assertGe(int256,int256)":"0a30b771","assertGe(int256,int256,string)":"a84328dd","assertGe(uint256,uint256)":"a8d4d1d9","assertGe(uint256,uint256,string)":"e25242c0","assertGeDecimal(int256,int256,uint256)":"dc28c0f1","assertGeDecimal(int256,int256,uint256,string)":"5df93c9b","assertGeDecimal(uint256,uint256,uint256)":"3d1fe08a","assertGeDecimal(uint256,uint256,uint256,string)":"8bff9133","assertGt(int256,int256)":"5a362d45","assertGt(int256,int256,string)":"f8d33b9b","assertGt(uint256,uint256)":"db07fcd2","assertGt(uint256,uint256,string)":"d9a3c4d2","assertGtDecimal(int256,int256,uint256)":"78611f0e","assertGtDecimal(int256,int256,uint256,string)":"04a5c7ab","assertGtDecimal(uint256,uint256,uint256)":"eccd2437","assertGtDecimal(uint256,uint256,uint256,string)":"64949a8d","assertLe(int256,int256)":"95fd154e","assertLe(int256,int256,string)":"4dfe692c","assertLe(uint256,uint256)":"8466f415","assertLe(uint256,uint256,string)":"d17d4b0d","assertLeDecimal(int256,int256,uint256)":"11d1364a","assertLeDecimal(int256,int256,uint256,string)":"aa5cf788","assertLeDecimal(uint256,uint256,uint256)":"c304aab7","assertLeDecimal(uint256,uint256,uint256,string)":"7fefbbe0","assertLt(int256,int256)":"3e914080","assertLt(int256,int256,string)":"9ff531e3","assertLt(uint256,uint256)":"b12fc005","assertLt(uint256,uint256,string)":"65d5c135","assertLtDecimal(int256,int256,uint256)":"dbe8d88b","assertLtDecimal(int256,int256,uint256,string)":"40f0b4e0","assertLtDecimal(uint256,uint256,uint256)":"2077337e","assertLtDecimal(uint256,uint256,uint256,string)":"a972d037","assertNotEq(address,address)":"b12e1694","assertNotEq(address,address,string)":"8775a591","assertNotEq(address[],address[])":"46d0b252","assertNotEq(address[],address[],string)":"72c7e0b5","assertNotEq(bool,bool)":"236e4d66","assertNotEq(bool,bool,string)":"1091a261","assertNotEq(bool[],bool[])":"286fafea","assertNotEq(bool[],bool[],string)":"62c6f9fb","assertNotEq(bytes,bytes)":"3cf78e28","assertNotEq(bytes,bytes,string)":"9507540e","assertNotEq(bytes32,bytes32)":"898e83fc","assertNotEq(bytes32,bytes32,string)":"b2332f51","assertNotEq(bytes32[],bytes32[])":"0603ea68","assertNotEq(bytes32[],bytes32[],string)":"b873634c","assertNotEq(bytes[],bytes[])":"edecd035","assertNotEq(bytes[],bytes[],string)":"1dcd1f68","assertNotEq(int256,int256)":"f4c004e3","assertNotEq(int256,int256,string)":"4724c5b9","assertNotEq(int256[],int256[])":"0b72f4ef","assertNotEq(int256[],int256[],string)":"d3977322","assertNotEq(string,string)":"6a8237b3","assertNotEq(string,string,string)":"78bdcea7","assertNotEq(string[],string[])":"bdfacbe8","assertNotEq(string[],string[],string)":"b67187f3","assertNotEq(uint256,uint256)":"b7909320","assertNotEq(uint256,uint256,string)":"98f9bdbd","assertNotEq(uint256[],uint256[])":"56f29cba","assertNotEq(uint256[],uint256[],string)":"9a7fbd8f","assertNotEqDecimal(int256,int256,uint256)":"14e75680","assertNotEqDecimal(int256,int256,uint256,string)":"33949f0b","assertNotEqDecimal(uint256,uint256,uint256)":"669efca7","assertNotEqDecimal(uint256,uint256,uint256,string)":"f5a55558","assertTrue(bool)":"0c9fd581","assertTrue(bool,string)":"a34edc03","assume(bool)":"4c63e562","breakpoint(string)":"f0259e92","breakpoint(string,bool)":"f7d39a8d","broadcast()":"afc98040","broadcast(address)":"e6962cdb","broadcast(uint256)":"f67a965b","broadcastRawTransaction(bytes)":"8c0c72e0","closeFile(string)":"48c3241f","computeCreate2Address(bytes32,bytes32)":"890c283b","computeCreate2Address(bytes32,bytes32,address)":"d323826a","computeCreateAddress(address,uint256)":"74637a7a","copyFile(string,string)":"a54a87d8","createDir(string,bool)":"168b64d3","createWallet(string)":"7404f1d2","createWallet(uint256)":"7a675bb6","createWallet(uint256,string)":"ed7c5462","deployCode(string)":"9a8325a0","deployCode(string,bytes)":"29ce9dde","deriveKey(string,string,uint32)":"6bcb2c1b","deriveKey(string,string,uint32,string)":"29233b1f","deriveKey(string,uint32)":"6229498b","deriveKey(string,uint32,string)":"32c8176d","ensNamehash(string)":"8c374c65","envAddress(string)":"350d56bf","envAddress(string,string)":"ad31b9fa","envBool(string)":"7ed1ec7d","envBool(string,string)":"aaaddeaf","envBytes(string)":"4d7baf06","envBytes(string,string)":"ddc2651b","envBytes32(string)":"97949042","envBytes32(string,string)":"5af231c1","envExists(string)":"ce8365f9","envInt(string)":"892a0c61","envInt(string,string)":"42181150","envOr(string,address)":"561fe540","envOr(string,bool)":"4777f3cf","envOr(string,bytes)":"b3e47705","envOr(string,bytes32)":"b4a85892","envOr(string,int256)":"bbcb713e","envOr(string,string)":"d145736c","envOr(string,string,address[])":"c74e9deb","envOr(string,string,bool[])":"eb85e83b","envOr(string,string,bytes32[])":"2281f367","envOr(string,string,bytes[])":"64bc3e64","envOr(string,string,int256[])":"4700d74b","envOr(string,string,string[])":"859216bc","envOr(string,string,uint256[])":"74318528","envOr(string,uint256)":"5e97348f","envString(string)":"f877cb19","envString(string,string)":"14b02bc9","envUint(string)":"c1978d1f","envUint(string,string)":"f3dec099","eth_getLogs(uint256,uint256,address,bytes32[])":"35e1349b","exists(string)":"261a323e","ffi(string[])":"89160467","fsMetadata(string)":"af368a08","getBlobBaseFee()":"1f6d6ef7","getBlockNumber()":"42cbb15c","getBlockTimestamp()":"796b89b9","getCode(string)":"8d1cc925","getDeployedCode(string)":"3ebf73b4","getFoundryVersion()":"ea991bb5","getLabel(address)":"28a249b0","getMappingKeyAndParentOf(address,bytes32)":"876e24e6","getMappingLength(address,bytes32)":"2f2fd63f","getMappingSlotAt(address,bytes32,uint256)":"ebc73ab4","getNonce((address,uint256,uint256,uint256))":"a5748aad","getNonce(address)":"2d0335ab","getRecordedLogs()":"191553a4","indexOf(string,string)":"8a0807b7","isContext(uint8)":"64af255d","isDir(string)":"7d15d019","isFile(string)":"e0eb04d4","keyExists(string,string)":"528a683c","keyExistsJson(string,string)":"db4235f6","keyExistsToml(string,string)":"600903ad","label(address,string)":"c657c718","lastCallGas()":"2b589b28","load(address,bytes32)":"667f9d70","parseAddress(string)":"c6ce059d","parseBool(string)":"974ef924","parseBytes(string)":"8f5d232d","parseBytes32(string)":"087e6e81","parseInt(string)":"42346c5e","parseJson(string)":"6a82600a","parseJson(string,string)":"85940ef1","parseJsonAddress(string,string)":"1e19e657","parseJsonAddressArray(string,string)":"2fce7883","parseJsonBool(string,string)":"9f86dc91","parseJsonBoolArray(string,string)":"91f3b94f","parseJsonBytes(string,string)":"fd921be8","parseJsonBytes32(string,string)":"1777e59d","parseJsonBytes32Array(string,string)":"91c75bc3","parseJsonBytesArray(string,string)":"6631aa99","parseJsonInt(string,string)":"7b048ccd","parseJsonIntArray(string,string)":"9983c28a","parseJsonKeys(string,string)":"213e4198","parseJsonString(string,string)":"49c4fac8","parseJsonStringArray(string,string)":"498fdcf4","parseJsonType(string,string)":"a9da313b","parseJsonType(string,string,string)":"e3f5ae33","parseJsonTypeArray(string,string,string)":"0175d535","parseJsonUint(string,string)":"addde2b6","parseJsonUintArray(string,string)":"522074ab","parseToml(string)":"592151f0","parseToml(string,string)":"37736e08","parseTomlAddress(string,string)":"65e7c844","parseTomlAddressArray(string,string)":"65c428e7","parseTomlBool(string,string)":"d30dced6","parseTomlBoolArray(string,string)":"127cfe9a","parseTomlBytes(string,string)":"d77bfdb9","parseTomlBytes32(string,string)":"8e214810","parseTomlBytes32Array(string,string)":"3e716f81","parseTomlBytesArray(string,string)":"b197c247","parseTomlInt(string,string)":"c1350739","parseTomlIntArray(string,string)":"d3522ae6","parseTomlKeys(string,string)":"812a44b2","parseTomlString(string,string)":"8bb8dd43","parseTomlStringArray(string,string)":"9f629281","parseTomlUint(string,string)":"cc7b0487","parseTomlUintArray(string,string)":"b5df27c8","parseUint(string)":"fa91454d","pauseGasMetering()":"d1a5b36f","projectRoot()":"d930a0e6","prompt(string)":"47eaf474","promptAddress(string)":"62ee05f4","promptSecret(string)":"1e279d41","promptSecretUint(string)":"69ca02b7","promptUint(string)":"652fd489","randomAddress()":"d5bee9f5","randomUint()":"25124730","randomUint(uint256,uint256)":"d61b051b","readDir(string)":"c4bc59e0","readDir(string,uint64)":"1497876c","readDir(string,uint64,bool)":"8102d70d","readFile(string)":"60f9bb11","readFileBinary(string)":"16ed7bc4","readLine(string)":"70f55728","readLink(string)":"9f5684a2","record()":"266cf109","recordLogs()":"41af2f52","rememberKey(uint256)":"22100064","removeDir(string,bool)":"45c62011","removeFile(string)":"f1afe04d","replace(string,string,string)":"e00ad03e","resumeGasMetering()":"2bcd50e0","rpc(string,string)":"1206c8a8","rpc(string,string,string)":"0199a220","rpcUrl(string)":"975a6ce9","rpcUrlStructs()":"9d2ad72a","rpcUrls()":"a85a8418","serializeAddress(string,string,address)":"972c6062","serializeAddress(string,string,address[])":"1e356e1a","serializeBool(string,string,bool)":"ac22e971","serializeBool(string,string,bool[])":"92925aa1","serializeBytes(string,string,bytes)":"f21d52c7","serializeBytes(string,string,bytes[])":"9884b232","serializeBytes32(string,string,bytes32)":"2d812b44","serializeBytes32(string,string,bytes32[])":"201e43e2","serializeInt(string,string,int256)":"3f33db60","serializeInt(string,string,int256[])":"7676e127","serializeJson(string,string)":"9b3358b0","serializeJsonType(string,bytes)":"6d4f96a6","serializeJsonType(string,string,string,bytes)":"6f93bccb","serializeString(string,string,string)":"88da6d35","serializeString(string,string,string[])":"561cd6f3","serializeUint(string,string,uint256)":"129e9002","serializeUint(string,string,uint256[])":"fee9a469","serializeUintToHex(string,string,uint256)":"ae5a2ae8","setEnv(string,string)":"3d5923ee","sign((address,uint256,uint256,uint256),bytes32)":"b25c5a25","sign(address,bytes32)":"8c1aa205","sign(bytes32)":"799cd333","sign(uint256,bytes32)":"e341eaa4","signCompact((address,uint256,uint256,uint256),bytes32)":"3d0e292f","signCompact(address,bytes32)":"8e2f97bf","signCompact(bytes32)":"a282dc4b","signCompact(uint256,bytes32)":"cc2a781f","signP256(uint256,bytes32)":"83211b40","sleep(uint256)":"fa9d8713","split(string,string)":"8bb75533","startBroadcast()":"7fb5297f","startBroadcast(address)":"7fec2a8d","startBroadcast(uint256)":"ce817d47","startMappingRecording()":"3e9705c0","startStateDiffRecording()":"cf22e3c9","stopAndReturnStateDiff()":"aa5cf90e","stopBroadcast()":"76eadd36","stopMappingRecording()":"0d4aae9b","toBase64(bytes)":"a5cbfe65","toBase64(string)":"3f8be2c8","toBase64URL(bytes)":"c8bd0e4a","toBase64URL(string)":"ae3165b3","toLowercase(string)":"50bb0884","toString(address)":"56ca623e","toString(bool)":"71dce7da","toString(bytes)":"71aad10d","toString(bytes32)":"b11a19e8","toString(int256)":"a322c40e","toString(uint256)":"6900a3ae","toUppercase(string)":"074ae3d7","trim(string)":"b2dad155","tryFfi(string[])":"f45c1ce7","unixTime()":"625387dc","writeFile(string,string)":"897e0a97","writeFileBinary(string,bytes)":"1f21fc80","writeJson(string,string)":"e23cd19f","writeJson(string,string,string)":"35d6ad46","writeLine(string,string)":"619d897f","writeToml(string,string)":"c0865ba7","writeToml(string,string,string)":"51ac6a33"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"accesses\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"readSlots\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"writeSlots\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"name\":\"addr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"keyAddr\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqAbs\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqAbs\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqAbs\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqAbs\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqAbsDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqAbsDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqAbsDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqAbsDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqRel\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqRel\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqRel\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqRel\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqRelDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqRelDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqRelDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqRelDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"left\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"right\",\"type\":\"bytes32[]\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256[]\",\"name\":\"left\",\"type\":\"int256[]\"},{\"internalType\":\"int256[]\",\"name\":\"right\",\"type\":\"int256[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"left\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"right\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"left\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"right\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"left\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"right\",\"type\":\"address[]\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"left\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"right\",\"type\":\"address[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"left\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"right\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"left\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"right\",\"type\":\"address\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"left\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"right\",\"type\":\"uint256[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool[]\",\"name\":\"left\",\"type\":\"bool[]\"},{\"internalType\":\"bool[]\",\"name\":\"right\",\"type\":\"bool[]\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256[]\",\"name\":\"left\",\"type\":\"int256[]\"},{\"internalType\":\"int256[]\",\"name\":\"right\",\"type\":\"int256[]\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"left\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"right\",\"type\":\"bytes32\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"left\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"right\",\"type\":\"uint256[]\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"left\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"right\",\"type\":\"bytes\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"left\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"right\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"left\",\"type\":\"string[]\"},{\"internalType\":\"string[]\",\"name\":\"right\",\"type\":\"string[]\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"left\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"right\",\"type\":\"bytes32[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"left\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"right\",\"type\":\"bytes\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool[]\",\"name\":\"left\",\"type\":\"bool[]\"},{\"internalType\":\"bool[]\",\"name\":\"right\",\"type\":\"bool[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"left\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes[]\",\"name\":\"right\",\"type\":\"bytes[]\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"left\",\"type\":\"string[]\"},{\"internalType\":\"string[]\",\"name\":\"right\",\"type\":\"string[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"left\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"right\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"left\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes[]\",\"name\":\"right\",\"type\":\"bytes[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"left\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"right\",\"type\":\"bool\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"condition\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertFalse\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"condition\",\"type\":\"bool\"}],\"name\":\"assertFalse\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"}],\"name\":\"assertGe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"}],\"name\":\"assertGe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertGeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertGeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"}],\"name\":\"assertGt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"}],\"name\":\"assertGt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertGtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertGtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"}],\"name\":\"assertLe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"}],\"name\":\"assertLe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertLeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertLeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"}],\"name\":\"assertLt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"}],\"name\":\"assertLt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertLtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertLtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"left\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"right\",\"type\":\"bytes32[]\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256[]\",\"name\":\"left\",\"type\":\"int256[]\"},{\"internalType\":\"int256[]\",\"name\":\"right\",\"type\":\"int256[]\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"left\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"right\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"left\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes[]\",\"name\":\"right\",\"type\":\"bytes[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"left\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"right\",\"type\":\"bool\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool[]\",\"name\":\"left\",\"type\":\"bool[]\"},{\"internalType\":\"bool[]\",\"name\":\"right\",\"type\":\"bool[]\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"left\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"right\",\"type\":\"bytes\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"left\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"right\",\"type\":\"address[]\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"left\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"right\",\"type\":\"uint256[]\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool[]\",\"name\":\"left\",\"type\":\"bool[]\"},{\"internalType\":\"bool[]\",\"name\":\"right\",\"type\":\"bool[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"left\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"right\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"left\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"right\",\"type\":\"address[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"left\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"right\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"left\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"right\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"left\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"right\",\"type\":\"bytes32\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"left\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"right\",\"type\":\"bytes\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"left\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"right\",\"type\":\"uint256[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"left\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"right\",\"type\":\"address\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"left\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"right\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"left\",\"type\":\"string[]\"},{\"internalType\":\"string[]\",\"name\":\"right\",\"type\":\"string[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"left\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"right\",\"type\":\"bytes32[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"left\",\"type\":\"string[]\"},{\"internalType\":\"string[]\",\"name\":\"right\",\"type\":\"string[]\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256[]\",\"name\":\"left\",\"type\":\"int256[]\"},{\"internalType\":\"int256[]\",\"name\":\"right\",\"type\":\"int256[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"left\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes[]\",\"name\":\"right\",\"type\":\"bytes[]\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertNotEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertNotEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"condition\",\"type\":\"bool\"}],\"name\":\"assertTrue\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"condition\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertTrue\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"condition\",\"type\":\"bool\"}],\"name\":\"assume\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"char\",\"type\":\"string\"}],\"name\":\"breakpoint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"char\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"breakpoint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"broadcast\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"}],\"name\":\"broadcast\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"name\":\"broadcast\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"broadcastRawTransaction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"closeFile\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"initCodeHash\",\"type\":\"bytes32\"}],\"name\":\"computeCreate2Address\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"initCodeHash\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"deployer\",\"type\":\"address\"}],\"name\":\"computeCreate2Address\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"deployer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"name\":\"computeCreateAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"from\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"to\",\"type\":\"string\"}],\"name\":\"copyFile\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"copied\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"recursive\",\"type\":\"bool\"}],\"name\":\"createDir\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"walletLabel\",\"type\":\"string\"}],\"name\":\"createWallet\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyX\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyY\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"internalType\":\"struct VmSafe.Wallet\",\"name\":\"wallet\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"name\":\"createWallet\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyX\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyY\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"internalType\":\"struct VmSafe.Wallet\",\"name\":\"wallet\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"walletLabel\",\"type\":\"string\"}],\"name\":\"createWallet\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyX\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyY\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"internalType\":\"struct VmSafe.Wallet\",\"name\":\"wallet\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"artifactPath\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"constructorArgs\",\"type\":\"bytes\"}],\"name\":\"deployCode\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"deployedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"artifactPath\",\"type\":\"string\"}],\"name\":\"deployCode\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"deployedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"mnemonic\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"derivationPath\",\"type\":\"string\"},{\"internalType\":\"uint32\",\"name\":\"index\",\"type\":\"uint32\"},{\"internalType\":\"string\",\"name\":\"language\",\"type\":\"string\"}],\"name\":\"deriveKey\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"mnemonic\",\"type\":\"string\"},{\"internalType\":\"uint32\",\"name\":\"index\",\"type\":\"uint32\"},{\"internalType\":\"string\",\"name\":\"language\",\"type\":\"string\"}],\"name\":\"deriveKey\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"mnemonic\",\"type\":\"string\"},{\"internalType\":\"uint32\",\"name\":\"index\",\"type\":\"uint32\"}],\"name\":\"deriveKey\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"mnemonic\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"derivationPath\",\"type\":\"string\"},{\"internalType\":\"uint32\",\"name\":\"index\",\"type\":\"uint32\"}],\"name\":\"deriveKey\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"ensNamehash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"value\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"}],\"name\":\"envAddress\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"value\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envBool\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"}],\"name\":\"envBool\",\"outputs\":[{\"internalType\":\"bool[]\",\"name\":\"value\",\"type\":\"bool[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envBytes\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"value\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"}],\"name\":\"envBytes\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"value\",\"type\":\"bytes[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"}],\"name\":\"envBytes32\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"value\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envBytes32\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envExists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"}],\"name\":\"envInt\",\"outputs\":[{\"internalType\":\"int256[]\",\"name\":\"value\",\"type\":\"int256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envInt\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"},{\"internalType\":\"bytes32[]\",\"name\":\"defaultValue\",\"type\":\"bytes32[]\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"value\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"},{\"internalType\":\"int256[]\",\"name\":\"defaultValue\",\"type\":\"int256[]\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"int256[]\",\"name\":\"value\",\"type\":\"int256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"defaultValue\",\"type\":\"bool\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"defaultValue\",\"type\":\"address\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"value\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"defaultValue\",\"type\":\"uint256\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"},{\"internalType\":\"bytes[]\",\"name\":\"defaultValue\",\"type\":\"bytes[]\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"value\",\"type\":\"bytes[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"},{\"internalType\":\"uint256[]\",\"name\":\"defaultValue\",\"type\":\"uint256[]\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"value\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"},{\"internalType\":\"string[]\",\"name\":\"defaultValue\",\"type\":\"string[]\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"value\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"defaultValue\",\"type\":\"bytes\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"value\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"defaultValue\",\"type\":\"bytes32\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"int256\",\"name\":\"defaultValue\",\"type\":\"int256\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"},{\"internalType\":\"address[]\",\"name\":\"defaultValue\",\"type\":\"address[]\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"value\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"defaultValue\",\"type\":\"string\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"},{\"internalType\":\"bool[]\",\"name\":\"defaultValue\",\"type\":\"bool[]\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"bool[]\",\"name\":\"value\",\"type\":\"bool[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"}],\"name\":\"envString\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"value\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"}],\"name\":\"envUint\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"value\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"fromBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"toBlock\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes32[]\",\"name\":\"topics\",\"type\":\"bytes32[]\"}],\"name\":\"eth_getLogs\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"emitter\",\"type\":\"address\"},{\"internalType\":\"bytes32[]\",\"name\":\"topics\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"blockHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"blockNumber\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"transactionHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"transactionIndex\",\"type\":\"uint64\"},{\"internalType\":\"uint256\",\"name\":\"logIndex\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"removed\",\"type\":\"bool\"}],\"internalType\":\"struct VmSafe.EthGetLogs[]\",\"name\":\"logs\",\"type\":\"tuple[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"exists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"commandInput\",\"type\":\"string[]\"}],\"name\":\"ffi\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"result\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"fsMetadata\",\"outputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"isDir\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isSymlink\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"readOnly\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"modified\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"accessed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"created\",\"type\":\"uint256\"}],\"internalType\":\"struct VmSafe.FsMetadata\",\"name\":\"metadata\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBlobBaseFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"blobBaseFee\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBlockNumber\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"height\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBlockTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"artifactPath\",\"type\":\"string\"}],\"name\":\"getCode\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"creationBytecode\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"artifactPath\",\"type\":\"string\"}],\"name\":\"getDeployedCode\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"runtimeBytecode\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getFoundryVersion\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getLabel\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"currentLabel\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"elementSlot\",\"type\":\"bytes32\"}],\"name\":\"getMappingKeyAndParentOf\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"found\",\"type\":\"bool\"},{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"parent\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"mappingSlot\",\"type\":\"bytes32\"}],\"name\":\"getMappingLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"mappingSlot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"idx\",\"type\":\"uint256\"}],\"name\":\"getMappingSlotAt\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getNonce\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyX\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyY\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"internalType\":\"struct VmSafe.Wallet\",\"name\":\"wallet\",\"type\":\"tuple\"}],\"name\":\"getNonce\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRecordedLogs\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32[]\",\"name\":\"topics\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"emitter\",\"type\":\"address\"}],\"internalType\":\"struct VmSafe.Log[]\",\"name\":\"logs\",\"type\":\"tuple[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"indexOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum VmSafe.ForgeContext\",\"name\":\"context\",\"type\":\"uint8\"}],\"name\":\"isContext\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"isDir\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"isFile\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"keyExists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"keyExistsJson\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"keyExistsToml\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"newLabel\",\"type\":\"string\"}],\"name\":\"label\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastCallGas\",\"outputs\":[{\"components\":[{\"internalType\":\"uint64\",\"name\":\"gasLimit\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"gasTotalUsed\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"gasMemoryUsed\",\"type\":\"uint64\"},{\"internalType\":\"int64\",\"name\":\"gasRefunded\",\"type\":\"int64\"},{\"internalType\":\"uint64\",\"name\":\"gasRemaining\",\"type\":\"uint64\"}],\"internalType\":\"struct VmSafe.Gas\",\"name\":\"gas\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"load\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"data\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"name\":\"parseAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"parsedValue\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"name\":\"parseBool\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"parsedValue\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"name\":\"parseBytes\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"parsedValue\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"name\":\"parseBytes32\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"parsedValue\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"name\":\"parseInt\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"parsedValue\",\"type\":\"int256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"name\":\"parseJson\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"abiEncodedData\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJson\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"abiEncodedData\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonAddressArray\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonBool\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonBoolArray\",\"outputs\":[{\"internalType\":\"bool[]\",\"name\":\"\",\"type\":\"bool[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonBytes\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonBytes32\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonBytes32Array\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonBytesArray\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"\",\"type\":\"bytes[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonInt\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonIntArray\",\"outputs\":[{\"internalType\":\"int256[]\",\"name\":\"\",\"type\":\"int256[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonKeys\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"keys\",\"type\":\"string[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonStringArray\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"typeDescription\",\"type\":\"string\"}],\"name\":\"parseJsonType\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"typeDescription\",\"type\":\"string\"}],\"name\":\"parseJsonType\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"typeDescription\",\"type\":\"string\"}],\"name\":\"parseJsonTypeArray\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonUintArray\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseToml\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"abiEncodedData\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"}],\"name\":\"parseToml\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"abiEncodedData\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlAddressArray\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlBool\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlBoolArray\",\"outputs\":[{\"internalType\":\"bool[]\",\"name\":\"\",\"type\":\"bool[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlBytes\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlBytes32\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlBytes32Array\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlBytesArray\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"\",\"type\":\"bytes[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlInt\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlIntArray\",\"outputs\":[{\"internalType\":\"int256[]\",\"name\":\"\",\"type\":\"int256[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlKeys\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"keys\",\"type\":\"string[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlStringArray\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlUintArray\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"name\":\"parseUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"parsedValue\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pauseGasMetering\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"projectRoot\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"promptText\",\"type\":\"string\"}],\"name\":\"prompt\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"promptText\",\"type\":\"string\"}],\"name\":\"promptAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"promptText\",\"type\":\"string\"}],\"name\":\"promptSecret\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"promptText\",\"type\":\"string\"}],\"name\":\"promptSecretUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"promptText\",\"type\":\"string\"}],\"name\":\"promptUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"randomAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"randomUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"min\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"max\",\"type\":\"uint256\"}],\"name\":\"randomUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"maxDepth\",\"type\":\"uint64\"}],\"name\":\"readDir\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"errorMessage\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"depth\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"isDir\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isSymlink\",\"type\":\"bool\"}],\"internalType\":\"struct VmSafe.DirEntry[]\",\"name\":\"entries\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"maxDepth\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"followLinks\",\"type\":\"bool\"}],\"name\":\"readDir\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"errorMessage\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"depth\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"isDir\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isSymlink\",\"type\":\"bool\"}],\"internalType\":\"struct VmSafe.DirEntry[]\",\"name\":\"entries\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"readDir\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"errorMessage\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"depth\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"isDir\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isSymlink\",\"type\":\"bool\"}],\"internalType\":\"struct VmSafe.DirEntry[]\",\"name\":\"entries\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"readFile\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"data\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"readFileBinary\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"readLine\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"line\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"linkPath\",\"type\":\"string\"}],\"name\":\"readLink\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"targetPath\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"record\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"recordLogs\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"name\":\"rememberKey\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"keyAddr\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"recursive\",\"type\":\"bool\"}],\"name\":\"removeDir\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"removeFile\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"from\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"to\",\"type\":\"string\"}],\"name\":\"replace\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"output\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"resumeGasMetering\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"urlOrAlias\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"method\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"params\",\"type\":\"string\"}],\"name\":\"rpc\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"method\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"params\",\"type\":\"string\"}],\"name\":\"rpc\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"rpcAlias\",\"type\":\"string\"}],\"name\":\"rpcUrl\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rpcUrlStructs\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"url\",\"type\":\"string\"}],\"internalType\":\"struct VmSafe.Rpc[]\",\"name\":\"urls\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rpcUrls\",\"outputs\":[{\"internalType\":\"string[2][]\",\"name\":\"urls\",\"type\":\"string[2][]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"address[]\",\"name\":\"values\",\"type\":\"address[]\"}],\"name\":\"serializeAddress\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"value\",\"type\":\"address\"}],\"name\":\"serializeAddress\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"bool[]\",\"name\":\"values\",\"type\":\"bool[]\"}],\"name\":\"serializeBool\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"serializeBool\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"bytes[]\",\"name\":\"values\",\"type\":\"bytes[]\"}],\"name\":\"serializeBytes\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"value\",\"type\":\"bytes\"}],\"name\":\"serializeBytes\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"bytes32[]\",\"name\":\"values\",\"type\":\"bytes32[]\"}],\"name\":\"serializeBytes32\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"name\":\"serializeBytes32\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"serializeInt\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"int256[]\",\"name\":\"values\",\"type\":\"int256[]\"}],\"name\":\"serializeInt\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"}],\"name\":\"serializeJson\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"typeDescription\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"value\",\"type\":\"bytes\"}],\"name\":\"serializeJsonType\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"typeDescription\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"value\",\"type\":\"bytes\"}],\"name\":\"serializeJsonType\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"string[]\",\"name\":\"values\",\"type\":\"string[]\"}],\"name\":\"serializeString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"}],\"name\":\"serializeString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"serializeUint\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"serializeUint\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"serializeUintToHex\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"}],\"name\":\"setEnv\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"digest\",\"type\":\"bytes32\"}],\"name\":\"sign\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"digest\",\"type\":\"bytes32\"}],\"name\":\"sign\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyX\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyY\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"internalType\":\"struct VmSafe.Wallet\",\"name\":\"wallet\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"digest\",\"type\":\"bytes32\"}],\"name\":\"sign\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"digest\",\"type\":\"bytes32\"}],\"name\":\"sign\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyX\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyY\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"internalType\":\"struct VmSafe.Wallet\",\"name\":\"wallet\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"digest\",\"type\":\"bytes32\"}],\"name\":\"signCompact\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"vs\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"digest\",\"type\":\"bytes32\"}],\"name\":\"signCompact\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"vs\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"digest\",\"type\":\"bytes32\"}],\"name\":\"signCompact\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"vs\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"digest\",\"type\":\"bytes32\"}],\"name\":\"signCompact\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"vs\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"digest\",\"type\":\"bytes32\"}],\"name\":\"signP256\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"}],\"name\":\"sleep\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delimiter\",\"type\":\"string\"}],\"name\":\"split\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"outputs\",\"type\":\"string[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startBroadcast\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"}],\"name\":\"startBroadcast\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"name\":\"startBroadcast\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startMappingRecording\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startStateDiffRecording\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stopAndReturnStateDiff\",\"outputs\":[{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"}],\"internalType\":\"struct VmSafe.ChainInfo\",\"name\":\"chainInfo\",\"type\":\"tuple\"},{\"internalType\":\"enum VmSafe.AccountAccessKind\",\"name\":\"kind\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"accessor\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"oldBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"newBalance\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"deployedCode\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bool\",\"name\":\"reverted\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"isWrite\",\"type\":\"bool\"},{\"internalType\":\"bytes32\",\"name\":\"previousValue\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"newValue\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"reverted\",\"type\":\"bool\"}],\"internalType\":\"struct VmSafe.StorageAccess[]\",\"name\":\"storageAccesses\",\"type\":\"tuple[]\"},{\"internalType\":\"uint64\",\"name\":\"depth\",\"type\":\"uint64\"}],\"internalType\":\"struct VmSafe.AccountAccess[]\",\"name\":\"accountAccesses\",\"type\":\"tuple[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stopBroadcast\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stopMappingRecording\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"data\",\"type\":\"string\"}],\"name\":\"toBase64\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"toBase64\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"data\",\"type\":\"string\"}],\"name\":\"toBase64URL\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"toBase64URL\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"}],\"name\":\"toLowercase\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"output\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"value\",\"type\":\"address\"}],\"name\":\"toString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"toString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"value\",\"type\":\"bytes\"}],\"name\":\"toString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"toString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"toString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"name\":\"toString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"}],\"name\":\"toUppercase\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"output\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"}],\"name\":\"trim\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"output\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"commandInput\",\"type\":\"string[]\"}],\"name\":\"tryFfi\",\"outputs\":[{\"components\":[{\"internalType\":\"int32\",\"name\":\"exitCode\",\"type\":\"int32\"},{\"internalType\":\"bytes\",\"name\":\"stdout\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"stderr\",\"type\":\"bytes\"}],\"internalType\":\"struct VmSafe.FfiResult\",\"name\":\"result\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unixTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"milliseconds\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"data\",\"type\":\"string\"}],\"name\":\"writeFile\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"writeFileBinary\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"}],\"name\":\"writeJson\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"writeJson\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"data\",\"type\":\"string\"}],\"name\":\"writeLine\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"}],\"name\":\"writeToml\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"writeToml\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"accesses(address)\":{\"notice\":\"Gets all accessed reads and write slot from a `vm.record` session, for a given address.\"},\"addr(uint256)\":{\"notice\":\"Gets the address for a given private key.\"},\"assertApproxEqAbs(int256,int256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`.\"},\"assertApproxEqAbs(int256,int256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`. Includes error message into revert string on failure.\"},\"assertApproxEqAbs(uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`.\"},\"assertApproxEqAbs(uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`. Includes error message into revert string on failure.\"},\"assertApproxEqAbsDecimal(int256,int256,uint256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`. Formats values with decimals in failure message.\"},\"assertApproxEqAbsDecimal(int256,int256,uint256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertApproxEqAbsDecimal(uint256,uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`. Formats values with decimals in failure message.\"},\"assertApproxEqAbsDecimal(uint256,uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertApproxEqRel(int256,int256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%\"},\"assertApproxEqRel(int256,int256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Includes error message into revert string on failure.\"},\"assertApproxEqRel(uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%\"},\"assertApproxEqRel(uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Includes error message into revert string on failure.\"},\"assertApproxEqRelDecimal(int256,int256,uint256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Formats values with decimals in failure message.\"},\"assertApproxEqRelDecimal(int256,int256,uint256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertApproxEqRelDecimal(uint256,uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Formats values with decimals in failure message.\"},\"assertApproxEqRelDecimal(uint256,uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertEq(address,address)\":{\"notice\":\"Asserts that two `address` values are equal.\"},\"assertEq(address,address,string)\":{\"notice\":\"Asserts that two `address` values are equal and includes error message into revert string on failure.\"},\"assertEq(address[],address[])\":{\"notice\":\"Asserts that two arrays of `address` values are equal.\"},\"assertEq(address[],address[],string)\":{\"notice\":\"Asserts that two arrays of `address` values are equal and includes error message into revert string on failure.\"},\"assertEq(bool,bool)\":{\"notice\":\"Asserts that two `bool` values are equal.\"},\"assertEq(bool,bool,string)\":{\"notice\":\"Asserts that two `bool` values are equal and includes error message into revert string on failure.\"},\"assertEq(bool[],bool[])\":{\"notice\":\"Asserts that two arrays of `bool` values are equal.\"},\"assertEq(bool[],bool[],string)\":{\"notice\":\"Asserts that two arrays of `bool` values are equal and includes error message into revert string on failure.\"},\"assertEq(bytes,bytes)\":{\"notice\":\"Asserts that two `bytes` values are equal.\"},\"assertEq(bytes,bytes,string)\":{\"notice\":\"Asserts that two `bytes` values are equal and includes error message into revert string on failure.\"},\"assertEq(bytes32,bytes32)\":{\"notice\":\"Asserts that two `bytes32` values are equal.\"},\"assertEq(bytes32,bytes32,string)\":{\"notice\":\"Asserts that two `bytes32` values are equal and includes error message into revert string on failure.\"},\"assertEq(bytes32[],bytes32[])\":{\"notice\":\"Asserts that two arrays of `bytes32` values are equal.\"},\"assertEq(bytes32[],bytes32[],string)\":{\"notice\":\"Asserts that two arrays of `bytes32` values are equal and includes error message into revert string on failure.\"},\"assertEq(bytes[],bytes[])\":{\"notice\":\"Asserts that two arrays of `bytes` values are equal.\"},\"assertEq(bytes[],bytes[],string)\":{\"notice\":\"Asserts that two arrays of `bytes` values are equal and includes error message into revert string on failure.\"},\"assertEq(int256,int256)\":{\"notice\":\"Asserts that two `int256` values are equal.\"},\"assertEq(int256,int256,string)\":{\"notice\":\"Asserts that two `int256` values are equal and includes error message into revert string on failure.\"},\"assertEq(int256[],int256[])\":{\"notice\":\"Asserts that two arrays of `int256` values are equal.\"},\"assertEq(int256[],int256[],string)\":{\"notice\":\"Asserts that two arrays of `int256` values are equal and includes error message into revert string on failure.\"},\"assertEq(string,string)\":{\"notice\":\"Asserts that two `string` values are equal.\"},\"assertEq(string,string,string)\":{\"notice\":\"Asserts that two `string` values are equal and includes error message into revert string on failure.\"},\"assertEq(string[],string[])\":{\"notice\":\"Asserts that two arrays of `string` values are equal.\"},\"assertEq(string[],string[],string)\":{\"notice\":\"Asserts that two arrays of `string` values are equal and includes error message into revert string on failure.\"},\"assertEq(uint256,uint256)\":{\"notice\":\"Asserts that two `uint256` values are equal.\"},\"assertEq(uint256,uint256,string)\":{\"notice\":\"Asserts that two `uint256` values are equal and includes error message into revert string on failure.\"},\"assertEq(uint256[],uint256[])\":{\"notice\":\"Asserts that two arrays of `uint256 values are equal.\"},\"assertEq(uint256[],uint256[],string)\":{\"notice\":\"Asserts that two arrays of `uint256` values are equal and includes error message into revert string on failure.\"},\"assertEqDecimal(int256,int256,uint256)\":{\"notice\":\"Asserts that two `int256` values are equal, formatting them with decimals in failure message.\"},\"assertEqDecimal(int256,int256,uint256,string)\":{\"notice\":\"Asserts that two `int256` values are equal, formatting them with decimals in failure message. Includes error message into revert string on failure.\"},\"assertEqDecimal(uint256,uint256,uint256)\":{\"notice\":\"Asserts that two `uint256` values are equal, formatting them with decimals in failure message.\"},\"assertEqDecimal(uint256,uint256,uint256,string)\":{\"notice\":\"Asserts that two `uint256` values are equal, formatting them with decimals in failure message. Includes error message into revert string on failure.\"},\"assertFalse(bool)\":{\"notice\":\"Asserts that the given condition is false.\"},\"assertFalse(bool,string)\":{\"notice\":\"Asserts that the given condition is false and includes error message into revert string on failure.\"},\"assertGe(int256,int256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than or equal to second.\"},\"assertGe(int256,int256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than or equal to second. Includes error message into revert string on failure.\"},\"assertGe(uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than or equal to second.\"},\"assertGe(uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than or equal to second. Includes error message into revert string on failure.\"},\"assertGeDecimal(int256,int256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than or equal to second. Formats values with decimals in failure message.\"},\"assertGeDecimal(int256,int256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than or equal to second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertGeDecimal(uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than or equal to second. Formats values with decimals in failure message.\"},\"assertGeDecimal(uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than or equal to second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertGt(int256,int256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than second.\"},\"assertGt(int256,int256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than second. Includes error message into revert string on failure.\"},\"assertGt(uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than second.\"},\"assertGt(uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than second. Includes error message into revert string on failure.\"},\"assertGtDecimal(int256,int256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than second. Formats values with decimals in failure message.\"},\"assertGtDecimal(int256,int256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertGtDecimal(uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than second. Formats values with decimals in failure message.\"},\"assertGtDecimal(uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertLe(int256,int256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than or equal to second.\"},\"assertLe(int256,int256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than or equal to second. Includes error message into revert string on failure.\"},\"assertLe(uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than or equal to second.\"},\"assertLe(uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than or equal to second. Includes error message into revert string on failure.\"},\"assertLeDecimal(int256,int256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than or equal to second. Formats values with decimals in failure message.\"},\"assertLeDecimal(int256,int256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than or equal to second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertLeDecimal(uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than or equal to second. Formats values with decimals in failure message.\"},\"assertLeDecimal(uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than or equal to second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertLt(int256,int256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than second.\"},\"assertLt(int256,int256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than second. Includes error message into revert string on failure.\"},\"assertLt(uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than second.\"},\"assertLt(uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than second. Includes error message into revert string on failure.\"},\"assertLtDecimal(int256,int256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than second. Formats values with decimals in failure message.\"},\"assertLtDecimal(int256,int256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertLtDecimal(uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than second. Formats values with decimals in failure message.\"},\"assertLtDecimal(uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertNotEq(address,address)\":{\"notice\":\"Asserts that two `address` values are not equal.\"},\"assertNotEq(address,address,string)\":{\"notice\":\"Asserts that two `address` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(address[],address[])\":{\"notice\":\"Asserts that two arrays of `address` values are not equal.\"},\"assertNotEq(address[],address[],string)\":{\"notice\":\"Asserts that two arrays of `address` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(bool,bool)\":{\"notice\":\"Asserts that two `bool` values are not equal.\"},\"assertNotEq(bool,bool,string)\":{\"notice\":\"Asserts that two `bool` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(bool[],bool[])\":{\"notice\":\"Asserts that two arrays of `bool` values are not equal.\"},\"assertNotEq(bool[],bool[],string)\":{\"notice\":\"Asserts that two arrays of `bool` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(bytes,bytes)\":{\"notice\":\"Asserts that two `bytes` values are not equal.\"},\"assertNotEq(bytes,bytes,string)\":{\"notice\":\"Asserts that two `bytes` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(bytes32,bytes32)\":{\"notice\":\"Asserts that two `bytes32` values are not equal.\"},\"assertNotEq(bytes32,bytes32,string)\":{\"notice\":\"Asserts that two `bytes32` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(bytes32[],bytes32[])\":{\"notice\":\"Asserts that two arrays of `bytes32` values are not equal.\"},\"assertNotEq(bytes32[],bytes32[],string)\":{\"notice\":\"Asserts that two arrays of `bytes32` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(bytes[],bytes[])\":{\"notice\":\"Asserts that two arrays of `bytes` values are not equal.\"},\"assertNotEq(bytes[],bytes[],string)\":{\"notice\":\"Asserts that two arrays of `bytes` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(int256,int256)\":{\"notice\":\"Asserts that two `int256` values are not equal.\"},\"assertNotEq(int256,int256,string)\":{\"notice\":\"Asserts that two `int256` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(int256[],int256[])\":{\"notice\":\"Asserts that two arrays of `int256` values are not equal.\"},\"assertNotEq(int256[],int256[],string)\":{\"notice\":\"Asserts that two arrays of `int256` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(string,string)\":{\"notice\":\"Asserts that two `string` values are not equal.\"},\"assertNotEq(string,string,string)\":{\"notice\":\"Asserts that two `string` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(string[],string[])\":{\"notice\":\"Asserts that two arrays of `string` values are not equal.\"},\"assertNotEq(string[],string[],string)\":{\"notice\":\"Asserts that two arrays of `string` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(uint256,uint256)\":{\"notice\":\"Asserts that two `uint256` values are not equal.\"},\"assertNotEq(uint256,uint256,string)\":{\"notice\":\"Asserts that two `uint256` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(uint256[],uint256[])\":{\"notice\":\"Asserts that two arrays of `uint256` values are not equal.\"},\"assertNotEq(uint256[],uint256[],string)\":{\"notice\":\"Asserts that two arrays of `uint256` values are not equal and includes error message into revert string on failure.\"},\"assertNotEqDecimal(int256,int256,uint256)\":{\"notice\":\"Asserts that two `int256` values are not equal, formatting them with decimals in failure message.\"},\"assertNotEqDecimal(int256,int256,uint256,string)\":{\"notice\":\"Asserts that two `int256` values are not equal, formatting them with decimals in failure message. Includes error message into revert string on failure.\"},\"assertNotEqDecimal(uint256,uint256,uint256)\":{\"notice\":\"Asserts that two `uint256` values are not equal, formatting them with decimals in failure message.\"},\"assertNotEqDecimal(uint256,uint256,uint256,string)\":{\"notice\":\"Asserts that two `uint256` values are not equal, formatting them with decimals in failure message. Includes error message into revert string on failure.\"},\"assertTrue(bool)\":{\"notice\":\"Asserts that the given condition is true.\"},\"assertTrue(bool,string)\":{\"notice\":\"Asserts that the given condition is true and includes error message into revert string on failure.\"},\"assume(bool)\":{\"notice\":\"If the condition is false, discard this run's fuzz inputs and generate new ones.\"},\"breakpoint(string)\":{\"notice\":\"Writes a breakpoint to jump to in the debugger.\"},\"breakpoint(string,bool)\":{\"notice\":\"Writes a conditional breakpoint to jump to in the debugger.\"},\"broadcast()\":{\"notice\":\"Has the next call (at this call depth only) create transactions that can later be signed and sent onchain. Broadcasting address is determined by checking the following in order: 1. If `--sender` argument was provided, that address is used. 2. If exactly one signer (e.g. private key, hw wallet, keystore) is set when `forge broadcast` is invoked, that signer is used. 3. Otherwise, default foundry sender (1804c8AB1F12E6bbf3894d4083f33e07309d1f38) is used.\"},\"broadcast(address)\":{\"notice\":\"Has the next call (at this call depth only) create a transaction with the address provided as the sender that can later be signed and sent onchain.\"},\"broadcast(uint256)\":{\"notice\":\"Has the next call (at this call depth only) create a transaction with the private key provided as the sender that can later be signed and sent onchain.\"},\"broadcastRawTransaction(bytes)\":{\"notice\":\"Takes a signed transaction and broadcasts it to the network.\"},\"closeFile(string)\":{\"notice\":\"Closes file for reading, resetting the offset and allowing to read it from beginning with readLine. `path` is relative to the project root.\"},\"computeCreate2Address(bytes32,bytes32)\":{\"notice\":\"Compute the address of a contract created with CREATE2 using the default CREATE2 deployer.\"},\"computeCreate2Address(bytes32,bytes32,address)\":{\"notice\":\"Compute the address of a contract created with CREATE2 using the given CREATE2 deployer.\"},\"computeCreateAddress(address,uint256)\":{\"notice\":\"Compute the address a contract will be deployed at for a given deployer address and nonce.\"},\"copyFile(string,string)\":{\"notice\":\"Copies the contents of one file to another. This function will **overwrite** the contents of `to`. On success, the total number of bytes copied is returned and it is equal to the length of the `to` file as reported by `metadata`. Both `from` and `to` are relative to the project root.\"},\"createDir(string,bool)\":{\"notice\":\"Creates a new, empty directory at the provided path. This cheatcode will revert in the following situations, but is not limited to just these cases: - User lacks permissions to modify `path`. - A parent of the given path doesn't exist and `recursive` is false. - `path` already exists and `recursive` is false. `path` is relative to the project root.\"},\"createWallet(string)\":{\"notice\":\"Derives a private key from the name, labels the account with that name, and returns the wallet.\"},\"createWallet(uint256)\":{\"notice\":\"Generates a wallet from the private key and returns the wallet.\"},\"createWallet(uint256,string)\":{\"notice\":\"Generates a wallet from the private key, labels the account with that name, and returns the wallet.\"},\"deployCode(string)\":{\"notice\":\"Deploys a contract from an artifact file. Takes in the relative path to the json file or the path to the artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional.\"},\"deployCode(string,bytes)\":{\"notice\":\"Deploys a contract from an artifact file. Takes in the relative path to the json file or the path to the artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional. Additionaly accepts abi-encoded constructor arguments.\"},\"deriveKey(string,string,uint32)\":{\"notice\":\"Derive a private key from a provided mnenomic string (or mnenomic file path) at `{derivationPath}{index}`.\"},\"deriveKey(string,string,uint32,string)\":{\"notice\":\"Derive a private key from a provided mnenomic string (or mnenomic file path) in the specified language at `{derivationPath}{index}`.\"},\"deriveKey(string,uint32)\":{\"notice\":\"Derive a private key from a provided mnenomic string (or mnenomic file path) at the derivation path `m/44'/60'/0'/0/{index}`.\"},\"deriveKey(string,uint32,string)\":{\"notice\":\"Derive a private key from a provided mnenomic string (or mnenomic file path) in the specified language at the derivation path `m/44'/60'/0'/0/{index}`.\"},\"ensNamehash(string)\":{\"notice\":\"Returns ENS namehash for provided string.\"},\"envAddress(string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `address`. Reverts if the variable was not found or could not be parsed.\"},\"envAddress(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `address`, delimited by `delim`. Reverts if the variable was not found or could not be parsed.\"},\"envBool(string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `bool`. Reverts if the variable was not found or could not be parsed.\"},\"envBool(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `bool`, delimited by `delim`. Reverts if the variable was not found or could not be parsed.\"},\"envBytes(string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `bytes`. Reverts if the variable was not found or could not be parsed.\"},\"envBytes(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `bytes`, delimited by `delim`. Reverts if the variable was not found or could not be parsed.\"},\"envBytes32(string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `bytes32`. Reverts if the variable was not found or could not be parsed.\"},\"envBytes32(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `bytes32`, delimited by `delim`. Reverts if the variable was not found or could not be parsed.\"},\"envExists(string)\":{\"notice\":\"Gets the environment variable `name` and returns true if it exists, else returns false.\"},\"envInt(string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `int256`. Reverts if the variable was not found or could not be parsed.\"},\"envInt(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `int256`, delimited by `delim`. Reverts if the variable was not found or could not be parsed.\"},\"envOr(string,address)\":{\"notice\":\"Gets the environment variable `name` and parses it as `address`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,bool)\":{\"notice\":\"Gets the environment variable `name` and parses it as `bool`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,bytes)\":{\"notice\":\"Gets the environment variable `name` and parses it as `bytes`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,bytes32)\":{\"notice\":\"Gets the environment variable `name` and parses it as `bytes32`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,int256)\":{\"notice\":\"Gets the environment variable `name` and parses it as `int256`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `string`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string,address[])\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `address`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string,bool[])\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `bool`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string,bytes32[])\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `bytes32`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string,bytes[])\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `bytes`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string,int256[])\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `int256`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string,string[])\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `string`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string,uint256[])\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `uint256`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,uint256)\":{\"notice\":\"Gets the environment variable `name` and parses it as `uint256`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envString(string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `string`. Reverts if the variable was not found or could not be parsed.\"},\"envString(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `string`, delimited by `delim`. Reverts if the variable was not found or could not be parsed.\"},\"envUint(string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `uint256`. Reverts if the variable was not found or could not be parsed.\"},\"envUint(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `uint256`, delimited by `delim`. Reverts if the variable was not found or could not be parsed.\"},\"eth_getLogs(uint256,uint256,address,bytes32[])\":{\"notice\":\"Gets all the logs according to specified filter.\"},\"exists(string)\":{\"notice\":\"Returns true if the given path points to an existing entity, else returns false.\"},\"ffi(string[])\":{\"notice\":\"Performs a foreign function call via the terminal.\"},\"fsMetadata(string)\":{\"notice\":\"Given a path, query the file system to get information about a file, directory, etc.\"},\"getBlobBaseFee()\":{\"notice\":\"Gets the current `block.blobbasefee`. You should use this instead of `block.blobbasefee` if you use `vm.blobBaseFee`, as `block.blobbasefee` is assumed to be constant across a transaction, and as a result will get optimized out by the compiler. See https://github.com/foundry-rs/foundry/issues/6180\"},\"getBlockNumber()\":{\"notice\":\"Gets the current `block.number`. You should use this instead of `block.number` if you use `vm.roll`, as `block.number` is assumed to be constant across a transaction, and as a result will get optimized out by the compiler. See https://github.com/foundry-rs/foundry/issues/6180\"},\"getBlockTimestamp()\":{\"notice\":\"Gets the current `block.timestamp`. You should use this instead of `block.timestamp` if you use `vm.warp`, as `block.timestamp` is assumed to be constant across a transaction, and as a result will get optimized out by the compiler. See https://github.com/foundry-rs/foundry/issues/6180\"},\"getCode(string)\":{\"notice\":\"Gets the creation bytecode from an artifact file. Takes in the relative path to the json file or the path to the artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional.\"},\"getDeployedCode(string)\":{\"notice\":\"Gets the deployed bytecode from an artifact file. Takes in the relative path to the json file or the path to the artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional.\"},\"getFoundryVersion()\":{\"notice\":\"Returns the Foundry version. Format: <cargo_version>+<git_sha>+<build_timestamp> Sample output: 0.2.0+faa94c384+202407110019 Note: Build timestamps may vary slightly across platforms due to separate CI jobs. For reliable version comparisons, use YYYYMMDD0000 format (e.g., >= 202407110000) to compare timestamps while ignoring minor time differences.\"},\"getLabel(address)\":{\"notice\":\"Gets the label for the specified address.\"},\"getMappingKeyAndParentOf(address,bytes32)\":{\"notice\":\"Gets the map key and parent of a mapping at a given slot, for a given address.\"},\"getMappingLength(address,bytes32)\":{\"notice\":\"Gets the number of elements in the mapping at the given slot, for a given address.\"},\"getMappingSlotAt(address,bytes32,uint256)\":{\"notice\":\"Gets the elements at index idx of the mapping at the given slot, for a given address. The index must be less than the length of the mapping (i.e. the number of keys in the mapping).\"},\"getNonce((address,uint256,uint256,uint256))\":{\"notice\":\"Get the nonce of a `Wallet`.\"},\"getNonce(address)\":{\"notice\":\"Gets the nonce of an account.\"},\"getRecordedLogs()\":{\"notice\":\"Gets all the recorded logs.\"},\"indexOf(string,string)\":{\"notice\":\"Returns the index of the first occurrence of a `key` in an `input` string. Returns `NOT_FOUND` (i.e. `type(uint256).max`) if the `key` is not found. Returns 0 in case of an empty `key`.\"},\"isContext(uint8)\":{\"notice\":\"Returns true if `forge` command was executed in given context.\"},\"isDir(string)\":{\"notice\":\"Returns true if the path exists on disk and is pointing at a directory, else returns false.\"},\"isFile(string)\":{\"notice\":\"Returns true if the path exists on disk and is pointing at a regular file, else returns false.\"},\"keyExists(string,string)\":{\"notice\":\"Checks if `key` exists in a JSON object `keyExists` is being deprecated in favor of `keyExistsJson`. It will be removed in future versions.\"},\"keyExistsJson(string,string)\":{\"notice\":\"Checks if `key` exists in a JSON object.\"},\"keyExistsToml(string,string)\":{\"notice\":\"Checks if `key` exists in a TOML table.\"},\"label(address,string)\":{\"notice\":\"Labels an address in call traces.\"},\"lastCallGas()\":{\"notice\":\"Gets the gas used in the last call.\"},\"load(address,bytes32)\":{\"notice\":\"Loads a storage slot from an address.\"},\"parseAddress(string)\":{\"notice\":\"Parses the given `string` into an `address`.\"},\"parseBool(string)\":{\"notice\":\"Parses the given `string` into a `bool`.\"},\"parseBytes(string)\":{\"notice\":\"Parses the given `string` into `bytes`.\"},\"parseBytes32(string)\":{\"notice\":\"Parses the given `string` into a `bytes32`.\"},\"parseInt(string)\":{\"notice\":\"Parses the given `string` into a `int256`.\"},\"parseJson(string)\":{\"notice\":\"ABI-encodes a JSON object.\"},\"parseJson(string,string)\":{\"notice\":\"ABI-encodes a JSON object at `key`.\"},\"parseJsonAddress(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `address`.\"},\"parseJsonAddressArray(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `address[]`.\"},\"parseJsonBool(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `bool`.\"},\"parseJsonBoolArray(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `bool[]`.\"},\"parseJsonBytes(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `bytes`.\"},\"parseJsonBytes32(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `bytes32`.\"},\"parseJsonBytes32Array(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `bytes32[]`.\"},\"parseJsonBytesArray(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `bytes[]`.\"},\"parseJsonInt(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `int256`.\"},\"parseJsonIntArray(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `int256[]`.\"},\"parseJsonKeys(string,string)\":{\"notice\":\"Returns an array of all the keys in a JSON object.\"},\"parseJsonString(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `string`.\"},\"parseJsonStringArray(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `string[]`.\"},\"parseJsonType(string,string)\":{\"notice\":\"Parses a string of JSON data and coerces it to type corresponding to `typeDescription`.\"},\"parseJsonType(string,string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to type corresponding to `typeDescription`.\"},\"parseJsonTypeArray(string,string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to type array corresponding to `typeDescription`.\"},\"parseJsonUint(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `uint256`.\"},\"parseJsonUintArray(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `uint256[]`.\"},\"parseToml(string)\":{\"notice\":\"ABI-encodes a TOML table.\"},\"parseToml(string,string)\":{\"notice\":\"ABI-encodes a TOML table at `key`.\"},\"parseTomlAddress(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `address`.\"},\"parseTomlAddressArray(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `address[]`.\"},\"parseTomlBool(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `bool`.\"},\"parseTomlBoolArray(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `bool[]`.\"},\"parseTomlBytes(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `bytes`.\"},\"parseTomlBytes32(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `bytes32`.\"},\"parseTomlBytes32Array(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `bytes32[]`.\"},\"parseTomlBytesArray(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `bytes[]`.\"},\"parseTomlInt(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `int256`.\"},\"parseTomlIntArray(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `int256[]`.\"},\"parseTomlKeys(string,string)\":{\"notice\":\"Returns an array of all the keys in a TOML table.\"},\"parseTomlString(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `string`.\"},\"parseTomlStringArray(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `string[]`.\"},\"parseTomlUint(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `uint256`.\"},\"parseTomlUintArray(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `uint256[]`.\"},\"parseUint(string)\":{\"notice\":\"Parses the given `string` into a `uint256`.\"},\"pauseGasMetering()\":{\"notice\":\"Pauses gas metering (i.e. gas usage is not counted). Noop if already paused.\"},\"projectRoot()\":{\"notice\":\"Get the path of the current project root.\"},\"prompt(string)\":{\"notice\":\"Prompts the user for a string value in the terminal.\"},\"promptAddress(string)\":{\"notice\":\"Prompts the user for an address in the terminal.\"},\"promptSecret(string)\":{\"notice\":\"Prompts the user for a hidden string value in the terminal.\"},\"promptSecretUint(string)\":{\"notice\":\"Prompts the user for hidden uint256 in the terminal (usually pk).\"},\"promptUint(string)\":{\"notice\":\"Prompts the user for uint256 in the terminal.\"},\"randomAddress()\":{\"notice\":\"Returns a random `address`.\"},\"randomUint()\":{\"notice\":\"Returns a random uint256 value.\"},\"randomUint(uint256,uint256)\":{\"notice\":\"Returns random uin256 value between the provided range (=min..=max).\"},\"readDir(string)\":{\"notice\":\"Reads the directory at the given path recursively, up to `maxDepth`. `maxDepth` defaults to 1, meaning only the direct children of the given directory will be returned. Follows symbolic links if `followLinks` is true.\"},\"readDir(string,uint64)\":{\"notice\":\"See `readDir(string)`.\"},\"readDir(string,uint64,bool)\":{\"notice\":\"See `readDir(string)`.\"},\"readFile(string)\":{\"notice\":\"Reads the entire content of file to string. `path` is relative to the project root.\"},\"readFileBinary(string)\":{\"notice\":\"Reads the entire content of file as binary. `path` is relative to the project root.\"},\"readLine(string)\":{\"notice\":\"Reads next line of file to string.\"},\"readLink(string)\":{\"notice\":\"Reads a symbolic link, returning the path that the link points to. This cheatcode will revert in the following situations, but is not limited to just these cases: - `path` is not a symbolic link. - `path` does not exist.\"},\"record()\":{\"notice\":\"Records all storage reads and writes.\"},\"recordLogs()\":{\"notice\":\"Record all the transaction logs.\"},\"rememberKey(uint256)\":{\"notice\":\"Adds a private key to the local forge wallet and returns the address.\"},\"removeDir(string,bool)\":{\"notice\":\"Removes a directory at the provided path. This cheatcode will revert in the following situations, but is not limited to just these cases: - `path` doesn't exist. - `path` isn't a directory. - User lacks permissions to modify `path`. - The directory is not empty and `recursive` is false. `path` is relative to the project root.\"},\"removeFile(string)\":{\"notice\":\"Removes a file from the filesystem. This cheatcode will revert in the following situations, but is not limited to just these cases: - `path` points to a directory. - The file doesn't exist. - The user lacks permissions to remove the file. `path` is relative to the project root.\"},\"replace(string,string,string)\":{\"notice\":\"Replaces occurrences of `from` in the given `string` with `to`.\"},\"resumeGasMetering()\":{\"notice\":\"Resumes gas metering (i.e. gas usage is counted again). Noop if already on.\"},\"rpc(string,string)\":{\"notice\":\"Performs an Ethereum JSON-RPC request to the current fork URL.\"},\"rpc(string,string,string)\":{\"notice\":\"Performs an Ethereum JSON-RPC request to the given endpoint.\"},\"rpcUrl(string)\":{\"notice\":\"Returns the RPC url for the given alias.\"},\"rpcUrlStructs()\":{\"notice\":\"Returns all rpc urls and their aliases as structs.\"},\"rpcUrls()\":{\"notice\":\"Returns all rpc urls and their aliases `[alias, url][]`.\"},\"serializeAddress(string,string,address)\":{\"notice\":\"See `serializeJson`.\"},\"serializeAddress(string,string,address[])\":{\"notice\":\"See `serializeJson`.\"},\"serializeBool(string,string,bool)\":{\"notice\":\"See `serializeJson`.\"},\"serializeBool(string,string,bool[])\":{\"notice\":\"See `serializeJson`.\"},\"serializeBytes(string,string,bytes)\":{\"notice\":\"See `serializeJson`.\"},\"serializeBytes(string,string,bytes[])\":{\"notice\":\"See `serializeJson`.\"},\"serializeBytes32(string,string,bytes32)\":{\"notice\":\"See `serializeJson`.\"},\"serializeBytes32(string,string,bytes32[])\":{\"notice\":\"See `serializeJson`.\"},\"serializeInt(string,string,int256)\":{\"notice\":\"See `serializeJson`.\"},\"serializeInt(string,string,int256[])\":{\"notice\":\"See `serializeJson`.\"},\"serializeJson(string,string)\":{\"notice\":\"Serializes a key and value to a JSON object stored in-memory that can be later written to a file. Returns the stringified version of the specific JSON file up to that moment.\"},\"serializeJsonType(string,bytes)\":{\"notice\":\"See `serializeJson`.\"},\"serializeJsonType(string,string,string,bytes)\":{\"notice\":\"See `serializeJson`.\"},\"serializeString(string,string,string)\":{\"notice\":\"See `serializeJson`.\"},\"serializeString(string,string,string[])\":{\"notice\":\"See `serializeJson`.\"},\"serializeUint(string,string,uint256)\":{\"notice\":\"See `serializeJson`.\"},\"serializeUint(string,string,uint256[])\":{\"notice\":\"See `serializeJson`.\"},\"serializeUintToHex(string,string,uint256)\":{\"notice\":\"See `serializeJson`.\"},\"setEnv(string,string)\":{\"notice\":\"Sets environment variables.\"},\"sign((address,uint256,uint256,uint256),bytes32)\":{\"notice\":\"Signs data with a `Wallet`.\"},\"sign(address,bytes32)\":{\"notice\":\"Signs `digest` with signer provided to script using the secp256k1 curve. Raises error if none of the signers passed into the script have provided address.\"},\"sign(bytes32)\":{\"notice\":\"Signs `digest` with signer provided to script using the secp256k1 curve. If `--sender` is provided, the signer with provided address is used, otherwise, if exactly one signer is provided to the script, that signer is used. Raises error if signer passed through `--sender` does not match any unlocked signers or if `--sender` is not provided and not exactly one signer is passed to the script.\"},\"sign(uint256,bytes32)\":{\"notice\":\"Signs `digest` with `privateKey` using the secp256k1 curve.\"},\"signCompact((address,uint256,uint256,uint256),bytes32)\":{\"notice\":\"Signs data with a `Wallet`. Returns a compact signature (`r`, `vs`) as per EIP-2098, where `vs` encodes both the signature's `s` value, and the recovery id `v` in a single bytes32. This format reduces the signature size from 65 to 64 bytes.\"},\"signCompact(address,bytes32)\":{\"notice\":\"Signs `digest` with signer provided to script using the secp256k1 curve. Returns a compact signature (`r`, `vs`) as per EIP-2098, where `vs` encodes both the signature's `s` value, and the recovery id `v` in a single bytes32. This format reduces the signature size from 65 to 64 bytes. Raises error if none of the signers passed into the script have provided address.\"},\"signCompact(bytes32)\":{\"notice\":\"Signs `digest` with signer provided to script using the secp256k1 curve. Returns a compact signature (`r`, `vs`) as per EIP-2098, where `vs` encodes both the signature's `s` value, and the recovery id `v` in a single bytes32. This format reduces the signature size from 65 to 64 bytes. If `--sender` is provided, the signer with provided address is used, otherwise, if exactly one signer is provided to the script, that signer is used. Raises error if signer passed through `--sender` does not match any unlocked signers or if `--sender` is not provided and not exactly one signer is passed to the script.\"},\"signCompact(uint256,bytes32)\":{\"notice\":\"Signs `digest` with `privateKey` using the secp256k1 curve. Returns a compact signature (`r`, `vs`) as per EIP-2098, where `vs` encodes both the signature's `s` value, and the recovery id `v` in a single bytes32. This format reduces the signature size from 65 to 64 bytes.\"},\"signP256(uint256,bytes32)\":{\"notice\":\"Signs `digest` with `privateKey` using the secp256r1 curve.\"},\"sleep(uint256)\":{\"notice\":\"Suspends execution of the main thread for `duration` milliseconds.\"},\"split(string,string)\":{\"notice\":\"Splits the given `string` into an array of strings divided by the `delimiter`.\"},\"startBroadcast()\":{\"notice\":\"Has all subsequent calls (at this call depth only) create transactions that can later be signed and sent onchain. Broadcasting address is determined by checking the following in order: 1. If `--sender` argument was provided, that address is used. 2. If exactly one signer (e.g. private key, hw wallet, keystore) is set when `forge broadcast` is invoked, that signer is used. 3. Otherwise, default foundry sender (1804c8AB1F12E6bbf3894d4083f33e07309d1f38) is used.\"},\"startBroadcast(address)\":{\"notice\":\"Has all subsequent calls (at this call depth only) create transactions with the address provided that can later be signed and sent onchain.\"},\"startBroadcast(uint256)\":{\"notice\":\"Has all subsequent calls (at this call depth only) create transactions with the private key provided that can later be signed and sent onchain.\"},\"startMappingRecording()\":{\"notice\":\"Starts recording all map SSTOREs for later retrieval.\"},\"startStateDiffRecording()\":{\"notice\":\"Record all account accesses as part of CREATE, CALL or SELFDESTRUCT opcodes in order, along with the context of the calls\"},\"stopAndReturnStateDiff()\":{\"notice\":\"Returns an ordered array of all account accesses from a `vm.startStateDiffRecording` session.\"},\"stopBroadcast()\":{\"notice\":\"Stops collecting onchain transactions.\"},\"stopMappingRecording()\":{\"notice\":\"Stops recording all map SSTOREs for later retrieval and clears the recorded data.\"},\"toBase64(bytes)\":{\"notice\":\"Encodes a `bytes` value to a base64 string.\"},\"toBase64(string)\":{\"notice\":\"Encodes a `string` value to a base64 string.\"},\"toBase64URL(bytes)\":{\"notice\":\"Encodes a `bytes` value to a base64url string.\"},\"toBase64URL(string)\":{\"notice\":\"Encodes a `string` value to a base64url string.\"},\"toLowercase(string)\":{\"notice\":\"Converts the given `string` value to Lowercase.\"},\"toString(address)\":{\"notice\":\"Converts the given value to a `string`.\"},\"toString(bool)\":{\"notice\":\"Converts the given value to a `string`.\"},\"toString(bytes)\":{\"notice\":\"Converts the given value to a `string`.\"},\"toString(bytes32)\":{\"notice\":\"Converts the given value to a `string`.\"},\"toString(int256)\":{\"notice\":\"Converts the given value to a `string`.\"},\"toString(uint256)\":{\"notice\":\"Converts the given value to a `string`.\"},\"toUppercase(string)\":{\"notice\":\"Converts the given `string` value to Uppercase.\"},\"trim(string)\":{\"notice\":\"Trims leading and trailing whitespace from the given `string` value.\"},\"tryFfi(string[])\":{\"notice\":\"Performs a foreign function call via terminal and returns the exit code, stdout, and stderr.\"},\"unixTime()\":{\"notice\":\"Returns the time since unix epoch in milliseconds.\"},\"writeFile(string,string)\":{\"notice\":\"Writes data to file, creating a file if it does not exist, and entirely replacing its contents if it does. `path` is relative to the project root.\"},\"writeFileBinary(string,bytes)\":{\"notice\":\"Writes binary data to a file, creating a file if it does not exist, and entirely replacing its contents if it does. `path` is relative to the project root.\"},\"writeJson(string,string)\":{\"notice\":\"Write a serialized JSON object to a file. If the file exists, it will be overwritten.\"},\"writeJson(string,string,string)\":{\"notice\":\"Write a serialized JSON object to an **existing** JSON file, replacing a value with key = <value_key.> This is useful to replace a specific value of a JSON file, without having to parse the entire thing.\"},\"writeLine(string,string)\":{\"notice\":\"Writes line to file, creating a file if it does not exist. `path` is relative to the project root.\"},\"writeToml(string,string)\":{\"notice\":\"Takes serialized JSON, converts to TOML and write a serialized TOML to a file.\"},\"writeToml(string,string,string)\":{\"notice\":\"Takes serialized JSON, converts to TOML and write a serialized TOML table to an **existing** TOML file, replacing a value with key = <value_key.> This is useful to replace a specific value of a TOML file, without having to parse the entire thing.\"}},\"notice\":\"The `VmSafe` interface does not allow manipulation of the EVM state or other actions that may result in Script simulations differing from on-chain execution. It is recommended to only use these cheats in scripts.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/forge-std/src/Vm.sol\":\"VmSafe\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=node_modules/@openzeppelin/\",\":@uniswap/=node_modules/@uniswap/\",\":base64-sol/=node_modules/base64-sol/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\"]},\"sources\":{\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0x7121b5b99c4baefb34fdc1f3cc7235aac7138bbc2265344571709417623f5029\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://3866315b5f89f81746192969834b5932b30c62d7e86ad646e99b6055bdc0ca74\",\"dweb:/ipfs/QmRLhuB96iRxeF5pX4FdsizAaqgDaH2eCWFqfEXbdz9v7n\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.27+commit.40a35a09"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"target","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"accesses","outputs":[{"internalType":"bytes32[]","name":"readSlots","type":"bytes32[]"},{"internalType":"bytes32[]","name":"writeSlots","type":"bytes32[]"}]},{"inputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}],"stateMutability":"pure","type":"function","name":"addr","outputs":[{"internalType":"address","name":"keyAddr","type":"address"}]},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"maxDelta","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertApproxEqAbs"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"maxDelta","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertApproxEqAbs"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"maxDelta","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertApproxEqAbs"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"maxDelta","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertApproxEqAbs"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"maxDelta","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertApproxEqAbsDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"maxDelta","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertApproxEqAbsDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"maxDelta","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertApproxEqAbsDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"maxDelta","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertApproxEqAbsDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"maxPercentDelta","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertApproxEqRel"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"maxPercentDelta","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertApproxEqRel"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"maxPercentDelta","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertApproxEqRel"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"maxPercentDelta","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertApproxEqRel"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"maxPercentDelta","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertApproxEqRelDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"maxPercentDelta","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertApproxEqRelDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"maxPercentDelta","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertApproxEqRelDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"maxPercentDelta","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertApproxEqRelDecimal"},{"inputs":[{"internalType":"bytes32[]","name":"left","type":"bytes32[]"},{"internalType":"bytes32[]","name":"right","type":"bytes32[]"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"int256[]","name":"left","type":"int256[]"},{"internalType":"int256[]","name":"right","type":"int256[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"address","name":"left","type":"address"},{"internalType":"address","name":"right","type":"address"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"string","name":"left","type":"string"},{"internalType":"string","name":"right","type":"string"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"address[]","name":"left","type":"address[]"},{"internalType":"address[]","name":"right","type":"address[]"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"address[]","name":"left","type":"address[]"},{"internalType":"address[]","name":"right","type":"address[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bool","name":"left","type":"bool"},{"internalType":"bool","name":"right","type":"bool"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"address","name":"left","type":"address"},{"internalType":"address","name":"right","type":"address"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"uint256[]","name":"left","type":"uint256[]"},{"internalType":"uint256[]","name":"right","type":"uint256[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bool[]","name":"left","type":"bool[]"},{"internalType":"bool[]","name":"right","type":"bool[]"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"int256[]","name":"left","type":"int256[]"},{"internalType":"int256[]","name":"right","type":"int256[]"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bytes32","name":"left","type":"bytes32"},{"internalType":"bytes32","name":"right","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"uint256[]","name":"left","type":"uint256[]"},{"internalType":"uint256[]","name":"right","type":"uint256[]"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bytes","name":"left","type":"bytes"},{"internalType":"bytes","name":"right","type":"bytes"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bytes32","name":"left","type":"bytes32"},{"internalType":"bytes32","name":"right","type":"bytes32"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"string[]","name":"left","type":"string[]"},{"internalType":"string[]","name":"right","type":"string[]"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bytes32[]","name":"left","type":"bytes32[]"},{"internalType":"bytes32[]","name":"right","type":"bytes32[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bytes","name":"left","type":"bytes"},{"internalType":"bytes","name":"right","type":"bytes"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bool[]","name":"left","type":"bool[]"},{"internalType":"bool[]","name":"right","type":"bool[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bytes[]","name":"left","type":"bytes[]"},{"internalType":"bytes[]","name":"right","type":"bytes[]"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"string[]","name":"left","type":"string[]"},{"internalType":"string[]","name":"right","type":"string[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"string","name":"left","type":"string"},{"internalType":"string","name":"right","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bytes[]","name":"left","type":"bytes[]"},{"internalType":"bytes[]","name":"right","type":"bytes[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bool","name":"left","type":"bool"},{"internalType":"bool","name":"right","type":"bool"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertEqDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertEqDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEqDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEqDecimal"},{"inputs":[{"internalType":"bool","name":"condition","type":"bool"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertFalse"},{"inputs":[{"internalType":"bool","name":"condition","type":"bool"}],"stateMutability":"pure","type":"function","name":"assertFalse"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"}],"stateMutability":"pure","type":"function","name":"assertGe"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertGe"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertGe"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertGe"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertGeDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertGeDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertGeDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertGeDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"}],"stateMutability":"pure","type":"function","name":"assertGt"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertGt"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertGt"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertGt"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertGtDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertGtDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertGtDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertGtDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertLe"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertLe"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"}],"stateMutability":"pure","type":"function","name":"assertLe"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertLe"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertLeDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertLeDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertLeDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertLeDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"}],"stateMutability":"pure","type":"function","name":"assertLt"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertLt"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertLt"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertLt"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertLtDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertLtDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertLtDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertLtDecimal"},{"inputs":[{"internalType":"bytes32[]","name":"left","type":"bytes32[]"},{"internalType":"bytes32[]","name":"right","type":"bytes32[]"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"int256[]","name":"left","type":"int256[]"},{"internalType":"int256[]","name":"right","type":"int256[]"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bool","name":"left","type":"bool"},{"internalType":"bool","name":"right","type":"bool"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bytes[]","name":"left","type":"bytes[]"},{"internalType":"bytes[]","name":"right","type":"bytes[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bool","name":"left","type":"bool"},{"internalType":"bool","name":"right","type":"bool"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bool[]","name":"left","type":"bool[]"},{"internalType":"bool[]","name":"right","type":"bool[]"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bytes","name":"left","type":"bytes"},{"internalType":"bytes","name":"right","type":"bytes"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"address[]","name":"left","type":"address[]"},{"internalType":"address[]","name":"right","type":"address[]"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"uint256[]","name":"left","type":"uint256[]"},{"internalType":"uint256[]","name":"right","type":"uint256[]"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bool[]","name":"left","type":"bool[]"},{"internalType":"bool[]","name":"right","type":"bool[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"string","name":"left","type":"string"},{"internalType":"string","name":"right","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"address[]","name":"left","type":"address[]"},{"internalType":"address[]","name":"right","type":"address[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"string","name":"left","type":"string"},{"internalType":"string","name":"right","type":"string"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"address","name":"left","type":"address"},{"internalType":"address","name":"right","type":"address"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bytes32","name":"left","type":"bytes32"},{"internalType":"bytes32","name":"right","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bytes","name":"left","type":"bytes"},{"internalType":"bytes","name":"right","type":"bytes"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"uint256[]","name":"left","type":"uint256[]"},{"internalType":"uint256[]","name":"right","type":"uint256[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"address","name":"left","type":"address"},{"internalType":"address","name":"right","type":"address"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bytes32","name":"left","type":"bytes32"},{"internalType":"bytes32","name":"right","type":"bytes32"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"string[]","name":"left","type":"string[]"},{"internalType":"string[]","name":"right","type":"string[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bytes32[]","name":"left","type":"bytes32[]"},{"internalType":"bytes32[]","name":"right","type":"bytes32[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"string[]","name":"left","type":"string[]"},{"internalType":"string[]","name":"right","type":"string[]"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"int256[]","name":"left","type":"int256[]"},{"internalType":"int256[]","name":"right","type":"int256[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bytes[]","name":"left","type":"bytes[]"},{"internalType":"bytes[]","name":"right","type":"bytes[]"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertNotEqDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEqDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertNotEqDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEqDecimal"},{"inputs":[{"internalType":"bool","name":"condition","type":"bool"}],"stateMutability":"pure","type":"function","name":"assertTrue"},{"inputs":[{"internalType":"bool","name":"condition","type":"bool"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertTrue"},{"inputs":[{"internalType":"bool","name":"condition","type":"bool"}],"stateMutability":"pure","type":"function","name":"assume"},{"inputs":[{"internalType":"string","name":"char","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"breakpoint"},{"inputs":[{"internalType":"string","name":"char","type":"string"},{"internalType":"bool","name":"value","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"breakpoint"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"broadcast"},{"inputs":[{"internalType":"address","name":"signer","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"broadcast"},{"inputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"broadcast"},{"inputs":[{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"broadcastRawTransaction"},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"closeFile"},{"inputs":[{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"bytes32","name":"initCodeHash","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"computeCreate2Address","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"bytes32","name":"initCodeHash","type":"bytes32"},{"internalType":"address","name":"deployer","type":"address"}],"stateMutability":"pure","type":"function","name":"computeCreate2Address","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"address","name":"deployer","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"}],"stateMutability":"pure","type":"function","name":"computeCreateAddress","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"string","name":"from","type":"string"},{"internalType":"string","name":"to","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"copyFile","outputs":[{"internalType":"uint64","name":"copied","type":"uint64"}]},{"inputs":[{"internalType":"string","name":"path","type":"string"},{"internalType":"bool","name":"recursive","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"createDir"},{"inputs":[{"internalType":"string","name":"walletLabel","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"createWallet","outputs":[{"internalType":"struct VmSafe.Wallet","name":"wallet","type":"tuple","components":[{"internalType":"address","name":"addr","type":"address"},{"internalType":"uint256","name":"publicKeyX","type":"uint256"},{"internalType":"uint256","name":"publicKeyY","type":"uint256"},{"internalType":"uint256","name":"privateKey","type":"uint256"}]}]},{"inputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"createWallet","outputs":[{"internalType":"struct VmSafe.Wallet","name":"wallet","type":"tuple","components":[{"internalType":"address","name":"addr","type":"address"},{"internalType":"uint256","name":"publicKeyX","type":"uint256"},{"internalType":"uint256","name":"publicKeyY","type":"uint256"},{"internalType":"uint256","name":"privateKey","type":"uint256"}]}]},{"inputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"},{"internalType":"string","name":"walletLabel","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"createWallet","outputs":[{"internalType":"struct VmSafe.Wallet","name":"wallet","type":"tuple","components":[{"internalType":"address","name":"addr","type":"address"},{"internalType":"uint256","name":"publicKeyX","type":"uint256"},{"internalType":"uint256","name":"publicKeyY","type":"uint256"},{"internalType":"uint256","name":"privateKey","type":"uint256"}]}]},{"inputs":[{"internalType":"string","name":"artifactPath","type":"string"},{"internalType":"bytes","name":"constructorArgs","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"deployCode","outputs":[{"internalType":"address","name":"deployedAddress","type":"address"}]},{"inputs":[{"internalType":"string","name":"artifactPath","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"deployCode","outputs":[{"internalType":"address","name":"deployedAddress","type":"address"}]},{"inputs":[{"internalType":"string","name":"mnemonic","type":"string"},{"internalType":"string","name":"derivationPath","type":"string"},{"internalType":"uint32","name":"index","type":"uint32"},{"internalType":"string","name":"language","type":"string"}],"stateMutability":"pure","type":"function","name":"deriveKey","outputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"mnemonic","type":"string"},{"internalType":"uint32","name":"index","type":"uint32"},{"internalType":"string","name":"language","type":"string"}],"stateMutability":"pure","type":"function","name":"deriveKey","outputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"mnemonic","type":"string"},{"internalType":"uint32","name":"index","type":"uint32"}],"stateMutability":"pure","type":"function","name":"deriveKey","outputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"mnemonic","type":"string"},{"internalType":"string","name":"derivationPath","type":"string"},{"internalType":"uint32","name":"index","type":"uint32"}],"stateMutability":"pure","type":"function","name":"deriveKey","outputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"pure","type":"function","name":"ensNamehash","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"view","type":"function","name":"envAddress","outputs":[{"internalType":"address","name":"value","type":"address"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"}],"stateMutability":"view","type":"function","name":"envAddress","outputs":[{"internalType":"address[]","name":"value","type":"address[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"view","type":"function","name":"envBool","outputs":[{"internalType":"bool","name":"value","type":"bool"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"}],"stateMutability":"view","type":"function","name":"envBool","outputs":[{"internalType":"bool[]","name":"value","type":"bool[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"view","type":"function","name":"envBytes","outputs":[{"internalType":"bytes","name":"value","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"}],"stateMutability":"view","type":"function","name":"envBytes","outputs":[{"internalType":"bytes[]","name":"value","type":"bytes[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"}],"stateMutability":"view","type":"function","name":"envBytes32","outputs":[{"internalType":"bytes32[]","name":"value","type":"bytes32[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"view","type":"function","name":"envBytes32","outputs":[{"internalType":"bytes32","name":"value","type":"bytes32"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"view","type":"function","name":"envExists","outputs":[{"internalType":"bool","name":"result","type":"bool"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"}],"stateMutability":"view","type":"function","name":"envInt","outputs":[{"internalType":"int256[]","name":"value","type":"int256[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"view","type":"function","name":"envInt","outputs":[{"internalType":"int256","name":"value","type":"int256"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"},{"internalType":"bytes32[]","name":"defaultValue","type":"bytes32[]"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"bytes32[]","name":"value","type":"bytes32[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"},{"internalType":"int256[]","name":"defaultValue","type":"int256[]"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"int256[]","name":"value","type":"int256[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"bool","name":"defaultValue","type":"bool"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"bool","name":"value","type":"bool"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"address","name":"defaultValue","type":"address"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"address","name":"value","type":"address"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"uint256","name":"defaultValue","type":"uint256"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"uint256","name":"value","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"},{"internalType":"bytes[]","name":"defaultValue","type":"bytes[]"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"bytes[]","name":"value","type":"bytes[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"},{"internalType":"uint256[]","name":"defaultValue","type":"uint256[]"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"uint256[]","name":"value","type":"uint256[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"},{"internalType":"string[]","name":"defaultValue","type":"string[]"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"string[]","name":"value","type":"string[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"bytes","name":"defaultValue","type":"bytes"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"bytes","name":"value","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"bytes32","name":"defaultValue","type":"bytes32"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"bytes32","name":"value","type":"bytes32"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"int256","name":"defaultValue","type":"int256"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"int256","name":"value","type":"int256"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"},{"internalType":"address[]","name":"defaultValue","type":"address[]"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"address[]","name":"value","type":"address[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"defaultValue","type":"string"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"string","name":"value","type":"string"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"},{"internalType":"bool[]","name":"defaultValue","type":"bool[]"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"bool[]","name":"value","type":"bool[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"}],"stateMutability":"view","type":"function","name":"envString","outputs":[{"internalType":"string[]","name":"value","type":"string[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"view","type":"function","name":"envString","outputs":[{"internalType":"string","name":"value","type":"string"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"view","type":"function","name":"envUint","outputs":[{"internalType":"uint256","name":"value","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"}],"stateMutability":"view","type":"function","name":"envUint","outputs":[{"internalType":"uint256[]","name":"value","type":"uint256[]"}]},{"inputs":[{"internalType":"uint256","name":"fromBlock","type":"uint256"},{"internalType":"uint256","name":"toBlock","type":"uint256"},{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes32[]","name":"topics","type":"bytes32[]"}],"stateMutability":"nonpayable","type":"function","name":"eth_getLogs","outputs":[{"internalType":"struct VmSafe.EthGetLogs[]","name":"logs","type":"tuple[]","components":[{"internalType":"address","name":"emitter","type":"address"},{"internalType":"bytes32[]","name":"topics","type":"bytes32[]"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"bytes32","name":"blockHash","type":"bytes32"},{"internalType":"uint64","name":"blockNumber","type":"uint64"},{"internalType":"bytes32","name":"transactionHash","type":"bytes32"},{"internalType":"uint64","name":"transactionIndex","type":"uint64"},{"internalType":"uint256","name":"logIndex","type":"uint256"},{"internalType":"bool","name":"removed","type":"bool"}]}]},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"exists","outputs":[{"internalType":"bool","name":"result","type":"bool"}]},{"inputs":[{"internalType":"string[]","name":"commandInput","type":"string[]"}],"stateMutability":"nonpayable","type":"function","name":"ffi","outputs":[{"internalType":"bytes","name":"result","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"view","type":"function","name":"fsMetadata","outputs":[{"internalType":"struct VmSafe.FsMetadata","name":"metadata","type":"tuple","components":[{"internalType":"bool","name":"isDir","type":"bool"},{"internalType":"bool","name":"isSymlink","type":"bool"},{"internalType":"uint256","name":"length","type":"uint256"},{"internalType":"bool","name":"readOnly","type":"bool"},{"internalType":"uint256","name":"modified","type":"uint256"},{"internalType":"uint256","name":"accessed","type":"uint256"},{"internalType":"uint256","name":"created","type":"uint256"}]}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getBlobBaseFee","outputs":[{"internalType":"uint256","name":"blobBaseFee","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getBlockNumber","outputs":[{"internalType":"uint256","name":"height","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getBlockTimestamp","outputs":[{"internalType":"uint256","name":"timestamp","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"artifactPath","type":"string"}],"stateMutability":"view","type":"function","name":"getCode","outputs":[{"internalType":"bytes","name":"creationBytecode","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"artifactPath","type":"string"}],"stateMutability":"view","type":"function","name":"getDeployedCode","outputs":[{"internalType":"bytes","name":"runtimeBytecode","type":"bytes"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getFoundryVersion","outputs":[{"internalType":"string","name":"version","type":"string"}]},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"stateMutability":"view","type":"function","name":"getLabel","outputs":[{"internalType":"string","name":"currentLabel","type":"string"}]},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes32","name":"elementSlot","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"getMappingKeyAndParentOf","outputs":[{"internalType":"bool","name":"found","type":"bool"},{"internalType":"bytes32","name":"key","type":"bytes32"},{"internalType":"bytes32","name":"parent","type":"bytes32"}]},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes32","name":"mappingSlot","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"getMappingLength","outputs":[{"internalType":"uint256","name":"length","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes32","name":"mappingSlot","type":"bytes32"},{"internalType":"uint256","name":"idx","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"getMappingSlotAt","outputs":[{"internalType":"bytes32","name":"value","type":"bytes32"}]},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"stateMutability":"view","type":"function","name":"getNonce","outputs":[{"internalType":"uint64","name":"nonce","type":"uint64"}]},{"inputs":[{"internalType":"struct VmSafe.Wallet","name":"wallet","type":"tuple","components":[{"internalType":"address","name":"addr","type":"address"},{"internalType":"uint256","name":"publicKeyX","type":"uint256"},{"internalType":"uint256","name":"publicKeyY","type":"uint256"},{"internalType":"uint256","name":"privateKey","type":"uint256"}]}],"stateMutability":"nonpayable","type":"function","name":"getNonce","outputs":[{"internalType":"uint64","name":"nonce","type":"uint64"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"getRecordedLogs","outputs":[{"internalType":"struct VmSafe.Log[]","name":"logs","type":"tuple[]","components":[{"internalType":"bytes32[]","name":"topics","type":"bytes32[]"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"address","name":"emitter","type":"address"}]}]},{"inputs":[{"internalType":"string","name":"input","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"indexOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"enum VmSafe.ForgeContext","name":"context","type":"uint8"}],"stateMutability":"view","type":"function","name":"isContext","outputs":[{"internalType":"bool","name":"result","type":"bool"}]},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"isDir","outputs":[{"internalType":"bool","name":"result","type":"bool"}]},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"isFile","outputs":[{"internalType":"bool","name":"result","type":"bool"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"view","type":"function","name":"keyExists","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"view","type":"function","name":"keyExistsJson","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"view","type":"function","name":"keyExistsToml","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"string","name":"newLabel","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"label"},{"inputs":[],"stateMutability":"view","type":"function","name":"lastCallGas","outputs":[{"internalType":"struct VmSafe.Gas","name":"gas","type":"tuple","components":[{"internalType":"uint64","name":"gasLimit","type":"uint64"},{"internalType":"uint64","name":"gasTotalUsed","type":"uint64"},{"internalType":"uint64","name":"gasMemoryUsed","type":"uint64"},{"internalType":"int64","name":"gasRefunded","type":"int64"},{"internalType":"uint64","name":"gasRemaining","type":"uint64"}]}]},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes32","name":"slot","type":"bytes32"}],"stateMutability":"view","type":"function","name":"load","outputs":[{"internalType":"bytes32","name":"data","type":"bytes32"}]},{"inputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}],"stateMutability":"pure","type":"function","name":"parseAddress","outputs":[{"internalType":"address","name":"parsedValue","type":"address"}]},{"inputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}],"stateMutability":"pure","type":"function","name":"parseBool","outputs":[{"internalType":"bool","name":"parsedValue","type":"bool"}]},{"inputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}],"stateMutability":"pure","type":"function","name":"parseBytes","outputs":[{"internalType":"bytes","name":"parsedValue","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}],"stateMutability":"pure","type":"function","name":"parseBytes32","outputs":[{"internalType":"bytes32","name":"parsedValue","type":"bytes32"}]},{"inputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}],"stateMutability":"pure","type":"function","name":"parseInt","outputs":[{"internalType":"int256","name":"parsedValue","type":"int256"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJson","outputs":[{"internalType":"bytes","name":"abiEncodedData","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJson","outputs":[{"internalType":"bytes","name":"abiEncodedData","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonAddress","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonAddressArray","outputs":[{"internalType":"address[]","name":"","type":"address[]"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonBool","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonBoolArray","outputs":[{"internalType":"bool[]","name":"","type":"bool[]"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonBytes","outputs":[{"internalType":"bytes","name":"","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonBytes32","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonBytes32Array","outputs":[{"internalType":"bytes32[]","name":"","type":"bytes32[]"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonBytesArray","outputs":[{"internalType":"bytes[]","name":"","type":"bytes[]"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonInt","outputs":[{"internalType":"int256","name":"","type":"int256"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonIntArray","outputs":[{"internalType":"int256[]","name":"","type":"int256[]"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonKeys","outputs":[{"internalType":"string[]","name":"keys","type":"string[]"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonString","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonStringArray","outputs":[{"internalType":"string[]","name":"","type":"string[]"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"typeDescription","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonType","outputs":[{"internalType":"bytes","name":"","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"},{"internalType":"string","name":"typeDescription","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonType","outputs":[{"internalType":"bytes","name":"","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"},{"internalType":"string","name":"typeDescription","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonTypeArray","outputs":[{"internalType":"bytes","name":"","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonUint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonUintArray","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseToml","outputs":[{"internalType":"bytes","name":"abiEncodedData","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"}],"stateMutability":"pure","type":"function","name":"parseToml","outputs":[{"internalType":"bytes","name":"abiEncodedData","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlAddress","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlAddressArray","outputs":[{"internalType":"address[]","name":"","type":"address[]"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlBool","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlBoolArray","outputs":[{"internalType":"bool[]","name":"","type":"bool[]"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlBytes","outputs":[{"internalType":"bytes","name":"","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlBytes32","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlBytes32Array","outputs":[{"internalType":"bytes32[]","name":"","type":"bytes32[]"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlBytesArray","outputs":[{"internalType":"bytes[]","name":"","type":"bytes[]"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlInt","outputs":[{"internalType":"int256","name":"","type":"int256"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlIntArray","outputs":[{"internalType":"int256[]","name":"","type":"int256[]"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlKeys","outputs":[{"internalType":"string[]","name":"keys","type":"string[]"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlString","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlStringArray","outputs":[{"internalType":"string[]","name":"","type":"string[]"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlUint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlUintArray","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}]},{"inputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}],"stateMutability":"pure","type":"function","name":"parseUint","outputs":[{"internalType":"uint256","name":"parsedValue","type":"uint256"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"pauseGasMetering"},{"inputs":[],"stateMutability":"view","type":"function","name":"projectRoot","outputs":[{"internalType":"string","name":"path","type":"string"}]},{"inputs":[{"internalType":"string","name":"promptText","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"prompt","outputs":[{"internalType":"string","name":"input","type":"string"}]},{"inputs":[{"internalType":"string","name":"promptText","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"promptAddress","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"string","name":"promptText","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"promptSecret","outputs":[{"internalType":"string","name":"input","type":"string"}]},{"inputs":[{"internalType":"string","name":"promptText","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"promptSecretUint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"promptText","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"promptUint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"randomAddress","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"randomUint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"min","type":"uint256"},{"internalType":"uint256","name":"max","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"randomUint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"path","type":"string"},{"internalType":"uint64","name":"maxDepth","type":"uint64"}],"stateMutability":"view","type":"function","name":"readDir","outputs":[{"internalType":"struct VmSafe.DirEntry[]","name":"entries","type":"tuple[]","components":[{"internalType":"string","name":"errorMessage","type":"string"},{"internalType":"string","name":"path","type":"string"},{"internalType":"uint64","name":"depth","type":"uint64"},{"internalType":"bool","name":"isDir","type":"bool"},{"internalType":"bool","name":"isSymlink","type":"bool"}]}]},{"inputs":[{"internalType":"string","name":"path","type":"string"},{"internalType":"uint64","name":"maxDepth","type":"uint64"},{"internalType":"bool","name":"followLinks","type":"bool"}],"stateMutability":"view","type":"function","name":"readDir","outputs":[{"internalType":"struct VmSafe.DirEntry[]","name":"entries","type":"tuple[]","components":[{"internalType":"string","name":"errorMessage","type":"string"},{"internalType":"string","name":"path","type":"string"},{"internalType":"uint64","name":"depth","type":"uint64"},{"internalType":"bool","name":"isDir","type":"bool"},{"internalType":"bool","name":"isSymlink","type":"bool"}]}]},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"view","type":"function","name":"readDir","outputs":[{"internalType":"struct VmSafe.DirEntry[]","name":"entries","type":"tuple[]","components":[{"internalType":"string","name":"errorMessage","type":"string"},{"internalType":"string","name":"path","type":"string"},{"internalType":"uint64","name":"depth","type":"uint64"},{"internalType":"bool","name":"isDir","type":"bool"},{"internalType":"bool","name":"isSymlink","type":"bool"}]}]},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"view","type":"function","name":"readFile","outputs":[{"internalType":"string","name":"data","type":"string"}]},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"view","type":"function","name":"readFileBinary","outputs":[{"internalType":"bytes","name":"data","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"view","type":"function","name":"readLine","outputs":[{"internalType":"string","name":"line","type":"string"}]},{"inputs":[{"internalType":"string","name":"linkPath","type":"string"}],"stateMutability":"view","type":"function","name":"readLink","outputs":[{"internalType":"string","name":"targetPath","type":"string"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"record"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"recordLogs"},{"inputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"rememberKey","outputs":[{"internalType":"address","name":"keyAddr","type":"address"}]},{"inputs":[{"internalType":"string","name":"path","type":"string"},{"internalType":"bool","name":"recursive","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"removeDir"},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"removeFile"},{"inputs":[{"internalType":"string","name":"input","type":"string"},{"internalType":"string","name":"from","type":"string"},{"internalType":"string","name":"to","type":"string"}],"stateMutability":"pure","type":"function","name":"replace","outputs":[{"internalType":"string","name":"output","type":"string"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"resumeGasMetering"},{"inputs":[{"internalType":"string","name":"urlOrAlias","type":"string"},{"internalType":"string","name":"method","type":"string"},{"internalType":"string","name":"params","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"rpc","outputs":[{"internalType":"bytes","name":"data","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"method","type":"string"},{"internalType":"string","name":"params","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"rpc","outputs":[{"internalType":"bytes","name":"data","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"rpcAlias","type":"string"}],"stateMutability":"view","type":"function","name":"rpcUrl","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"rpcUrlStructs","outputs":[{"internalType":"struct VmSafe.Rpc[]","name":"urls","type":"tuple[]","components":[{"internalType":"string","name":"key","type":"string"},{"internalType":"string","name":"url","type":"string"}]}]},{"inputs":[],"stateMutability":"view","type":"function","name":"rpcUrls","outputs":[{"internalType":"string[2][]","name":"urls","type":"string[2][]"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"address[]","name":"values","type":"address[]"}],"stateMutability":"nonpayable","type":"function","name":"serializeAddress","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"address","name":"value","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"serializeAddress","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"bool[]","name":"values","type":"bool[]"}],"stateMutability":"nonpayable","type":"function","name":"serializeBool","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"bool","name":"value","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"serializeBool","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"bytes[]","name":"values","type":"bytes[]"}],"stateMutability":"nonpayable","type":"function","name":"serializeBytes","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"bytes","name":"value","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"serializeBytes","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"bytes32[]","name":"values","type":"bytes32[]"}],"stateMutability":"nonpayable","type":"function","name":"serializeBytes32","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"bytes32","name":"value","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"serializeBytes32","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"int256","name":"value","type":"int256"}],"stateMutability":"nonpayable","type":"function","name":"serializeInt","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"int256[]","name":"values","type":"int256[]"}],"stateMutability":"nonpayable","type":"function","name":"serializeInt","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"value","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"serializeJson","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"typeDescription","type":"string"},{"internalType":"bytes","name":"value","type":"bytes"}],"stateMutability":"pure","type":"function","name":"serializeJsonType","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"string","name":"typeDescription","type":"string"},{"internalType":"bytes","name":"value","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"serializeJsonType","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"string[]","name":"values","type":"string[]"}],"stateMutability":"nonpayable","type":"function","name":"serializeString","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"string","name":"value","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"serializeString","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"uint256","name":"value","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"serializeUint","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"uint256[]","name":"values","type":"uint256[]"}],"stateMutability":"nonpayable","type":"function","name":"serializeUint","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"uint256","name":"value","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"serializeUintToHex","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"value","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"setEnv"},{"inputs":[{"internalType":"bytes32","name":"digest","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"sign","outputs":[{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}]},{"inputs":[{"internalType":"address","name":"signer","type":"address"},{"internalType":"bytes32","name":"digest","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"sign","outputs":[{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}]},{"inputs":[{"internalType":"struct VmSafe.Wallet","name":"wallet","type":"tuple","components":[{"internalType":"address","name":"addr","type":"address"},{"internalType":"uint256","name":"publicKeyX","type":"uint256"},{"internalType":"uint256","name":"publicKeyY","type":"uint256"},{"internalType":"uint256","name":"privateKey","type":"uint256"}]},{"internalType":"bytes32","name":"digest","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"sign","outputs":[{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}]},{"inputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"},{"internalType":"bytes32","name":"digest","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"sign","outputs":[{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}]},{"inputs":[{"internalType":"struct VmSafe.Wallet","name":"wallet","type":"tuple","components":[{"internalType":"address","name":"addr","type":"address"},{"internalType":"uint256","name":"publicKeyX","type":"uint256"},{"internalType":"uint256","name":"publicKeyY","type":"uint256"},{"internalType":"uint256","name":"privateKey","type":"uint256"}]},{"internalType":"bytes32","name":"digest","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"signCompact","outputs":[{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"vs","type":"bytes32"}]},{"inputs":[{"internalType":"address","name":"signer","type":"address"},{"internalType":"bytes32","name":"digest","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"signCompact","outputs":[{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"vs","type":"bytes32"}]},{"inputs":[{"internalType":"bytes32","name":"digest","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"signCompact","outputs":[{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"vs","type":"bytes32"}]},{"inputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"},{"internalType":"bytes32","name":"digest","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"signCompact","outputs":[{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"vs","type":"bytes32"}]},{"inputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"},{"internalType":"bytes32","name":"digest","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"signP256","outputs":[{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}]},{"inputs":[{"internalType":"uint256","name":"duration","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"sleep"},{"inputs":[{"internalType":"string","name":"input","type":"string"},{"internalType":"string","name":"delimiter","type":"string"}],"stateMutability":"pure","type":"function","name":"split","outputs":[{"internalType":"string[]","name":"outputs","type":"string[]"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"startBroadcast"},{"inputs":[{"internalType":"address","name":"signer","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"startBroadcast"},{"inputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"startBroadcast"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"startMappingRecording"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"startStateDiffRecording"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"stopAndReturnStateDiff","outputs":[{"internalType":"struct VmSafe.AccountAccess[]","name":"accountAccesses","type":"tuple[]","components":[{"internalType":"struct VmSafe.ChainInfo","name":"chainInfo","type":"tuple","components":[{"internalType":"uint256","name":"forkId","type":"uint256"},{"internalType":"uint256","name":"chainId","type":"uint256"}]},{"internalType":"enum VmSafe.AccountAccessKind","name":"kind","type":"uint8"},{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"accessor","type":"address"},{"internalType":"bool","name":"initialized","type":"bool"},{"internalType":"uint256","name":"oldBalance","type":"uint256"},{"internalType":"uint256","name":"newBalance","type":"uint256"},{"internalType":"bytes","name":"deployedCode","type":"bytes"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"bool","name":"reverted","type":"bool"},{"internalType":"struct VmSafe.StorageAccess[]","name":"storageAccesses","type":"tuple[]","components":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"slot","type":"bytes32"},{"internalType":"bool","name":"isWrite","type":"bool"},{"internalType":"bytes32","name":"previousValue","type":"bytes32"},{"internalType":"bytes32","name":"newValue","type":"bytes32"},{"internalType":"bool","name":"reverted","type":"bool"}]},{"internalType":"uint64","name":"depth","type":"uint64"}]}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"stopBroadcast"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"stopMappingRecording"},{"inputs":[{"internalType":"string","name":"data","type":"string"}],"stateMutability":"pure","type":"function","name":"toBase64","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"pure","type":"function","name":"toBase64","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[{"internalType":"string","name":"data","type":"string"}],"stateMutability":"pure","type":"function","name":"toBase64URL","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"pure","type":"function","name":"toBase64URL","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[{"internalType":"string","name":"input","type":"string"}],"stateMutability":"pure","type":"function","name":"toLowercase","outputs":[{"internalType":"string","name":"output","type":"string"}]},{"inputs":[{"internalType":"address","name":"value","type":"address"}],"stateMutability":"pure","type":"function","name":"toString","outputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}]},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"stateMutability":"pure","type":"function","name":"toString","outputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}]},{"inputs":[{"internalType":"bytes","name":"value","type":"bytes"}],"stateMutability":"pure","type":"function","name":"toString","outputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}]},{"inputs":[{"internalType":"bool","name":"value","type":"bool"}],"stateMutability":"pure","type":"function","name":"toString","outputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}]},{"inputs":[{"internalType":"int256","name":"value","type":"int256"}],"stateMutability":"pure","type":"function","name":"toString","outputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}]},{"inputs":[{"internalType":"bytes32","name":"value","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"toString","outputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}]},{"inputs":[{"internalType":"string","name":"input","type":"string"}],"stateMutability":"pure","type":"function","name":"toUppercase","outputs":[{"internalType":"string","name":"output","type":"string"}]},{"inputs":[{"internalType":"string","name":"input","type":"string"}],"stateMutability":"pure","type":"function","name":"trim","outputs":[{"internalType":"string","name":"output","type":"string"}]},{"inputs":[{"internalType":"string[]","name":"commandInput","type":"string[]"}],"stateMutability":"nonpayable","type":"function","name":"tryFfi","outputs":[{"internalType":"struct VmSafe.FfiResult","name":"result","type":"tuple","components":[{"internalType":"int32","name":"exitCode","type":"int32"},{"internalType":"bytes","name":"stdout","type":"bytes"},{"internalType":"bytes","name":"stderr","type":"bytes"}]}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"unixTime","outputs":[{"internalType":"uint256","name":"milliseconds","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"path","type":"string"},{"internalType":"string","name":"data","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"writeFile"},{"inputs":[{"internalType":"string","name":"path","type":"string"},{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"writeFileBinary"},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"path","type":"string"},{"internalType":"string","name":"valueKey","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"writeJson"},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"path","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"writeJson"},{"inputs":[{"internalType":"string","name":"path","type":"string"},{"internalType":"string","name":"data","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"writeLine"},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"path","type":"string"},{"internalType":"string","name":"valueKey","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"writeToml"},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"path","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"writeToml"}],"devdoc":{"kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{"accesses(address)":{"notice":"Gets all accessed reads and write slot from a `vm.record` session, for a given address."},"addr(uint256)":{"notice":"Gets the address for a given private key."},"assertApproxEqAbs(int256,int256,uint256)":{"notice":"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`."},"assertApproxEqAbs(int256,int256,uint256,string)":{"notice":"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`. Includes error message into revert string on failure."},"assertApproxEqAbs(uint256,uint256,uint256)":{"notice":"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`."},"assertApproxEqAbs(uint256,uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`. Includes error message into revert string on failure."},"assertApproxEqAbsDecimal(int256,int256,uint256,uint256)":{"notice":"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`. Formats values with decimals in failure message."},"assertApproxEqAbsDecimal(int256,int256,uint256,uint256,string)":{"notice":"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertApproxEqAbsDecimal(uint256,uint256,uint256,uint256)":{"notice":"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`. Formats values with decimals in failure message."},"assertApproxEqAbsDecimal(uint256,uint256,uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertApproxEqRel(int256,int256,uint256)":{"notice":"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%"},"assertApproxEqRel(int256,int256,uint256,string)":{"notice":"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Includes error message into revert string on failure."},"assertApproxEqRel(uint256,uint256,uint256)":{"notice":"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%"},"assertApproxEqRel(uint256,uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Includes error message into revert string on failure."},"assertApproxEqRelDecimal(int256,int256,uint256,uint256)":{"notice":"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Formats values with decimals in failure message."},"assertApproxEqRelDecimal(int256,int256,uint256,uint256,string)":{"notice":"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertApproxEqRelDecimal(uint256,uint256,uint256,uint256)":{"notice":"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Formats values with decimals in failure message."},"assertApproxEqRelDecimal(uint256,uint256,uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertEq(address,address)":{"notice":"Asserts that two `address` values are equal."},"assertEq(address,address,string)":{"notice":"Asserts that two `address` values are equal and includes error message into revert string on failure."},"assertEq(address[],address[])":{"notice":"Asserts that two arrays of `address` values are equal."},"assertEq(address[],address[],string)":{"notice":"Asserts that two arrays of `address` values are equal and includes error message into revert string on failure."},"assertEq(bool,bool)":{"notice":"Asserts that two `bool` values are equal."},"assertEq(bool,bool,string)":{"notice":"Asserts that two `bool` values are equal and includes error message into revert string on failure."},"assertEq(bool[],bool[])":{"notice":"Asserts that two arrays of `bool` values are equal."},"assertEq(bool[],bool[],string)":{"notice":"Asserts that two arrays of `bool` values are equal and includes error message into revert string on failure."},"assertEq(bytes,bytes)":{"notice":"Asserts that two `bytes` values are equal."},"assertEq(bytes,bytes,string)":{"notice":"Asserts that two `bytes` values are equal and includes error message into revert string on failure."},"assertEq(bytes32,bytes32)":{"notice":"Asserts that two `bytes32` values are equal."},"assertEq(bytes32,bytes32,string)":{"notice":"Asserts that two `bytes32` values are equal and includes error message into revert string on failure."},"assertEq(bytes32[],bytes32[])":{"notice":"Asserts that two arrays of `bytes32` values are equal."},"assertEq(bytes32[],bytes32[],string)":{"notice":"Asserts that two arrays of `bytes32` values are equal and includes error message into revert string on failure."},"assertEq(bytes[],bytes[])":{"notice":"Asserts that two arrays of `bytes` values are equal."},"assertEq(bytes[],bytes[],string)":{"notice":"Asserts that two arrays of `bytes` values are equal and includes error message into revert string on failure."},"assertEq(int256,int256)":{"notice":"Asserts that two `int256` values are equal."},"assertEq(int256,int256,string)":{"notice":"Asserts that two `int256` values are equal and includes error message into revert string on failure."},"assertEq(int256[],int256[])":{"notice":"Asserts that two arrays of `int256` values are equal."},"assertEq(int256[],int256[],string)":{"notice":"Asserts that two arrays of `int256` values are equal and includes error message into revert string on failure."},"assertEq(string,string)":{"notice":"Asserts that two `string` values are equal."},"assertEq(string,string,string)":{"notice":"Asserts that two `string` values are equal and includes error message into revert string on failure."},"assertEq(string[],string[])":{"notice":"Asserts that two arrays of `string` values are equal."},"assertEq(string[],string[],string)":{"notice":"Asserts that two arrays of `string` values are equal and includes error message into revert string on failure."},"assertEq(uint256,uint256)":{"notice":"Asserts that two `uint256` values are equal."},"assertEq(uint256,uint256,string)":{"notice":"Asserts that two `uint256` values are equal and includes error message into revert string on failure."},"assertEq(uint256[],uint256[])":{"notice":"Asserts that two arrays of `uint256 values are equal."},"assertEq(uint256[],uint256[],string)":{"notice":"Asserts that two arrays of `uint256` values are equal and includes error message into revert string on failure."},"assertEqDecimal(int256,int256,uint256)":{"notice":"Asserts that two `int256` values are equal, formatting them with decimals in failure message."},"assertEqDecimal(int256,int256,uint256,string)":{"notice":"Asserts that two `int256` values are equal, formatting them with decimals in failure message. Includes error message into revert string on failure."},"assertEqDecimal(uint256,uint256,uint256)":{"notice":"Asserts that two `uint256` values are equal, formatting them with decimals in failure message."},"assertEqDecimal(uint256,uint256,uint256,string)":{"notice":"Asserts that two `uint256` values are equal, formatting them with decimals in failure message. Includes error message into revert string on failure."},"assertFalse(bool)":{"notice":"Asserts that the given condition is false."},"assertFalse(bool,string)":{"notice":"Asserts that the given condition is false and includes error message into revert string on failure."},"assertGe(int256,int256)":{"notice":"Compares two `int256` values. Expects first value to be greater than or equal to second."},"assertGe(int256,int256,string)":{"notice":"Compares two `int256` values. Expects first value to be greater than or equal to second. Includes error message into revert string on failure."},"assertGe(uint256,uint256)":{"notice":"Compares two `uint256` values. Expects first value to be greater than or equal to second."},"assertGe(uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects first value to be greater than or equal to second. Includes error message into revert string on failure."},"assertGeDecimal(int256,int256,uint256)":{"notice":"Compares two `int256` values. Expects first value to be greater than or equal to second. Formats values with decimals in failure message."},"assertGeDecimal(int256,int256,uint256,string)":{"notice":"Compares two `int256` values. Expects first value to be greater than or equal to second. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertGeDecimal(uint256,uint256,uint256)":{"notice":"Compares two `uint256` values. Expects first value to be greater than or equal to second. Formats values with decimals in failure message."},"assertGeDecimal(uint256,uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects first value to be greater than or equal to second. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertGt(int256,int256)":{"notice":"Compares two `int256` values. Expects first value to be greater than second."},"assertGt(int256,int256,string)":{"notice":"Compares two `int256` values. Expects first value to be greater than second. Includes error message into revert string on failure."},"assertGt(uint256,uint256)":{"notice":"Compares two `uint256` values. Expects first value to be greater than second."},"assertGt(uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects first value to be greater than second. Includes error message into revert string on failure."},"assertGtDecimal(int256,int256,uint256)":{"notice":"Compares two `int256` values. Expects first value to be greater than second. Formats values with decimals in failure message."},"assertGtDecimal(int256,int256,uint256,string)":{"notice":"Compares two `int256` values. Expects first value to be greater than second. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertGtDecimal(uint256,uint256,uint256)":{"notice":"Compares two `uint256` values. Expects first value to be greater than second. Formats values with decimals in failure message."},"assertGtDecimal(uint256,uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects first value to be greater than second. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertLe(int256,int256)":{"notice":"Compares two `int256` values. Expects first value to be less than or equal to second."},"assertLe(int256,int256,string)":{"notice":"Compares two `int256` values. Expects first value to be less than or equal to second. Includes error message into revert string on failure."},"assertLe(uint256,uint256)":{"notice":"Compares two `uint256` values. Expects first value to be less than or equal to second."},"assertLe(uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects first value to be less than or equal to second. Includes error message into revert string on failure."},"assertLeDecimal(int256,int256,uint256)":{"notice":"Compares two `int256` values. Expects first value to be less than or equal to second. Formats values with decimals in failure message."},"assertLeDecimal(int256,int256,uint256,string)":{"notice":"Compares two `int256` values. Expects first value to be less than or equal to second. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertLeDecimal(uint256,uint256,uint256)":{"notice":"Compares two `uint256` values. Expects first value to be less than or equal to second. Formats values with decimals in failure message."},"assertLeDecimal(uint256,uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects first value to be less than or equal to second. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertLt(int256,int256)":{"notice":"Compares two `int256` values. Expects first value to be less than second."},"assertLt(int256,int256,string)":{"notice":"Compares two `int256` values. Expects first value to be less than second. Includes error message into revert string on failure."},"assertLt(uint256,uint256)":{"notice":"Compares two `uint256` values. Expects first value to be less than second."},"assertLt(uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects first value to be less than second. Includes error message into revert string on failure."},"assertLtDecimal(int256,int256,uint256)":{"notice":"Compares two `int256` values. Expects first value to be less than second. Formats values with decimals in failure message."},"assertLtDecimal(int256,int256,uint256,string)":{"notice":"Compares two `int256` values. Expects first value to be less than second. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertLtDecimal(uint256,uint256,uint256)":{"notice":"Compares two `uint256` values. Expects first value to be less than second. Formats values with decimals in failure message."},"assertLtDecimal(uint256,uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects first value to be less than second. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertNotEq(address,address)":{"notice":"Asserts that two `address` values are not equal."},"assertNotEq(address,address,string)":{"notice":"Asserts that two `address` values are not equal and includes error message into revert string on failure."},"assertNotEq(address[],address[])":{"notice":"Asserts that two arrays of `address` values are not equal."},"assertNotEq(address[],address[],string)":{"notice":"Asserts that two arrays of `address` values are not equal and includes error message into revert string on failure."},"assertNotEq(bool,bool)":{"notice":"Asserts that two `bool` values are not equal."},"assertNotEq(bool,bool,string)":{"notice":"Asserts that two `bool` values are not equal and includes error message into revert string on failure."},"assertNotEq(bool[],bool[])":{"notice":"Asserts that two arrays of `bool` values are not equal."},"assertNotEq(bool[],bool[],string)":{"notice":"Asserts that two arrays of `bool` values are not equal and includes error message into revert string on failure."},"assertNotEq(bytes,bytes)":{"notice":"Asserts that two `bytes` values are not equal."},"assertNotEq(bytes,bytes,string)":{"notice":"Asserts that two `bytes` values are not equal and includes error message into revert string on failure."},"assertNotEq(bytes32,bytes32)":{"notice":"Asserts that two `bytes32` values are not equal."},"assertNotEq(bytes32,bytes32,string)":{"notice":"Asserts that two `bytes32` values are not equal and includes error message into revert string on failure."},"assertNotEq(bytes32[],bytes32[])":{"notice":"Asserts that two arrays of `bytes32` values are not equal."},"assertNotEq(bytes32[],bytes32[],string)":{"notice":"Asserts that two arrays of `bytes32` values are not equal and includes error message into revert string on failure."},"assertNotEq(bytes[],bytes[])":{"notice":"Asserts that two arrays of `bytes` values are not equal."},"assertNotEq(bytes[],bytes[],string)":{"notice":"Asserts that two arrays of `bytes` values are not equal and includes error message into revert string on failure."},"assertNotEq(int256,int256)":{"notice":"Asserts that two `int256` values are not equal."},"assertNotEq(int256,int256,string)":{"notice":"Asserts that two `int256` values are not equal and includes error message into revert string on failure."},"assertNotEq(int256[],int256[])":{"notice":"Asserts that two arrays of `int256` values are not equal."},"assertNotEq(int256[],int256[],string)":{"notice":"Asserts that two arrays of `int256` values are not equal and includes error message into revert string on failure."},"assertNotEq(string,string)":{"notice":"Asserts that two `string` values are not equal."},"assertNotEq(string,string,string)":{"notice":"Asserts that two `string` values are not equal and includes error message into revert string on failure."},"assertNotEq(string[],string[])":{"notice":"Asserts that two arrays of `string` values are not equal."},"assertNotEq(string[],string[],string)":{"notice":"Asserts that two arrays of `string` values are not equal and includes error message into revert string on failure."},"assertNotEq(uint256,uint256)":{"notice":"Asserts that two `uint256` values are not equal."},"assertNotEq(uint256,uint256,string)":{"notice":"Asserts that two `uint256` values are not equal and includes error message into revert string on failure."},"assertNotEq(uint256[],uint256[])":{"notice":"Asserts that two arrays of `uint256` values are not equal."},"assertNotEq(uint256[],uint256[],string)":{"notice":"Asserts that two arrays of `uint256` values are not equal and includes error message into revert string on failure."},"assertNotEqDecimal(int256,int256,uint256)":{"notice":"Asserts that two `int256` values are not equal, formatting them with decimals in failure message."},"assertNotEqDecimal(int256,int256,uint256,string)":{"notice":"Asserts that two `int256` values are not equal, formatting them with decimals in failure message. Includes error message into revert string on failure."},"assertNotEqDecimal(uint256,uint256,uint256)":{"notice":"Asserts that two `uint256` values are not equal, formatting them with decimals in failure message."},"assertNotEqDecimal(uint256,uint256,uint256,string)":{"notice":"Asserts that two `uint256` values are not equal, formatting them with decimals in failure message. Includes error message into revert string on failure."},"assertTrue(bool)":{"notice":"Asserts that the given condition is true."},"assertTrue(bool,string)":{"notice":"Asserts that the given condition is true and includes error message into revert string on failure."},"assume(bool)":{"notice":"If the condition is false, discard this run's fuzz inputs and generate new ones."},"breakpoint(string)":{"notice":"Writes a breakpoint to jump to in the debugger."},"breakpoint(string,bool)":{"notice":"Writes a conditional breakpoint to jump to in the debugger."},"broadcast()":{"notice":"Has the next call (at this call depth only) create transactions that can later be signed and sent onchain. Broadcasting address is determined by checking the following in order: 1. If `--sender` argument was provided, that address is used. 2. If exactly one signer (e.g. private key, hw wallet, keystore) is set when `forge broadcast` is invoked, that signer is used. 3. Otherwise, default foundry sender (1804c8AB1F12E6bbf3894d4083f33e07309d1f38) is used."},"broadcast(address)":{"notice":"Has the next call (at this call depth only) create a transaction with the address provided as the sender that can later be signed and sent onchain."},"broadcast(uint256)":{"notice":"Has the next call (at this call depth only) create a transaction with the private key provided as the sender that can later be signed and sent onchain."},"broadcastRawTransaction(bytes)":{"notice":"Takes a signed transaction and broadcasts it to the network."},"closeFile(string)":{"notice":"Closes file for reading, resetting the offset and allowing to read it from beginning with readLine. `path` is relative to the project root."},"computeCreate2Address(bytes32,bytes32)":{"notice":"Compute the address of a contract created with CREATE2 using the default CREATE2 deployer."},"computeCreate2Address(bytes32,bytes32,address)":{"notice":"Compute the address of a contract created with CREATE2 using the given CREATE2 deployer."},"computeCreateAddress(address,uint256)":{"notice":"Compute the address a contract will be deployed at for a given deployer address and nonce."},"copyFile(string,string)":{"notice":"Copies the contents of one file to another. This function will **overwrite** the contents of `to`. On success, the total number of bytes copied is returned and it is equal to the length of the `to` file as reported by `metadata`. Both `from` and `to` are relative to the project root."},"createDir(string,bool)":{"notice":"Creates a new, empty directory at the provided path. This cheatcode will revert in the following situations, but is not limited to just these cases: - User lacks permissions to modify `path`. - A parent of the given path doesn't exist and `recursive` is false. - `path` already exists and `recursive` is false. `path` is relative to the project root."},"createWallet(string)":{"notice":"Derives a private key from the name, labels the account with that name, and returns the wallet."},"createWallet(uint256)":{"notice":"Generates a wallet from the private key and returns the wallet."},"createWallet(uint256,string)":{"notice":"Generates a wallet from the private key, labels the account with that name, and returns the wallet."},"deployCode(string)":{"notice":"Deploys a contract from an artifact file. Takes in the relative path to the json file or the path to the artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional."},"deployCode(string,bytes)":{"notice":"Deploys a contract from an artifact file. Takes in the relative path to the json file or the path to the artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional. Additionaly accepts abi-encoded constructor arguments."},"deriveKey(string,string,uint32)":{"notice":"Derive a private key from a provided mnenomic string (or mnenomic file path) at `{derivationPath}{index}`."},"deriveKey(string,string,uint32,string)":{"notice":"Derive a private key from a provided mnenomic string (or mnenomic file path) in the specified language at `{derivationPath}{index}`."},"deriveKey(string,uint32)":{"notice":"Derive a private key from a provided mnenomic string (or mnenomic file path) at the derivation path `m/44'/60'/0'/0/{index}`."},"deriveKey(string,uint32,string)":{"notice":"Derive a private key from a provided mnenomic string (or mnenomic file path) in the specified language at the derivation path `m/44'/60'/0'/0/{index}`."},"ensNamehash(string)":{"notice":"Returns ENS namehash for provided string."},"envAddress(string)":{"notice":"Gets the environment variable `name` and parses it as `address`. Reverts if the variable was not found or could not be parsed."},"envAddress(string,string)":{"notice":"Gets the environment variable `name` and parses it as an array of `address`, delimited by `delim`. Reverts if the variable was not found or could not be parsed."},"envBool(string)":{"notice":"Gets the environment variable `name` and parses it as `bool`. Reverts if the variable was not found or could not be parsed."},"envBool(string,string)":{"notice":"Gets the environment variable `name` and parses it as an array of `bool`, delimited by `delim`. Reverts if the variable was not found or could not be parsed."},"envBytes(string)":{"notice":"Gets the environment variable `name` and parses it as `bytes`. Reverts if the variable was not found or could not be parsed."},"envBytes(string,string)":{"notice":"Gets the environment variable `name` and parses it as an array of `bytes`, delimited by `delim`. Reverts if the variable was not found or could not be parsed."},"envBytes32(string)":{"notice":"Gets the environment variable `name` and parses it as `bytes32`. Reverts if the variable was not found or could not be parsed."},"envBytes32(string,string)":{"notice":"Gets the environment variable `name` and parses it as an array of `bytes32`, delimited by `delim`. Reverts if the variable was not found or could not be parsed."},"envExists(string)":{"notice":"Gets the environment variable `name` and returns true if it exists, else returns false."},"envInt(string)":{"notice":"Gets the environment variable `name` and parses it as `int256`. Reverts if the variable was not found or could not be parsed."},"envInt(string,string)":{"notice":"Gets the environment variable `name` and parses it as an array of `int256`, delimited by `delim`. Reverts if the variable was not found or could not be parsed."},"envOr(string,address)":{"notice":"Gets the environment variable `name` and parses it as `address`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,bool)":{"notice":"Gets the environment variable `name` and parses it as `bool`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,bytes)":{"notice":"Gets the environment variable `name` and parses it as `bytes`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,bytes32)":{"notice":"Gets the environment variable `name` and parses it as `bytes32`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,int256)":{"notice":"Gets the environment variable `name` and parses it as `int256`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,string)":{"notice":"Gets the environment variable `name` and parses it as `string`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,string,address[])":{"notice":"Gets the environment variable `name` and parses it as an array of `address`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,string,bool[])":{"notice":"Gets the environment variable `name` and parses it as an array of `bool`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,string,bytes32[])":{"notice":"Gets the environment variable `name` and parses it as an array of `bytes32`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,string,bytes[])":{"notice":"Gets the environment variable `name` and parses it as an array of `bytes`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,string,int256[])":{"notice":"Gets the environment variable `name` and parses it as an array of `int256`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,string,string[])":{"notice":"Gets the environment variable `name` and parses it as an array of `string`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,string,uint256[])":{"notice":"Gets the environment variable `name` and parses it as an array of `uint256`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,uint256)":{"notice":"Gets the environment variable `name` and parses it as `uint256`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envString(string)":{"notice":"Gets the environment variable `name` and parses it as `string`. Reverts if the variable was not found or could not be parsed."},"envString(string,string)":{"notice":"Gets the environment variable `name` and parses it as an array of `string`, delimited by `delim`. Reverts if the variable was not found or could not be parsed."},"envUint(string)":{"notice":"Gets the environment variable `name` and parses it as `uint256`. Reverts if the variable was not found or could not be parsed."},"envUint(string,string)":{"notice":"Gets the environment variable `name` and parses it as an array of `uint256`, delimited by `delim`. Reverts if the variable was not found or could not be parsed."},"eth_getLogs(uint256,uint256,address,bytes32[])":{"notice":"Gets all the logs according to specified filter."},"exists(string)":{"notice":"Returns true if the given path points to an existing entity, else returns false."},"ffi(string[])":{"notice":"Performs a foreign function call via the terminal."},"fsMetadata(string)":{"notice":"Given a path, query the file system to get information about a file, directory, etc."},"getBlobBaseFee()":{"notice":"Gets the current `block.blobbasefee`. You should use this instead of `block.blobbasefee` if you use `vm.blobBaseFee`, as `block.blobbasefee` is assumed to be constant across a transaction, and as a result will get optimized out by the compiler. See https://github.com/foundry-rs/foundry/issues/6180"},"getBlockNumber()":{"notice":"Gets the current `block.number`. You should use this instead of `block.number` if you use `vm.roll`, as `block.number` is assumed to be constant across a transaction, and as a result will get optimized out by the compiler. See https://github.com/foundry-rs/foundry/issues/6180"},"getBlockTimestamp()":{"notice":"Gets the current `block.timestamp`. You should use this instead of `block.timestamp` if you use `vm.warp`, as `block.timestamp` is assumed to be constant across a transaction, and as a result will get optimized out by the compiler. See https://github.com/foundry-rs/foundry/issues/6180"},"getCode(string)":{"notice":"Gets the creation bytecode from an artifact file. Takes in the relative path to the json file or the path to the artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional."},"getDeployedCode(string)":{"notice":"Gets the deployed bytecode from an artifact file. Takes in the relative path to the json file or the path to the artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional."},"getFoundryVersion()":{"notice":"Returns the Foundry version. Format: <cargo_version>+<git_sha>+<build_timestamp> Sample output: 0.2.0+faa94c384+202407110019 Note: Build timestamps may vary slightly across platforms due to separate CI jobs. For reliable version comparisons, use YYYYMMDD0000 format (e.g., >= 202407110000) to compare timestamps while ignoring minor time differences."},"getLabel(address)":{"notice":"Gets the label for the specified address."},"getMappingKeyAndParentOf(address,bytes32)":{"notice":"Gets the map key and parent of a mapping at a given slot, for a given address."},"getMappingLength(address,bytes32)":{"notice":"Gets the number of elements in the mapping at the given slot, for a given address."},"getMappingSlotAt(address,bytes32,uint256)":{"notice":"Gets the elements at index idx of the mapping at the given slot, for a given address. The index must be less than the length of the mapping (i.e. the number of keys in the mapping)."},"getNonce((address,uint256,uint256,uint256))":{"notice":"Get the nonce of a `Wallet`."},"getNonce(address)":{"notice":"Gets the nonce of an account."},"getRecordedLogs()":{"notice":"Gets all the recorded logs."},"indexOf(string,string)":{"notice":"Returns the index of the first occurrence of a `key` in an `input` string. Returns `NOT_FOUND` (i.e. `type(uint256).max`) if the `key` is not found. Returns 0 in case of an empty `key`."},"isContext(uint8)":{"notice":"Returns true if `forge` command was executed in given context."},"isDir(string)":{"notice":"Returns true if the path exists on disk and is pointing at a directory, else returns false."},"isFile(string)":{"notice":"Returns true if the path exists on disk and is pointing at a regular file, else returns false."},"keyExists(string,string)":{"notice":"Checks if `key` exists in a JSON object `keyExists` is being deprecated in favor of `keyExistsJson`. It will be removed in future versions."},"keyExistsJson(string,string)":{"notice":"Checks if `key` exists in a JSON object."},"keyExistsToml(string,string)":{"notice":"Checks if `key` exists in a TOML table."},"label(address,string)":{"notice":"Labels an address in call traces."},"lastCallGas()":{"notice":"Gets the gas used in the last call."},"load(address,bytes32)":{"notice":"Loads a storage slot from an address."},"parseAddress(string)":{"notice":"Parses the given `string` into an `address`."},"parseBool(string)":{"notice":"Parses the given `string` into a `bool`."},"parseBytes(string)":{"notice":"Parses the given `string` into `bytes`."},"parseBytes32(string)":{"notice":"Parses the given `string` into a `bytes32`."},"parseInt(string)":{"notice":"Parses the given `string` into a `int256`."},"parseJson(string)":{"notice":"ABI-encodes a JSON object."},"parseJson(string,string)":{"notice":"ABI-encodes a JSON object at `key`."},"parseJsonAddress(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `address`."},"parseJsonAddressArray(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `address[]`."},"parseJsonBool(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `bool`."},"parseJsonBoolArray(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `bool[]`."},"parseJsonBytes(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `bytes`."},"parseJsonBytes32(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `bytes32`."},"parseJsonBytes32Array(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `bytes32[]`."},"parseJsonBytesArray(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `bytes[]`."},"parseJsonInt(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `int256`."},"parseJsonIntArray(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `int256[]`."},"parseJsonKeys(string,string)":{"notice":"Returns an array of all the keys in a JSON object."},"parseJsonString(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `string`."},"parseJsonStringArray(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `string[]`."},"parseJsonType(string,string)":{"notice":"Parses a string of JSON data and coerces it to type corresponding to `typeDescription`."},"parseJsonType(string,string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to type corresponding to `typeDescription`."},"parseJsonTypeArray(string,string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to type array corresponding to `typeDescription`."},"parseJsonUint(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `uint256`."},"parseJsonUintArray(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `uint256[]`."},"parseToml(string)":{"notice":"ABI-encodes a TOML table."},"parseToml(string,string)":{"notice":"ABI-encodes a TOML table at `key`."},"parseTomlAddress(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `address`."},"parseTomlAddressArray(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `address[]`."},"parseTomlBool(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `bool`."},"parseTomlBoolArray(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `bool[]`."},"parseTomlBytes(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `bytes`."},"parseTomlBytes32(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `bytes32`."},"parseTomlBytes32Array(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `bytes32[]`."},"parseTomlBytesArray(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `bytes[]`."},"parseTomlInt(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `int256`."},"parseTomlIntArray(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `int256[]`."},"parseTomlKeys(string,string)":{"notice":"Returns an array of all the keys in a TOML table."},"parseTomlString(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `string`."},"parseTomlStringArray(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `string[]`."},"parseTomlUint(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `uint256`."},"parseTomlUintArray(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `uint256[]`."},"parseUint(string)":{"notice":"Parses the given `string` into a `uint256`."},"pauseGasMetering()":{"notice":"Pauses gas metering (i.e. gas usage is not counted). Noop if already paused."},"projectRoot()":{"notice":"Get the path of the current project root."},"prompt(string)":{"notice":"Prompts the user for a string value in the terminal."},"promptAddress(string)":{"notice":"Prompts the user for an address in the terminal."},"promptSecret(string)":{"notice":"Prompts the user for a hidden string value in the terminal."},"promptSecretUint(string)":{"notice":"Prompts the user for hidden uint256 in the terminal (usually pk)."},"promptUint(string)":{"notice":"Prompts the user for uint256 in the terminal."},"randomAddress()":{"notice":"Returns a random `address`."},"randomUint()":{"notice":"Returns a random uint256 value."},"randomUint(uint256,uint256)":{"notice":"Returns random uin256 value between the provided range (=min..=max)."},"readDir(string)":{"notice":"Reads the directory at the given path recursively, up to `maxDepth`. `maxDepth` defaults to 1, meaning only the direct children of the given directory will be returned. Follows symbolic links if `followLinks` is true."},"readDir(string,uint64)":{"notice":"See `readDir(string)`."},"readDir(string,uint64,bool)":{"notice":"See `readDir(string)`."},"readFile(string)":{"notice":"Reads the entire content of file to string. `path` is relative to the project root."},"readFileBinary(string)":{"notice":"Reads the entire content of file as binary. `path` is relative to the project root."},"readLine(string)":{"notice":"Reads next line of file to string."},"readLink(string)":{"notice":"Reads a symbolic link, returning the path that the link points to. This cheatcode will revert in the following situations, but is not limited to just these cases: - `path` is not a symbolic link. - `path` does not exist."},"record()":{"notice":"Records all storage reads and writes."},"recordLogs()":{"notice":"Record all the transaction logs."},"rememberKey(uint256)":{"notice":"Adds a private key to the local forge wallet and returns the address."},"removeDir(string,bool)":{"notice":"Removes a directory at the provided path. This cheatcode will revert in the following situations, but is not limited to just these cases: - `path` doesn't exist. - `path` isn't a directory. - User lacks permissions to modify `path`. - The directory is not empty and `recursive` is false. `path` is relative to the project root."},"removeFile(string)":{"notice":"Removes a file from the filesystem. This cheatcode will revert in the following situations, but is not limited to just these cases: - `path` points to a directory. - The file doesn't exist. - The user lacks permissions to remove the file. `path` is relative to the project root."},"replace(string,string,string)":{"notice":"Replaces occurrences of `from` in the given `string` with `to`."},"resumeGasMetering()":{"notice":"Resumes gas metering (i.e. gas usage is counted again). Noop if already on."},"rpc(string,string)":{"notice":"Performs an Ethereum JSON-RPC request to the current fork URL."},"rpc(string,string,string)":{"notice":"Performs an Ethereum JSON-RPC request to the given endpoint."},"rpcUrl(string)":{"notice":"Returns the RPC url for the given alias."},"rpcUrlStructs()":{"notice":"Returns all rpc urls and their aliases as structs."},"rpcUrls()":{"notice":"Returns all rpc urls and their aliases `[alias, url][]`."},"serializeAddress(string,string,address)":{"notice":"See `serializeJson`."},"serializeAddress(string,string,address[])":{"notice":"See `serializeJson`."},"serializeBool(string,string,bool)":{"notice":"See `serializeJson`."},"serializeBool(string,string,bool[])":{"notice":"See `serializeJson`."},"serializeBytes(string,string,bytes)":{"notice":"See `serializeJson`."},"serializeBytes(string,string,bytes[])":{"notice":"See `serializeJson`."},"serializeBytes32(string,string,bytes32)":{"notice":"See `serializeJson`."},"serializeBytes32(string,string,bytes32[])":{"notice":"See `serializeJson`."},"serializeInt(string,string,int256)":{"notice":"See `serializeJson`."},"serializeInt(string,string,int256[])":{"notice":"See `serializeJson`."},"serializeJson(string,string)":{"notice":"Serializes a key and value to a JSON object stored in-memory that can be later written to a file. Returns the stringified version of the specific JSON file up to that moment."},"serializeJsonType(string,bytes)":{"notice":"See `serializeJson`."},"serializeJsonType(string,string,string,bytes)":{"notice":"See `serializeJson`."},"serializeString(string,string,string)":{"notice":"See `serializeJson`."},"serializeString(string,string,string[])":{"notice":"See `serializeJson`."},"serializeUint(string,string,uint256)":{"notice":"See `serializeJson`."},"serializeUint(string,string,uint256[])":{"notice":"See `serializeJson`."},"serializeUintToHex(string,string,uint256)":{"notice":"See `serializeJson`."},"setEnv(string,string)":{"notice":"Sets environment variables."},"sign((address,uint256,uint256,uint256),bytes32)":{"notice":"Signs data with a `Wallet`."},"sign(address,bytes32)":{"notice":"Signs `digest` with signer provided to script using the secp256k1 curve. Raises error if none of the signers passed into the script have provided address."},"sign(bytes32)":{"notice":"Signs `digest` with signer provided to script using the secp256k1 curve. If `--sender` is provided, the signer with provided address is used, otherwise, if exactly one signer is provided to the script, that signer is used. Raises error if signer passed through `--sender` does not match any unlocked signers or if `--sender` is not provided and not exactly one signer is passed to the script."},"sign(uint256,bytes32)":{"notice":"Signs `digest` with `privateKey` using the secp256k1 curve."},"signCompact((address,uint256,uint256,uint256),bytes32)":{"notice":"Signs data with a `Wallet`. Returns a compact signature (`r`, `vs`) as per EIP-2098, where `vs` encodes both the signature's `s` value, and the recovery id `v` in a single bytes32. This format reduces the signature size from 65 to 64 bytes."},"signCompact(address,bytes32)":{"notice":"Signs `digest` with signer provided to script using the secp256k1 curve. Returns a compact signature (`r`, `vs`) as per EIP-2098, where `vs` encodes both the signature's `s` value, and the recovery id `v` in a single bytes32. This format reduces the signature size from 65 to 64 bytes. Raises error if none of the signers passed into the script have provided address."},"signCompact(bytes32)":{"notice":"Signs `digest` with signer provided to script using the secp256k1 curve. Returns a compact signature (`r`, `vs`) as per EIP-2098, where `vs` encodes both the signature's `s` value, and the recovery id `v` in a single bytes32. This format reduces the signature size from 65 to 64 bytes. If `--sender` is provided, the signer with provided address is used, otherwise, if exactly one signer is provided to the script, that signer is used. Raises error if signer passed through `--sender` does not match any unlocked signers or if `--sender` is not provided and not exactly one signer is passed to the script."},"signCompact(uint256,bytes32)":{"notice":"Signs `digest` with `privateKey` using the secp256k1 curve. Returns a compact signature (`r`, `vs`) as per EIP-2098, where `vs` encodes both the signature's `s` value, and the recovery id `v` in a single bytes32. This format reduces the signature size from 65 to 64 bytes."},"signP256(uint256,bytes32)":{"notice":"Signs `digest` with `privateKey` using the secp256r1 curve."},"sleep(uint256)":{"notice":"Suspends execution of the main thread for `duration` milliseconds."},"split(string,string)":{"notice":"Splits the given `string` into an array of strings divided by the `delimiter`."},"startBroadcast()":{"notice":"Has all subsequent calls (at this call depth only) create transactions that can later be signed and sent onchain. Broadcasting address is determined by checking the following in order: 1. If `--sender` argument was provided, that address is used. 2. If exactly one signer (e.g. private key, hw wallet, keystore) is set when `forge broadcast` is invoked, that signer is used. 3. Otherwise, default foundry sender (1804c8AB1F12E6bbf3894d4083f33e07309d1f38) is used."},"startBroadcast(address)":{"notice":"Has all subsequent calls (at this call depth only) create transactions with the address provided that can later be signed and sent onchain."},"startBroadcast(uint256)":{"notice":"Has all subsequent calls (at this call depth only) create transactions with the private key provided that can later be signed and sent onchain."},"startMappingRecording()":{"notice":"Starts recording all map SSTOREs for later retrieval."},"startStateDiffRecording()":{"notice":"Record all account accesses as part of CREATE, CALL or SELFDESTRUCT opcodes in order, along with the context of the calls"},"stopAndReturnStateDiff()":{"notice":"Returns an ordered array of all account accesses from a `vm.startStateDiffRecording` session."},"stopBroadcast()":{"notice":"Stops collecting onchain transactions."},"stopMappingRecording()":{"notice":"Stops recording all map SSTOREs for later retrieval and clears the recorded data."},"toBase64(bytes)":{"notice":"Encodes a `bytes` value to a base64 string."},"toBase64(string)":{"notice":"Encodes a `string` value to a base64 string."},"toBase64URL(bytes)":{"notice":"Encodes a `bytes` value to a base64url string."},"toBase64URL(string)":{"notice":"Encodes a `string` value to a base64url string."},"toLowercase(string)":{"notice":"Converts the given `string` value to Lowercase."},"toString(address)":{"notice":"Converts the given value to a `string`."},"toString(bool)":{"notice":"Converts the given value to a `string`."},"toString(bytes)":{"notice":"Converts the given value to a `string`."},"toString(bytes32)":{"notice":"Converts the given value to a `string`."},"toString(int256)":{"notice":"Converts the given value to a `string`."},"toString(uint256)":{"notice":"Converts the given value to a `string`."},"toUppercase(string)":{"notice":"Converts the given `string` value to Uppercase."},"trim(string)":{"notice":"Trims leading and trailing whitespace from the given `string` value."},"tryFfi(string[])":{"notice":"Performs a foreign function call via terminal and returns the exit code, stdout, and stderr."},"unixTime()":{"notice":"Returns the time since unix epoch in milliseconds."},"writeFile(string,string)":{"notice":"Writes data to file, creating a file if it does not exist, and entirely replacing its contents if it does. `path` is relative to the project root."},"writeFileBinary(string,bytes)":{"notice":"Writes binary data to a file, creating a file if it does not exist, and entirely replacing its contents if it does. `path` is relative to the project root."},"writeJson(string,string)":{"notice":"Write a serialized JSON object to a file. If the file exists, it will be overwritten."},"writeJson(string,string,string)":{"notice":"Write a serialized JSON object to an **existing** JSON file, replacing a value with key = <value_key.> This is useful to replace a specific value of a JSON file, without having to parse the entire thing."},"writeLine(string,string)":{"notice":"Writes line to file, creating a file if it does not exist. `path` is relative to the project root."},"writeToml(string,string)":{"notice":"Takes serialized JSON, converts to TOML and write a serialized TOML to a file."},"writeToml(string,string,string)":{"notice":"Takes serialized JSON, converts to TOML and write a serialized TOML table to an **existing** TOML file, replacing a value with key = <value_key.> This is useful to replace a specific value of a TOML file, without having to parse the entire thing."}},"version":1}},"settings":{"remappings":["@openzeppelin/=node_modules/@openzeppelin/","@uniswap/=node_modules/@uniswap/","base64-sol/=node_modules/base64-sol/","eth-gas-reporter/=node_modules/eth-gas-reporter/","forge-std/=lib/forge-std/src/","hardhat/=node_modules/hardhat/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"lib/forge-std/src/Vm.sol":"VmSafe"},"evmVersion":"paris","libraries":{}},"sources":{"lib/forge-std/src/Vm.sol":{"keccak256":"0x7121b5b99c4baefb34fdc1f3cc7235aac7138bbc2265344571709417623f5029","urls":["bzz-raw://3866315b5f89f81746192969834b5932b30c62d7e86ad646e99b6055bdc0ca74","dweb:/ipfs/QmRLhuB96iRxeF5pX4FdsizAaqgDaH2eCWFqfEXbdz9v7n"],"license":"MIT OR Apache-2.0"}},"version":1},"ast":{"absolutePath":"lib/forge-std/src/Vm.sol","id":16245,"exportedSymbols":{"Vm":[16244],"VmSafe":[15595]},"nodeType":"SourceUnit","src":"117:97711:15","nodes":[{"id":12208,"nodeType":"PragmaDirective","src":"117:31:15","nodes":[],"literals":["solidity",">=","0.6",".2","<","0.9",".0"]},{"id":12209,"nodeType":"PragmaDirective","src":"149:33:15","nodes":[],"literals":["experimental","ABIEncoderV2"]},{"id":15595,"nodeType":"ContractDefinition","src":"409:81357:15","nodes":[{"id":12217,"nodeType":"EnumDefinition","src":"529:533:15","nodes":[],"canonicalName":"VmSafe.CallerMode","documentation":{"id":12211,"nodeType":"StructuredDocumentation","src":"432:92:15","text":"A modification applied to either `msg.sender` or `tx.origin`. Returned by `readCallers`."},"members":[{"id":12212,"name":"None","nameLocation":"610:4:15","nodeType":"EnumValue","src":"610:4:15"},{"id":12213,"name":"Broadcast","nameLocation":"714:9:15","nodeType":"EnumValue","src":"714:9:15"},{"id":12214,"name":"RecurrentBroadcast","nameLocation":"829:18:15","nodeType":"EnumValue","src":"829:18:15"},{"id":12215,"name":"Prank","nameLocation":"939:5:15","nodeType":"EnumValue","src":"939:5:15"},{"id":12216,"name":"RecurrentPrank","nameLocation":"1042:14:15","nodeType":"EnumValue","src":"1042:14:15"}],"name":"CallerMode","nameLocation":"534:10:15"},{"id":12230,"nodeType":"EnumDefinition","src":"1118:791:15","nodes":[],"canonicalName":"VmSafe.AccountAccessKind","documentation":{"id":12218,"nodeType":"StructuredDocumentation","src":"1068:45:15","text":"The kind of account access that occurred."},"members":[{"id":12219,"name":"Call","nameLocation":"1186:4:15","nodeType":"EnumValue","src":"1186:4:15"},{"id":12220,"name":"DelegateCall","nameLocation":"1252:12:15","nodeType":"EnumValue","src":"1252:12:15"},{"id":12221,"name":"CallCode","nameLocation":"1322:8:15","nodeType":"EnumValue","src":"1322:8:15"},{"id":12222,"name":"StaticCall","nameLocation":"1390:10:15","nodeType":"EnumValue","src":"1390:10:15"},{"id":12223,"name":"Create","nameLocation":"1446:6:15","nodeType":"EnumValue","src":"1446:6:15"},{"id":12224,"name":"SelfDestruct","nameLocation":"1505:12:15","nodeType":"EnumValue","src":"1505:12:15"},{"id":12225,"name":"Resume","nameLocation":"1644:6:15","nodeType":"EnumValue","src":"1644:6:15"},{"id":12226,"name":"Balance","nameLocation":"1703:7:15","nodeType":"EnumValue","src":"1703:7:15"},{"id":12227,"name":"Extcodesize","nameLocation":"1764:11:15","nodeType":"EnumValue","src":"1764:11:15"},{"id":12228,"name":"Extcodehash","nameLocation":"1829:11:15","nodeType":"EnumValue","src":"1829:11:15"},{"id":12229,"name":"Extcodecopy","nameLocation":"1892:11:15","nodeType":"EnumValue","src":"1892:11:15"}],"name":"AccountAccessKind","nameLocation":"1123:17:15"},{"id":12241,"nodeType":"EnumDefinition","src":"1949:683:15","nodes":[],"canonicalName":"VmSafe.ForgeContext","documentation":{"id":12231,"nodeType":"StructuredDocumentation","src":"1915:29:15","text":"Forge execution contexts."},"members":[{"id":12232,"name":"TestGroup","nameLocation":"2047:9:15","nodeType":"EnumValue","src":"2047:9:15"},{"id":12233,"name":"Test","nameLocation":"2109:4:15","nodeType":"EnumValue","src":"2109:4:15"},{"id":12234,"name":"Coverage","nameLocation":"2170:8:15","nodeType":"EnumValue","src":"2170:8:15"},{"id":12235,"name":"Snapshot","nameLocation":"2235:8:15","nodeType":"EnumValue","src":"2235:8:15"},{"id":12236,"name":"ScriptGroup","nameLocation":"2327:11:15","nodeType":"EnumValue","src":"2327:11:15"},{"id":12237,"name":"ScriptDryRun","nameLocation":"2393:12:15","nodeType":"EnumValue","src":"2393:12:15"},{"id":12238,"name":"ScriptBroadcast","nameLocation":"2472:15:15","nodeType":"EnumValue","src":"2472:15:15"},{"id":12239,"name":"ScriptResume","nameLocation":"2551:12:15","nodeType":"EnumValue","src":"2551:12:15"},{"id":12240,"name":"Unknown","nameLocation":"2619:7:15","nodeType":"EnumValue","src":"2619:7:15"}],"name":"ForgeContext","nameLocation":"1954:12:15"},{"id":12250,"nodeType":"StructDefinition","src":"2694:237:15","nodes":[],"canonicalName":"VmSafe.Log","documentation":{"id":12242,"nodeType":"StructuredDocumentation","src":"2638:51:15","text":"An Ethereum log. Returned by `getRecordedLogs`."},"members":[{"constant":false,"id":12245,"mutability":"mutable","name":"topics","nameLocation":"2792:6:15","nodeType":"VariableDeclaration","scope":12250,"src":"2782:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":12243,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2782:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":12244,"nodeType":"ArrayTypeName","src":"2782:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":12247,"mutability":"mutable","name":"data","nameLocation":"2850:4:15","nodeType":"VariableDeclaration","scope":12250,"src":"2844:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":12246,"name":"bytes","nodeType":"ElementaryTypeName","src":"2844:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":12249,"mutability":"mutable","name":"emitter","nameLocation":"2917:7:15","nodeType":"VariableDeclaration","scope":12250,"src":"2909:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12248,"name":"address","nodeType":"ElementaryTypeName","src":"2909:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"Log","nameLocation":"2701:3:15","scope":15595,"visibility":"public"},{"id":12256,"nodeType":"StructDefinition","src":"3000:119:15","nodes":[],"canonicalName":"VmSafe.Rpc","documentation":{"id":12251,"nodeType":"StructuredDocumentation","src":"2937:58:15","text":"An RPC URL and its alias. Returned by `rpcUrlStructs`."},"members":[{"constant":false,"id":12253,"mutability":"mutable","name":"key","nameLocation":"3065:3:15","nodeType":"VariableDeclaration","scope":12256,"src":"3058:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":12252,"name":"string","nodeType":"ElementaryTypeName","src":"3058:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12255,"mutability":"mutable","name":"url","nameLocation":"3109:3:15","nodeType":"VariableDeclaration","scope":12256,"src":"3102:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":12254,"name":"string","nodeType":"ElementaryTypeName","src":"3102:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"Rpc","nameLocation":"3007:3:15","scope":15595,"visibility":"public"},{"id":12277,"nodeType":"StructDefinition","src":"3179:615:15","nodes":[],"canonicalName":"VmSafe.EthGetLogs","documentation":{"id":12257,"nodeType":"StructuredDocumentation","src":"3125:49:15","text":"An RPC log object. Returned by `eth_getLogs`."},"members":[{"constant":false,"id":12259,"mutability":"mutable","name":"emitter","nameLocation":"3260:7:15","nodeType":"VariableDeclaration","scope":12277,"src":"3252:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12258,"name":"address","nodeType":"ElementaryTypeName","src":"3252:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":12262,"mutability":"mutable","name":"topics","nameLocation":"3354:6:15","nodeType":"VariableDeclaration","scope":12277,"src":"3344:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":12260,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3344:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":12261,"nodeType":"ArrayTypeName","src":"3344:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":12264,"mutability":"mutable","name":"data","nameLocation":"3412:4:15","nodeType":"VariableDeclaration","scope":12277,"src":"3406:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":12263,"name":"bytes","nodeType":"ElementaryTypeName","src":"3406:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":12266,"mutability":"mutable","name":"blockHash","nameLocation":"3461:9:15","nodeType":"VariableDeclaration","scope":12277,"src":"3453:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12265,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3453:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":12268,"mutability":"mutable","name":"blockNumber","nameLocation":"3516:11:15","nodeType":"VariableDeclaration","scope":12277,"src":"3509:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":12267,"name":"uint64","nodeType":"ElementaryTypeName","src":"3509:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":12270,"mutability":"mutable","name":"transactionHash","nameLocation":"3578:15:15","nodeType":"VariableDeclaration","scope":12277,"src":"3570:23:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12269,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3570:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":12272,"mutability":"mutable","name":"transactionIndex","nameLocation":"3657:16:15","nodeType":"VariableDeclaration","scope":12277,"src":"3650:23:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":12271,"name":"uint64","nodeType":"ElementaryTypeName","src":"3650:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":12274,"mutability":"mutable","name":"logIndex","nameLocation":"3717:8:15","nodeType":"VariableDeclaration","scope":12277,"src":"3709:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12273,"name":"uint256","nodeType":"ElementaryTypeName","src":"3709:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":12276,"mutability":"mutable","name":"removed","nameLocation":"3780:7:15","nodeType":"VariableDeclaration","scope":12277,"src":"3775:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":12275,"name":"bool","nodeType":"ElementaryTypeName","src":"3775:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"EthGetLogs","nameLocation":"3186:10:15","scope":15595,"visibility":"public"},{"id":12289,"nodeType":"StructDefinition","src":"3870:334:15","nodes":[],"canonicalName":"VmSafe.DirEntry","documentation":{"id":12278,"nodeType":"StructuredDocumentation","src":"3800:65:15","text":"A single entry in a directory listing. Returned by `readDir`."},"members":[{"constant":false,"id":12280,"mutability":"mutable","name":"errorMessage","nameLocation":"3941:12:15","nodeType":"VariableDeclaration","scope":12289,"src":"3934:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":12279,"name":"string","nodeType":"ElementaryTypeName","src":"3934:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12282,"mutability":"mutable","name":"path","nameLocation":"4004:4:15","nodeType":"VariableDeclaration","scope":12289,"src":"3997:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":12281,"name":"string","nodeType":"ElementaryTypeName","src":"3997:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12284,"mutability":"mutable","name":"depth","nameLocation":"4060:5:15","nodeType":"VariableDeclaration","scope":12289,"src":"4053:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":12283,"name":"uint64","nodeType":"ElementaryTypeName","src":"4053:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":12286,"mutability":"mutable","name":"isDir","nameLocation":"4125:5:15","nodeType":"VariableDeclaration","scope":12289,"src":"4120:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":12285,"name":"bool","nodeType":"ElementaryTypeName","src":"4120:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":12288,"mutability":"mutable","name":"isSymlink","nameLocation":"4188:9:15","nodeType":"VariableDeclaration","scope":12289,"src":"4183:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":12287,"name":"bool","nodeType":"ElementaryTypeName","src":"4183:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"DirEntry","nameLocation":"3877:8:15","scope":15595,"visibility":"public"},{"id":12305,"nodeType":"StructDefinition","src":"4434:599:15","nodes":[],"canonicalName":"VmSafe.FsMetadata","documentation":{"id":12290,"nodeType":"StructuredDocumentation","src":"4210:219:15","text":"Metadata information about a file.\n This structure is returned from the `fsMetadata` function and represents known\n metadata about a file such as its permissions, size, modification\n times, etc."},"members":[{"constant":false,"id":12292,"mutability":"mutable","name":"isDir","nameLocation":"4520:5:15","nodeType":"VariableDeclaration","scope":12305,"src":"4515:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":12291,"name":"bool","nodeType":"ElementaryTypeName","src":"4515:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":12294,"mutability":"mutable","name":"isSymlink","nameLocation":"4591:9:15","nodeType":"VariableDeclaration","scope":12305,"src":"4586:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":12293,"name":"bool","nodeType":"ElementaryTypeName","src":"4586:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":12296,"mutability":"mutable","name":"length","nameLocation":"4683:6:15","nodeType":"VariableDeclaration","scope":12305,"src":"4675:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12295,"name":"uint256","nodeType":"ElementaryTypeName","src":"4675:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":12298,"mutability":"mutable","name":"readOnly","nameLocation":"4774:8:15","nodeType":"VariableDeclaration","scope":12305,"src":"4769:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":12297,"name":"bool","nodeType":"ElementaryTypeName","src":"4769:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":12300,"mutability":"mutable","name":"modified","nameLocation":"4863:8:15","nodeType":"VariableDeclaration","scope":12305,"src":"4855:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12299,"name":"uint256","nodeType":"ElementaryTypeName","src":"4855:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":12302,"mutability":"mutable","name":"accessed","nameLocation":"4939:8:15","nodeType":"VariableDeclaration","scope":12305,"src":"4931:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12301,"name":"uint256","nodeType":"ElementaryTypeName","src":"4931:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":12304,"mutability":"mutable","name":"created","nameLocation":"5019:7:15","nodeType":"VariableDeclaration","scope":12305,"src":"5011:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12303,"name":"uint256","nodeType":"ElementaryTypeName","src":"5011:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"FsMetadata","nameLocation":"4441:10:15","scope":15595,"visibility":"public"},{"id":12315,"nodeType":"StructDefinition","src":"5087:277:15","nodes":[],"canonicalName":"VmSafe.Wallet","documentation":{"id":12306,"nodeType":"StructuredDocumentation","src":"5039:43:15","text":"A wallet with a public and private key."},"members":[{"constant":false,"id":12308,"mutability":"mutable","name":"addr","nameLocation":"5152:4:15","nodeType":"VariableDeclaration","scope":12315,"src":"5144:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12307,"name":"address","nodeType":"ElementaryTypeName","src":"5144:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":12310,"mutability":"mutable","name":"publicKeyX","nameLocation":"5214:10:15","nodeType":"VariableDeclaration","scope":12315,"src":"5206:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12309,"name":"uint256","nodeType":"ElementaryTypeName","src":"5206:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":12312,"mutability":"mutable","name":"publicKeyY","nameLocation":"5282:10:15","nodeType":"VariableDeclaration","scope":12315,"src":"5274:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12311,"name":"uint256","nodeType":"ElementaryTypeName","src":"5274:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":12314,"mutability":"mutable","name":"privateKey","nameLocation":"5347:10:15","nodeType":"VariableDeclaration","scope":12315,"src":"5339:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12313,"name":"uint256","nodeType":"ElementaryTypeName","src":"5339:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Wallet","nameLocation":"5094:6:15","scope":15595,"visibility":"public"},{"id":12323,"nodeType":"StructDefinition","src":"5409:213:15","nodes":[],"canonicalName":"VmSafe.FfiResult","documentation":{"id":12316,"nodeType":"StructuredDocumentation","src":"5370:34:15","text":"The result of a `tryFfi` call."},"members":[{"constant":false,"id":12318,"mutability":"mutable","name":"exitCode","nameLocation":"5480:8:15","nodeType":"VariableDeclaration","scope":12323,"src":"5474:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":12317,"name":"int32","nodeType":"ElementaryTypeName","src":"5474:5:15","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"visibility":"internal"},{"constant":false,"id":12320,"mutability":"mutable","name":"stdout","nameLocation":"5557:6:15","nodeType":"VariableDeclaration","scope":12323,"src":"5551:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":12319,"name":"bytes","nodeType":"ElementaryTypeName","src":"5551:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":12322,"mutability":"mutable","name":"stderr","nameLocation":"5609:6:15","nodeType":"VariableDeclaration","scope":12323,"src":"5603:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":12321,"name":"bytes","nodeType":"ElementaryTypeName","src":"5603:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"FfiResult","nameLocation":"5416:9:15","scope":15595,"visibility":"public"},{"id":12329,"nodeType":"StructDefinition","src":"5671:184:15","nodes":[],"canonicalName":"VmSafe.ChainInfo","documentation":{"id":12324,"nodeType":"StructuredDocumentation","src":"5628:38:15","text":"Information on the chain and fork."},"members":[{"constant":false,"id":12326,"mutability":"mutable","name":"forkId","nameLocation":"5772:6:15","nodeType":"VariableDeclaration","scope":12329,"src":"5764:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12325,"name":"uint256","nodeType":"ElementaryTypeName","src":"5764:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":12328,"mutability":"mutable","name":"chainId","nameLocation":"5841:7:15","nodeType":"VariableDeclaration","scope":12329,"src":"5833:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12327,"name":"uint256","nodeType":"ElementaryTypeName","src":"5833:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"ChainInfo","nameLocation":"5678:9:15","scope":15595,"visibility":"public"},{"id":12361,"nodeType":"StructDefinition","src":"5916:1837:15","nodes":[],"canonicalName":"VmSafe.AccountAccess","documentation":{"id":12330,"nodeType":"StructuredDocumentation","src":"5861:50:15","text":"The result of a `stopAndReturnStateDiff` call."},"members":[{"constant":false,"id":12333,"mutability":"mutable","name":"chainInfo","nameLocation":"6008:9:15","nodeType":"VariableDeclaration","scope":12361,"src":"5998:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_ChainInfo_$12329_storage_ptr","typeString":"struct VmSafe.ChainInfo"},"typeName":{"id":12332,"nodeType":"UserDefinedTypeName","pathNode":{"id":12331,"name":"ChainInfo","nameLocations":["5998:9:15"],"nodeType":"IdentifierPath","referencedDeclaration":12329,"src":"5998:9:15"},"referencedDeclaration":12329,"src":"5998:9:15","typeDescriptions":{"typeIdentifier":"t_struct$_ChainInfo_$12329_storage_ptr","typeString":"struct VmSafe.ChainInfo"}},"visibility":"internal"},{"constant":false,"id":12336,"mutability":"mutable","name":"kind","nameLocation":"6471:4:15","nodeType":"VariableDeclaration","scope":12361,"src":"6453:22:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_AccountAccessKind_$12230","typeString":"enum VmSafe.AccountAccessKind"},"typeName":{"id":12335,"nodeType":"UserDefinedTypeName","pathNode":{"id":12334,"name":"AccountAccessKind","nameLocations":["6453:17:15"],"nodeType":"IdentifierPath","referencedDeclaration":12230,"src":"6453:17:15"},"referencedDeclaration":12230,"src":"6453:17:15","typeDescriptions":{"typeIdentifier":"t_enum$_AccountAccessKind_$12230","typeString":"enum VmSafe.AccountAccessKind"}},"visibility":"internal"},{"constant":false,"id":12338,"mutability":"mutable","name":"account","nameLocation":"6648:7:15","nodeType":"VariableDeclaration","scope":12361,"src":"6640:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12337,"name":"address","nodeType":"ElementaryTypeName","src":"6640:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":12340,"mutability":"mutable","name":"accessor","nameLocation":"6711:8:15","nodeType":"VariableDeclaration","scope":12361,"src":"6703:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12339,"name":"address","nodeType":"ElementaryTypeName","src":"6703:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":12342,"mutability":"mutable","name":"initialized","nameLocation":"6922:11:15","nodeType":"VariableDeclaration","scope":12361,"src":"6917:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":12341,"name":"bool","nodeType":"ElementaryTypeName","src":"6917:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":12344,"mutability":"mutable","name":"oldBalance","nameLocation":"7008:10:15","nodeType":"VariableDeclaration","scope":12361,"src":"7000:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12343,"name":"uint256","nodeType":"ElementaryTypeName","src":"7000:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":12346,"mutability":"mutable","name":"newBalance","nameLocation":"7183:10:15","nodeType":"VariableDeclaration","scope":12361,"src":"7175:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12345,"name":"uint256","nodeType":"ElementaryTypeName","src":"7175:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":12348,"mutability":"mutable","name":"deployedCode","nameLocation":"7260:12:15","nodeType":"VariableDeclaration","scope":12361,"src":"7254:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":12347,"name":"bytes","nodeType":"ElementaryTypeName","src":"7254:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":12350,"mutability":"mutable","name":"value","nameLocation":"7344:5:15","nodeType":"VariableDeclaration","scope":12361,"src":"7336:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12349,"name":"uint256","nodeType":"ElementaryTypeName","src":"7336:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":12352,"mutability":"mutable","name":"data","nameLocation":"7418:4:15","nodeType":"VariableDeclaration","scope":12361,"src":"7412:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":12351,"name":"bytes","nodeType":"ElementaryTypeName","src":"7412:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":12354,"mutability":"mutable","name":"reverted","nameLocation":"7513:8:15","nodeType":"VariableDeclaration","scope":12361,"src":"7508:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":12353,"name":"bool","nodeType":"ElementaryTypeName","src":"7508:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":12358,"mutability":"mutable","name":"storageAccesses","nameLocation":"7635:15:15","nodeType":"VariableDeclaration","scope":12361,"src":"7619:31:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_StorageAccess_$12375_storage_$dyn_storage_ptr","typeString":"struct VmSafe.StorageAccess[]"},"typeName":{"baseType":{"id":12356,"nodeType":"UserDefinedTypeName","pathNode":{"id":12355,"name":"StorageAccess","nameLocations":["7619:13:15"],"nodeType":"IdentifierPath","referencedDeclaration":12375,"src":"7619:13:15"},"referencedDeclaration":12375,"src":"7619:13:15","typeDescriptions":{"typeIdentifier":"t_struct$_StorageAccess_$12375_storage_ptr","typeString":"struct VmSafe.StorageAccess"}},"id":12357,"nodeType":"ArrayTypeName","src":"7619:15:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_StorageAccess_$12375_storage_$dyn_storage_ptr","typeString":"struct VmSafe.StorageAccess[]"}},"visibility":"internal"},{"constant":false,"id":12360,"mutability":"mutable","name":"depth","nameLocation":"7741:5:15","nodeType":"VariableDeclaration","scope":12361,"src":"7734:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":12359,"name":"uint64","nodeType":"ElementaryTypeName","src":"7734:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"name":"AccountAccess","nameLocation":"5923:13:15","scope":15595,"visibility":"public"},{"id":12375,"nodeType":"StructDefinition","src":"7815:425:15","nodes":[],"canonicalName":"VmSafe.StorageAccess","documentation":{"id":12362,"nodeType":"StructuredDocumentation","src":"7759:51:15","text":"The storage accessed during an `AccountAccess`."},"members":[{"constant":false,"id":12364,"mutability":"mutable","name":"account","nameLocation":"7905:7:15","nodeType":"VariableDeclaration","scope":12375,"src":"7897:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12363,"name":"address","nodeType":"ElementaryTypeName","src":"7897:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":12366,"mutability":"mutable","name":"slot","nameLocation":"7969:4:15","nodeType":"VariableDeclaration","scope":12375,"src":"7961:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12365,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7961:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":12368,"mutability":"mutable","name":"isWrite","nameLocation":"8026:7:15","nodeType":"VariableDeclaration","scope":12375,"src":"8021:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":12367,"name":"bool","nodeType":"ElementaryTypeName","src":"8021:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":12370,"mutability":"mutable","name":"previousValue","nameLocation":"8094:13:15","nodeType":"VariableDeclaration","scope":12375,"src":"8086:21:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12369,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8086:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":12372,"mutability":"mutable","name":"newValue","nameLocation":"8163:8:15","nodeType":"VariableDeclaration","scope":12375,"src":"8155:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12371,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8155:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":12374,"mutability":"mutable","name":"reverted","nameLocation":"8225:8:15","nodeType":"VariableDeclaration","scope":12375,"src":"8220:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":12373,"name":"bool","nodeType":"ElementaryTypeName","src":"8220:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"StorageAccess","nameLocation":"7822:13:15","scope":15595,"visibility":"public"},{"id":12387,"nodeType":"StructDefinition","src":"8291:458:15","nodes":[],"canonicalName":"VmSafe.Gas","documentation":{"id":12376,"nodeType":"StructuredDocumentation","src":"8246:40:15","text":"Gas used. Returned by `lastCallGas`."},"members":[{"constant":false,"id":12378,"mutability":"mutable","name":"gasLimit","nameLocation":"8357:8:15","nodeType":"VariableDeclaration","scope":12387,"src":"8350:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":12377,"name":"uint64","nodeType":"ElementaryTypeName","src":"8350:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":12380,"mutability":"mutable","name":"gasTotalUsed","nameLocation":"8413:12:15","nodeType":"VariableDeclaration","scope":12387,"src":"8406:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":12379,"name":"uint64","nodeType":"ElementaryTypeName","src":"8406:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":12382,"mutability":"mutable","name":"gasMemoryUsed","nameLocation":"8594:13:15","nodeType":"VariableDeclaration","scope":12387,"src":"8587:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":12381,"name":"uint64","nodeType":"ElementaryTypeName","src":"8587:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":12384,"mutability":"mutable","name":"gasRefunded","nameLocation":"8662:11:15","nodeType":"VariableDeclaration","scope":12387,"src":"8656:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":12383,"name":"int64","nodeType":"ElementaryTypeName","src":"8656:5:15","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"},{"constant":false,"id":12386,"mutability":"mutable","name":"gasRemaining","nameLocation":"8730:12:15","nodeType":"VariableDeclaration","scope":12387,"src":"8723:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":12385,"name":"uint64","nodeType":"ElementaryTypeName","src":"8723:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"name":"Gas","nameLocation":"8298:3:15","scope":15595,"visibility":"public"},{"id":12396,"nodeType":"FunctionDefinition","src":"8892:91:15","nodes":[],"documentation":{"id":12388,"nodeType":"StructuredDocumentation","src":"8788:99:15","text":"Derives a private key from the name, labels the account with that name, and returns the wallet."},"functionSelector":"7404f1d2","implemented":false,"kind":"function","modifiers":[],"name":"createWallet","nameLocation":"8901:12:15","parameters":{"id":12391,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12390,"mutability":"mutable","name":"walletLabel","nameLocation":"8930:11:15","nodeType":"VariableDeclaration","scope":12396,"src":"8914:27:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12389,"name":"string","nodeType":"ElementaryTypeName","src":"8914:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8913:29:15"},"returnParameters":{"id":12395,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12394,"mutability":"mutable","name":"wallet","nameLocation":"8975:6:15","nodeType":"VariableDeclaration","scope":12396,"src":"8961:20:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$12315_memory_ptr","typeString":"struct VmSafe.Wallet"},"typeName":{"id":12393,"nodeType":"UserDefinedTypeName","pathNode":{"id":12392,"name":"Wallet","nameLocations":["8961:6:15"],"nodeType":"IdentifierPath","referencedDeclaration":12315,"src":"8961:6:15"},"referencedDeclaration":12315,"src":"8961:6:15","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$12315_storage_ptr","typeString":"struct VmSafe.Wallet"}},"visibility":"internal"}],"src":"8960:22:15"},"scope":15595,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12405,"nodeType":"FunctionDefinition","src":"9061:82:15","nodes":[],"documentation":{"id":12397,"nodeType":"StructuredDocumentation","src":"8989:67:15","text":"Generates a wallet from the private key and returns the wallet."},"functionSelector":"7a675bb6","implemented":false,"kind":"function","modifiers":[],"name":"createWallet","nameLocation":"9070:12:15","parameters":{"id":12400,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12399,"mutability":"mutable","name":"privateKey","nameLocation":"9091:10:15","nodeType":"VariableDeclaration","scope":12405,"src":"9083:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12398,"name":"uint256","nodeType":"ElementaryTypeName","src":"9083:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9082:20:15"},"returnParameters":{"id":12404,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12403,"mutability":"mutable","name":"wallet","nameLocation":"9135:6:15","nodeType":"VariableDeclaration","scope":12405,"src":"9121:20:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$12315_memory_ptr","typeString":"struct VmSafe.Wallet"},"typeName":{"id":12402,"nodeType":"UserDefinedTypeName","pathNode":{"id":12401,"name":"Wallet","nameLocations":["9121:6:15"],"nodeType":"IdentifierPath","referencedDeclaration":12315,"src":"9121:6:15"},"referencedDeclaration":12315,"src":"9121:6:15","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$12315_storage_ptr","typeString":"struct VmSafe.Wallet"}},"visibility":"internal"}],"src":"9120:22:15"},"scope":15595,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12416,"nodeType":"FunctionDefinition","src":"9257:111:15","nodes":[],"documentation":{"id":12406,"nodeType":"StructuredDocumentation","src":"9149:103:15","text":"Generates a wallet from the private key, labels the account with that name, and returns the wallet."},"functionSelector":"ed7c5462","implemented":false,"kind":"function","modifiers":[],"name":"createWallet","nameLocation":"9266:12:15","parameters":{"id":12411,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12408,"mutability":"mutable","name":"privateKey","nameLocation":"9287:10:15","nodeType":"VariableDeclaration","scope":12416,"src":"9279:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12407,"name":"uint256","nodeType":"ElementaryTypeName","src":"9279:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":12410,"mutability":"mutable","name":"walletLabel","nameLocation":"9315:11:15","nodeType":"VariableDeclaration","scope":12416,"src":"9299:27:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12409,"name":"string","nodeType":"ElementaryTypeName","src":"9299:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"9278:49:15"},"returnParameters":{"id":12415,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12414,"mutability":"mutable","name":"wallet","nameLocation":"9360:6:15","nodeType":"VariableDeclaration","scope":12416,"src":"9346:20:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$12315_memory_ptr","typeString":"struct VmSafe.Wallet"},"typeName":{"id":12413,"nodeType":"UserDefinedTypeName","pathNode":{"id":12412,"name":"Wallet","nameLocations":["9346:6:15"],"nodeType":"IdentifierPath","referencedDeclaration":12315,"src":"9346:6:15"},"referencedDeclaration":12315,"src":"9346:6:15","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$12315_storage_ptr","typeString":"struct VmSafe.Wallet"}},"visibility":"internal"}],"src":"9345:22:15"},"scope":15595,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12426,"nodeType":"FunctionDefinition","src":"9516:102:15","nodes":[],"documentation":{"id":12417,"nodeType":"StructuredDocumentation","src":"9374:137:15","text":"Derive a private key from a provided mnenomic string (or mnenomic file path)\n at the derivation path `m/44'/60'/0'/0/{index}`."},"functionSelector":"6229498b","implemented":false,"kind":"function","modifiers":[],"name":"deriveKey","nameLocation":"9525:9:15","parameters":{"id":12422,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12419,"mutability":"mutable","name":"mnemonic","nameLocation":"9551:8:15","nodeType":"VariableDeclaration","scope":12426,"src":"9535:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12418,"name":"string","nodeType":"ElementaryTypeName","src":"9535:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12421,"mutability":"mutable","name":"index","nameLocation":"9568:5:15","nodeType":"VariableDeclaration","scope":12426,"src":"9561:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":12420,"name":"uint32","nodeType":"ElementaryTypeName","src":"9561:6:15","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"9534:40:15"},"returnParameters":{"id":12425,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12424,"mutability":"mutable","name":"privateKey","nameLocation":"9606:10:15","nodeType":"VariableDeclaration","scope":12426,"src":"9598:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12423,"name":"uint256","nodeType":"ElementaryTypeName","src":"9598:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9597:20:15"},"scope":15595,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":12438,"nodeType":"FunctionDefinition","src":"9747:158:15","nodes":[],"documentation":{"id":12427,"nodeType":"StructuredDocumentation","src":"9624:118:15","text":"Derive a private key from a provided mnenomic string (or mnenomic file path)\n at `{derivationPath}{index}`."},"functionSelector":"6bcb2c1b","implemented":false,"kind":"function","modifiers":[],"name":"deriveKey","nameLocation":"9756:9:15","parameters":{"id":12434,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12429,"mutability":"mutable","name":"mnemonic","nameLocation":"9782:8:15","nodeType":"VariableDeclaration","scope":12438,"src":"9766:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12428,"name":"string","nodeType":"ElementaryTypeName","src":"9766:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12431,"mutability":"mutable","name":"derivationPath","nameLocation":"9808:14:15","nodeType":"VariableDeclaration","scope":12438,"src":"9792:30:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12430,"name":"string","nodeType":"ElementaryTypeName","src":"9792:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12433,"mutability":"mutable","name":"index","nameLocation":"9831:5:15","nodeType":"VariableDeclaration","scope":12438,"src":"9824:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":12432,"name":"uint32","nodeType":"ElementaryTypeName","src":"9824:6:15","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"9765:72:15"},"returnParameters":{"id":12437,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12436,"mutability":"mutable","name":"privateKey","nameLocation":"9893:10:15","nodeType":"VariableDeclaration","scope":12438,"src":"9885:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12435,"name":"uint256","nodeType":"ElementaryTypeName","src":"9885:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9884:20:15"},"scope":15595,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":12450,"nodeType":"FunctionDefinition","src":"10079:152:15","nodes":[],"documentation":{"id":12439,"nodeType":"StructuredDocumentation","src":"9911:163:15","text":"Derive a private key from a provided mnenomic string (or mnenomic file path) in the specified language\n at the derivation path `m/44'/60'/0'/0/{index}`."},"functionSelector":"32c8176d","implemented":false,"kind":"function","modifiers":[],"name":"deriveKey","nameLocation":"10088:9:15","parameters":{"id":12446,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12441,"mutability":"mutable","name":"mnemonic","nameLocation":"10114:8:15","nodeType":"VariableDeclaration","scope":12450,"src":"10098:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12440,"name":"string","nodeType":"ElementaryTypeName","src":"10098:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12443,"mutability":"mutable","name":"index","nameLocation":"10131:5:15","nodeType":"VariableDeclaration","scope":12450,"src":"10124:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":12442,"name":"uint32","nodeType":"ElementaryTypeName","src":"10124:6:15","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":12445,"mutability":"mutable","name":"language","nameLocation":"10154:8:15","nodeType":"VariableDeclaration","scope":12450,"src":"10138:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12444,"name":"string","nodeType":"ElementaryTypeName","src":"10138:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"10097:66:15"},"returnParameters":{"id":12449,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12448,"mutability":"mutable","name":"privateKey","nameLocation":"10219:10:15","nodeType":"VariableDeclaration","scope":12450,"src":"10211:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12447,"name":"uint256","nodeType":"ElementaryTypeName","src":"10211:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10210:20:15"},"scope":15595,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":12464,"nodeType":"FunctionDefinition","src":"10386:184:15","nodes":[],"documentation":{"id":12451,"nodeType":"StructuredDocumentation","src":"10237:144:15","text":"Derive a private key from a provided mnenomic string (or mnenomic file path) in the specified language\n at `{derivationPath}{index}`."},"functionSelector":"29233b1f","implemented":false,"kind":"function","modifiers":[],"name":"deriveKey","nameLocation":"10395:9:15","parameters":{"id":12460,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12453,"mutability":"mutable","name":"mnemonic","nameLocation":"10421:8:15","nodeType":"VariableDeclaration","scope":12464,"src":"10405:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12452,"name":"string","nodeType":"ElementaryTypeName","src":"10405:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12455,"mutability":"mutable","name":"derivationPath","nameLocation":"10447:14:15","nodeType":"VariableDeclaration","scope":12464,"src":"10431:30:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12454,"name":"string","nodeType":"ElementaryTypeName","src":"10431:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12457,"mutability":"mutable","name":"index","nameLocation":"10470:5:15","nodeType":"VariableDeclaration","scope":12464,"src":"10463:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":12456,"name":"uint32","nodeType":"ElementaryTypeName","src":"10463:6:15","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":12459,"mutability":"mutable","name":"language","nameLocation":"10493:8:15","nodeType":"VariableDeclaration","scope":12464,"src":"10477:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12458,"name":"string","nodeType":"ElementaryTypeName","src":"10477:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"10404:98:15"},"returnParameters":{"id":12463,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12462,"mutability":"mutable","name":"privateKey","nameLocation":"10558:10:15","nodeType":"VariableDeclaration","scope":12464,"src":"10550:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12461,"name":"uint256","nodeType":"ElementaryTypeName","src":"10550:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10549:20:15"},"scope":15595,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":12472,"nodeType":"FunctionDefinition","src":"10654:76:15","nodes":[],"documentation":{"id":12465,"nodeType":"StructuredDocumentation","src":"10576:73:15","text":"Adds a private key to the local forge wallet and returns the address."},"functionSelector":"22100064","implemented":false,"kind":"function","modifiers":[],"name":"rememberKey","nameLocation":"10663:11:15","parameters":{"id":12468,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12467,"mutability":"mutable","name":"privateKey","nameLocation":"10683:10:15","nodeType":"VariableDeclaration","scope":12472,"src":"10675:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12466,"name":"uint256","nodeType":"ElementaryTypeName","src":"10675:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10674:20:15"},"returnParameters":{"id":12471,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12470,"mutability":"mutable","name":"keyAddr","nameLocation":"10721:7:15","nodeType":"VariableDeclaration","scope":12472,"src":"10713:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12469,"name":"address","nodeType":"ElementaryTypeName","src":"10713:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"10712:17:15"},"scope":15595,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12485,"nodeType":"FunctionDefinition","src":"11009:102:15","nodes":[],"documentation":{"id":12473,"nodeType":"StructuredDocumentation","src":"10736:268:15","text":"Signs data with a `Wallet`.\n Returns a compact signature (`r`, `vs`) as per EIP-2098, where `vs` encodes both the\n signature's `s` value, and the recovery id `v` in a single bytes32.\n This format reduces the signature size from 65 to 64 bytes."},"functionSelector":"3d0e292f","implemented":false,"kind":"function","modifiers":[],"name":"signCompact","nameLocation":"11018:11:15","parameters":{"id":12479,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12476,"mutability":"mutable","name":"wallet","nameLocation":"11046:6:15","nodeType":"VariableDeclaration","scope":12485,"src":"11030:22:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$12315_calldata_ptr","typeString":"struct VmSafe.Wallet"},"typeName":{"id":12475,"nodeType":"UserDefinedTypeName","pathNode":{"id":12474,"name":"Wallet","nameLocations":["11030:6:15"],"nodeType":"IdentifierPath","referencedDeclaration":12315,"src":"11030:6:15"},"referencedDeclaration":12315,"src":"11030:6:15","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$12315_storage_ptr","typeString":"struct VmSafe.Wallet"}},"visibility":"internal"},{"constant":false,"id":12478,"mutability":"mutable","name":"digest","nameLocation":"11062:6:15","nodeType":"VariableDeclaration","scope":12485,"src":"11054:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12477,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11054:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"11029:40:15"},"returnParameters":{"id":12484,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12481,"mutability":"mutable","name":"r","nameLocation":"11096:1:15","nodeType":"VariableDeclaration","scope":12485,"src":"11088:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12480,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11088:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":12483,"mutability":"mutable","name":"vs","nameLocation":"11107:2:15","nodeType":"VariableDeclaration","scope":12485,"src":"11099:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12482,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11099:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"11087:23:15"},"scope":15595,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12497,"nodeType":"FunctionDefinition","src":"11422:103:15","nodes":[],"documentation":{"id":12486,"nodeType":"StructuredDocumentation","src":"11117:300:15","text":"Signs `digest` with `privateKey` using the secp256k1 curve.\n Returns a compact signature (`r`, `vs`) as per EIP-2098, where `vs` encodes both the\n signature's `s` value, and the recovery id `v` in a single bytes32.\n This format reduces the signature size from 65 to 64 bytes."},"functionSelector":"cc2a781f","implemented":false,"kind":"function","modifiers":[],"name":"signCompact","nameLocation":"11431:11:15","parameters":{"id":12491,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12488,"mutability":"mutable","name":"privateKey","nameLocation":"11451:10:15","nodeType":"VariableDeclaration","scope":12497,"src":"11443:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12487,"name":"uint256","nodeType":"ElementaryTypeName","src":"11443:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":12490,"mutability":"mutable","name":"digest","nameLocation":"11471:6:15","nodeType":"VariableDeclaration","scope":12497,"src":"11463:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12489,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11463:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"11442:36:15"},"returnParameters":{"id":12496,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12493,"mutability":"mutable","name":"r","nameLocation":"11510:1:15","nodeType":"VariableDeclaration","scope":12497,"src":"11502:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12492,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11502:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":12495,"mutability":"mutable","name":"vs","nameLocation":"11521:2:15","nodeType":"VariableDeclaration","scope":12497,"src":"11513:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12494,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11513:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"11501:23:15"},"scope":15595,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":12507,"nodeType":"FunctionDefinition","src":"12201:83:15","nodes":[],"documentation":{"id":12498,"nodeType":"StructuredDocumentation","src":"11531:665:15","text":"Signs `digest` with signer provided to script using the secp256k1 curve.\n Returns a compact signature (`r`, `vs`) as per EIP-2098, where `vs` encodes both the\n signature's `s` value, and the recovery id `v` in a single bytes32.\n This format reduces the signature size from 65 to 64 bytes.\n If `--sender` is provided, the signer with provided address is used, otherwise,\n if exactly one signer is provided to the script, that signer is used.\n Raises error if signer passed through `--sender` does not match any unlocked signers or\n if `--sender` is not provided and not exactly one signer is passed to the script."},"functionSelector":"a282dc4b","implemented":false,"kind":"function","modifiers":[],"name":"signCompact","nameLocation":"12210:11:15","parameters":{"id":12501,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12500,"mutability":"mutable","name":"digest","nameLocation":"12230:6:15","nodeType":"VariableDeclaration","scope":12507,"src":"12222:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12499,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12222:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"12221:16:15"},"returnParameters":{"id":12506,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12503,"mutability":"mutable","name":"r","nameLocation":"12269:1:15","nodeType":"VariableDeclaration","scope":12507,"src":"12261:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12502,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12261:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":12505,"mutability":"mutable","name":"vs","nameLocation":"12280:2:15","nodeType":"VariableDeclaration","scope":12507,"src":"12272:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12504,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12272:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"12260:23:15"},"scope":15595,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":12519,"nodeType":"FunctionDefinition","src":"12698:99:15","nodes":[],"documentation":{"id":12508,"nodeType":"StructuredDocumentation","src":"12290:403:15","text":"Signs `digest` with signer provided to script using the secp256k1 curve.\n Returns a compact signature (`r`, `vs`) as per EIP-2098, where `vs` encodes both the\n signature's `s` value, and the recovery id `v` in a single bytes32.\n This format reduces the signature size from 65 to 64 bytes.\n Raises error if none of the signers passed into the script have provided address."},"functionSelector":"8e2f97bf","implemented":false,"kind":"function","modifiers":[],"name":"signCompact","nameLocation":"12707:11:15","parameters":{"id":12513,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12510,"mutability":"mutable","name":"signer","nameLocation":"12727:6:15","nodeType":"VariableDeclaration","scope":12519,"src":"12719:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12509,"name":"address","nodeType":"ElementaryTypeName","src":"12719:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":12512,"mutability":"mutable","name":"digest","nameLocation":"12743:6:15","nodeType":"VariableDeclaration","scope":12519,"src":"12735:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12511,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12735:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"12718:32:15"},"returnParameters":{"id":12518,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12515,"mutability":"mutable","name":"r","nameLocation":"12782:1:15","nodeType":"VariableDeclaration","scope":12519,"src":"12774:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12514,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12774:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":12517,"mutability":"mutable","name":"vs","nameLocation":"12793:2:15","nodeType":"VariableDeclaration","scope":12519,"src":"12785:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12516,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12785:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"12773:23:15"},"scope":15595,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":12531,"nodeType":"FunctionDefinition","src":"12871:99:15","nodes":[],"documentation":{"id":12520,"nodeType":"StructuredDocumentation","src":"12803:63:15","text":"Signs `digest` with `privateKey` using the secp256r1 curve."},"functionSelector":"83211b40","implemented":false,"kind":"function","modifiers":[],"name":"signP256","nameLocation":"12880:8:15","parameters":{"id":12525,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12522,"mutability":"mutable","name":"privateKey","nameLocation":"12897:10:15","nodeType":"VariableDeclaration","scope":12531,"src":"12889:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12521,"name":"uint256","nodeType":"ElementaryTypeName","src":"12889:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":12524,"mutability":"mutable","name":"digest","nameLocation":"12917:6:15","nodeType":"VariableDeclaration","scope":12531,"src":"12909:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12523,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12909:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"12888:36:15"},"returnParameters":{"id":12530,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12527,"mutability":"mutable","name":"r","nameLocation":"12956:1:15","nodeType":"VariableDeclaration","scope":12531,"src":"12948:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12526,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12948:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":12529,"mutability":"mutable","name":"s","nameLocation":"12967:1:15","nodeType":"VariableDeclaration","scope":12531,"src":"12959:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12528,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12959:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"12947:22:15"},"scope":15595,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":12546,"nodeType":"FunctionDefinition","src":"13012:103:15","nodes":[],"documentation":{"id":12532,"nodeType":"StructuredDocumentation","src":"12976:31:15","text":"Signs data with a `Wallet`."},"functionSelector":"b25c5a25","implemented":false,"kind":"function","modifiers":[],"name":"sign","nameLocation":"13021:4:15","parameters":{"id":12538,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12535,"mutability":"mutable","name":"wallet","nameLocation":"13042:6:15","nodeType":"VariableDeclaration","scope":12546,"src":"13026:22:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$12315_calldata_ptr","typeString":"struct VmSafe.Wallet"},"typeName":{"id":12534,"nodeType":"UserDefinedTypeName","pathNode":{"id":12533,"name":"Wallet","nameLocations":["13026:6:15"],"nodeType":"IdentifierPath","referencedDeclaration":12315,"src":"13026:6:15"},"referencedDeclaration":12315,"src":"13026:6:15","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$12315_storage_ptr","typeString":"struct VmSafe.Wallet"}},"visibility":"internal"},{"constant":false,"id":12537,"mutability":"mutable","name":"digest","nameLocation":"13058:6:15","nodeType":"VariableDeclaration","scope":12546,"src":"13050:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12536,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13050:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"13025:40:15"},"returnParameters":{"id":12545,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12540,"mutability":"mutable","name":"v","nameLocation":"13090:1:15","nodeType":"VariableDeclaration","scope":12546,"src":"13084:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":12539,"name":"uint8","nodeType":"ElementaryTypeName","src":"13084:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":12542,"mutability":"mutable","name":"r","nameLocation":"13101:1:15","nodeType":"VariableDeclaration","scope":12546,"src":"13093:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12541,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13093:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":12544,"mutability":"mutable","name":"s","nameLocation":"13112:1:15","nodeType":"VariableDeclaration","scope":12546,"src":"13104:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12543,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13104:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"13083:31:15"},"scope":15595,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12560,"nodeType":"FunctionDefinition","src":"13189:104:15","nodes":[],"documentation":{"id":12547,"nodeType":"StructuredDocumentation","src":"13121:63:15","text":"Signs `digest` with `privateKey` using the secp256k1 curve."},"functionSelector":"e341eaa4","implemented":false,"kind":"function","modifiers":[],"name":"sign","nameLocation":"13198:4:15","parameters":{"id":12552,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12549,"mutability":"mutable","name":"privateKey","nameLocation":"13211:10:15","nodeType":"VariableDeclaration","scope":12560,"src":"13203:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12548,"name":"uint256","nodeType":"ElementaryTypeName","src":"13203:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":12551,"mutability":"mutable","name":"digest","nameLocation":"13231:6:15","nodeType":"VariableDeclaration","scope":12560,"src":"13223:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12550,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13223:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"13202:36:15"},"returnParameters":{"id":12559,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12554,"mutability":"mutable","name":"v","nameLocation":"13268:1:15","nodeType":"VariableDeclaration","scope":12560,"src":"13262:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":12553,"name":"uint8","nodeType":"ElementaryTypeName","src":"13262:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":12556,"mutability":"mutable","name":"r","nameLocation":"13279:1:15","nodeType":"VariableDeclaration","scope":12560,"src":"13271:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12555,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13271:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":12558,"mutability":"mutable","name":"s","nameLocation":"13290:1:15","nodeType":"VariableDeclaration","scope":12560,"src":"13282:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12557,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13282:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"13261:31:15"},"scope":15595,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":12572,"nodeType":"FunctionDefinition","src":"13732:84:15","nodes":[],"documentation":{"id":12561,"nodeType":"StructuredDocumentation","src":"13299:428:15","text":"Signs `digest` with signer provided to script using the secp256k1 curve.\n If `--sender` is provided, the signer with provided address is used, otherwise,\n if exactly one signer is provided to the script, that signer is used.\n Raises error if signer passed through `--sender` does not match any unlocked signers or\n if `--sender` is not provided and not exactly one signer is passed to the script."},"functionSelector":"799cd333","implemented":false,"kind":"function","modifiers":[],"name":"sign","nameLocation":"13741:4:15","parameters":{"id":12564,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12563,"mutability":"mutable","name":"digest","nameLocation":"13754:6:15","nodeType":"VariableDeclaration","scope":12572,"src":"13746:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12562,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13746:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"13745:16:15"},"returnParameters":{"id":12571,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12566,"mutability":"mutable","name":"v","nameLocation":"13791:1:15","nodeType":"VariableDeclaration","scope":12572,"src":"13785:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":12565,"name":"uint8","nodeType":"ElementaryTypeName","src":"13785:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":12568,"mutability":"mutable","name":"r","nameLocation":"13802:1:15","nodeType":"VariableDeclaration","scope":12572,"src":"13794:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12567,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13794:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":12570,"mutability":"mutable","name":"s","nameLocation":"13813:1:15","nodeType":"VariableDeclaration","scope":12572,"src":"13805:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12569,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13805:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"13784:31:15"},"scope":15595,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":12586,"nodeType":"FunctionDefinition","src":"13993:100:15","nodes":[],"documentation":{"id":12573,"nodeType":"StructuredDocumentation","src":"13822:166:15","text":"Signs `digest` with signer provided to script using the secp256k1 curve.\n Raises error if none of the signers passed into the script have provided address."},"functionSelector":"8c1aa205","implemented":false,"kind":"function","modifiers":[],"name":"sign","nameLocation":"14002:4:15","parameters":{"id":12578,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12575,"mutability":"mutable","name":"signer","nameLocation":"14015:6:15","nodeType":"VariableDeclaration","scope":12586,"src":"14007:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12574,"name":"address","nodeType":"ElementaryTypeName","src":"14007:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":12577,"mutability":"mutable","name":"digest","nameLocation":"14031:6:15","nodeType":"VariableDeclaration","scope":12586,"src":"14023:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12576,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14023:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"14006:32:15"},"returnParameters":{"id":12585,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12580,"mutability":"mutable","name":"v","nameLocation":"14068:1:15","nodeType":"VariableDeclaration","scope":12586,"src":"14062:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":12579,"name":"uint8","nodeType":"ElementaryTypeName","src":"14062:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":12582,"mutability":"mutable","name":"r","nameLocation":"14079:1:15","nodeType":"VariableDeclaration","scope":12586,"src":"14071:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12581,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14071:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":12584,"mutability":"mutable","name":"s","nameLocation":"14090:1:15","nodeType":"VariableDeclaration","scope":12586,"src":"14082:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12583,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14082:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"14061:31:15"},"scope":15595,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":12594,"nodeType":"FunctionDefinition","src":"14280:80:15","nodes":[],"documentation":{"id":12587,"nodeType":"StructuredDocumentation","src":"14137:138:15","text":"Gets the environment variable `name` and parses it as `address`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"350d56bf","implemented":false,"kind":"function","modifiers":[],"name":"envAddress","nameLocation":"14289:10:15","parameters":{"id":12590,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12589,"mutability":"mutable","name":"name","nameLocation":"14316:4:15","nodeType":"VariableDeclaration","scope":12594,"src":"14300:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12588,"name":"string","nodeType":"ElementaryTypeName","src":"14300:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"14299:22:15"},"returnParameters":{"id":12593,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12592,"mutability":"mutable","name":"value","nameLocation":"14353:5:15","nodeType":"VariableDeclaration","scope":12594,"src":"14345:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12591,"name":"address","nodeType":"ElementaryTypeName","src":"14345:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14344:15:15"},"scope":15595,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12605,"nodeType":"FunctionDefinition","src":"14543:112:15","nodes":[],"documentation":{"id":12595,"nodeType":"StructuredDocumentation","src":"14366:172:15","text":"Gets the environment variable `name` and parses it as an array of `address`, delimited by `delim`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"ad31b9fa","implemented":false,"kind":"function","modifiers":[],"name":"envAddress","nameLocation":"14552:10:15","parameters":{"id":12600,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12597,"mutability":"mutable","name":"name","nameLocation":"14579:4:15","nodeType":"VariableDeclaration","scope":12605,"src":"14563:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12596,"name":"string","nodeType":"ElementaryTypeName","src":"14563:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12599,"mutability":"mutable","name":"delim","nameLocation":"14601:5:15","nodeType":"VariableDeclaration","scope":12605,"src":"14585:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12598,"name":"string","nodeType":"ElementaryTypeName","src":"14585:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"14562:45:15"},"returnParameters":{"id":12604,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12603,"mutability":"mutable","name":"value","nameLocation":"14648:5:15","nodeType":"VariableDeclaration","scope":12605,"src":"14631:22:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":12601,"name":"address","nodeType":"ElementaryTypeName","src":"14631:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":12602,"nodeType":"ArrayTypeName","src":"14631:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"14630:24:15"},"scope":15595,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12613,"nodeType":"FunctionDefinition","src":"14801:74:15","nodes":[],"documentation":{"id":12606,"nodeType":"StructuredDocumentation","src":"14661:135:15","text":"Gets the environment variable `name` and parses it as `bool`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"7ed1ec7d","implemented":false,"kind":"function","modifiers":[],"name":"envBool","nameLocation":"14810:7:15","parameters":{"id":12609,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12608,"mutability":"mutable","name":"name","nameLocation":"14834:4:15","nodeType":"VariableDeclaration","scope":12613,"src":"14818:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12607,"name":"string","nodeType":"ElementaryTypeName","src":"14818:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"14817:22:15"},"returnParameters":{"id":12612,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12611,"mutability":"mutable","name":"value","nameLocation":"14868:5:15","nodeType":"VariableDeclaration","scope":12613,"src":"14863:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":12610,"name":"bool","nodeType":"ElementaryTypeName","src":"14863:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"14862:12:15"},"scope":15595,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12624,"nodeType":"FunctionDefinition","src":"15055:106:15","nodes":[],"documentation":{"id":12614,"nodeType":"StructuredDocumentation","src":"14881:169:15","text":"Gets the environment variable `name` and parses it as an array of `bool`, delimited by `delim`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"aaaddeaf","implemented":false,"kind":"function","modifiers":[],"name":"envBool","nameLocation":"15064:7:15","parameters":{"id":12619,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12616,"mutability":"mutable","name":"name","nameLocation":"15088:4:15","nodeType":"VariableDeclaration","scope":12624,"src":"15072:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12615,"name":"string","nodeType":"ElementaryTypeName","src":"15072:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12618,"mutability":"mutable","name":"delim","nameLocation":"15110:5:15","nodeType":"VariableDeclaration","scope":12624,"src":"15094:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12617,"name":"string","nodeType":"ElementaryTypeName","src":"15094:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"15071:45:15"},"returnParameters":{"id":12623,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12622,"mutability":"mutable","name":"value","nameLocation":"15154:5:15","nodeType":"VariableDeclaration","scope":12624,"src":"15140:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":12620,"name":"bool","nodeType":"ElementaryTypeName","src":"15140:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":12621,"nodeType":"ArrayTypeName","src":"15140:6:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"src":"15139:21:15"},"scope":15595,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12632,"nodeType":"FunctionDefinition","src":"15310:80:15","nodes":[],"documentation":{"id":12625,"nodeType":"StructuredDocumentation","src":"15167:138:15","text":"Gets the environment variable `name` and parses it as `bytes32`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"97949042","implemented":false,"kind":"function","modifiers":[],"name":"envBytes32","nameLocation":"15319:10:15","parameters":{"id":12628,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12627,"mutability":"mutable","name":"name","nameLocation":"15346:4:15","nodeType":"VariableDeclaration","scope":12632,"src":"15330:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12626,"name":"string","nodeType":"ElementaryTypeName","src":"15330:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"15329:22:15"},"returnParameters":{"id":12631,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12630,"mutability":"mutable","name":"value","nameLocation":"15383:5:15","nodeType":"VariableDeclaration","scope":12632,"src":"15375:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12629,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15375:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"15374:15:15"},"scope":15595,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12643,"nodeType":"FunctionDefinition","src":"15573:112:15","nodes":[],"documentation":{"id":12633,"nodeType":"StructuredDocumentation","src":"15396:172:15","text":"Gets the environment variable `name` and parses it as an array of `bytes32`, delimited by `delim`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"5af231c1","implemented":false,"kind":"function","modifiers":[],"name":"envBytes32","nameLocation":"15582:10:15","parameters":{"id":12638,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12635,"mutability":"mutable","name":"name","nameLocation":"15609:4:15","nodeType":"VariableDeclaration","scope":12643,"src":"15593:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12634,"name":"string","nodeType":"ElementaryTypeName","src":"15593:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12637,"mutability":"mutable","name":"delim","nameLocation":"15631:5:15","nodeType":"VariableDeclaration","scope":12643,"src":"15615:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12636,"name":"string","nodeType":"ElementaryTypeName","src":"15615:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"15592:45:15"},"returnParameters":{"id":12642,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12641,"mutability":"mutable","name":"value","nameLocation":"15678:5:15","nodeType":"VariableDeclaration","scope":12643,"src":"15661:22:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":12639,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15661:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":12640,"nodeType":"ArrayTypeName","src":"15661:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"15660:24:15"},"scope":15595,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12651,"nodeType":"FunctionDefinition","src":"15832:83:15","nodes":[],"documentation":{"id":12644,"nodeType":"StructuredDocumentation","src":"15691:136:15","text":"Gets the environment variable `name` and parses it as `bytes`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"4d7baf06","implemented":false,"kind":"function","modifiers":[],"name":"envBytes","nameLocation":"15841:8:15","parameters":{"id":12647,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12646,"mutability":"mutable","name":"name","nameLocation":"15866:4:15","nodeType":"VariableDeclaration","scope":12651,"src":"15850:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12645,"name":"string","nodeType":"ElementaryTypeName","src":"15850:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"15849:22:15"},"returnParameters":{"id":12650,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12649,"mutability":"mutable","name":"value","nameLocation":"15908:5:15","nodeType":"VariableDeclaration","scope":12651,"src":"15895:18:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":12648,"name":"bytes","nodeType":"ElementaryTypeName","src":"15895:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"15894:20:15"},"scope":15595,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12662,"nodeType":"FunctionDefinition","src":"16096:108:15","nodes":[],"documentation":{"id":12652,"nodeType":"StructuredDocumentation","src":"15921:170:15","text":"Gets the environment variable `name` and parses it as an array of `bytes`, delimited by `delim`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"ddc2651b","implemented":false,"kind":"function","modifiers":[],"name":"envBytes","nameLocation":"16105:8:15","parameters":{"id":12657,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12654,"mutability":"mutable","name":"name","nameLocation":"16130:4:15","nodeType":"VariableDeclaration","scope":12662,"src":"16114:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12653,"name":"string","nodeType":"ElementaryTypeName","src":"16114:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12656,"mutability":"mutable","name":"delim","nameLocation":"16152:5:15","nodeType":"VariableDeclaration","scope":12662,"src":"16136:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12655,"name":"string","nodeType":"ElementaryTypeName","src":"16136:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"16113:45:15"},"returnParameters":{"id":12661,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12660,"mutability":"mutable","name":"value","nameLocation":"16197:5:15","nodeType":"VariableDeclaration","scope":12662,"src":"16182:20:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":12658,"name":"bytes","nodeType":"ElementaryTypeName","src":"16182:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":12659,"nodeType":"ArrayTypeName","src":"16182:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"16181:22:15"},"scope":15595,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12670,"nodeType":"FunctionDefinition","src":"16306:77:15","nodes":[],"documentation":{"id":12663,"nodeType":"StructuredDocumentation","src":"16210:91:15","text":"Gets the environment variable `name` and returns true if it exists, else returns false."},"functionSelector":"ce8365f9","implemented":false,"kind":"function","modifiers":[],"name":"envExists","nameLocation":"16315:9:15","parameters":{"id":12666,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12665,"mutability":"mutable","name":"name","nameLocation":"16341:4:15","nodeType":"VariableDeclaration","scope":12670,"src":"16325:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12664,"name":"string","nodeType":"ElementaryTypeName","src":"16325:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"16324:22:15"},"returnParameters":{"id":12669,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12668,"mutability":"mutable","name":"result","nameLocation":"16375:6:15","nodeType":"VariableDeclaration","scope":12670,"src":"16370:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":12667,"name":"bool","nodeType":"ElementaryTypeName","src":"16370:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"16369:13:15"},"scope":15595,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12678,"nodeType":"FunctionDefinition","src":"16531:75:15","nodes":[],"documentation":{"id":12671,"nodeType":"StructuredDocumentation","src":"16389:137:15","text":"Gets the environment variable `name` and parses it as `int256`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"892a0c61","implemented":false,"kind":"function","modifiers":[],"name":"envInt","nameLocation":"16540:6:15","parameters":{"id":12674,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12673,"mutability":"mutable","name":"name","nameLocation":"16563:4:15","nodeType":"VariableDeclaration","scope":12678,"src":"16547:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12672,"name":"string","nodeType":"ElementaryTypeName","src":"16547:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"16546:22:15"},"returnParameters":{"id":12677,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12676,"mutability":"mutable","name":"value","nameLocation":"16599:5:15","nodeType":"VariableDeclaration","scope":12678,"src":"16592:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":12675,"name":"int256","nodeType":"ElementaryTypeName","src":"16592:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"16591:14:15"},"scope":15595,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12689,"nodeType":"FunctionDefinition","src":"16788:107:15","nodes":[],"documentation":{"id":12679,"nodeType":"StructuredDocumentation","src":"16612:171:15","text":"Gets the environment variable `name` and parses it as an array of `int256`, delimited by `delim`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"42181150","implemented":false,"kind":"function","modifiers":[],"name":"envInt","nameLocation":"16797:6:15","parameters":{"id":12684,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12681,"mutability":"mutable","name":"name","nameLocation":"16820:4:15","nodeType":"VariableDeclaration","scope":12689,"src":"16804:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12680,"name":"string","nodeType":"ElementaryTypeName","src":"16804:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12683,"mutability":"mutable","name":"delim","nameLocation":"16842:5:15","nodeType":"VariableDeclaration","scope":12689,"src":"16826:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12682,"name":"string","nodeType":"ElementaryTypeName","src":"16826:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"16803:45:15"},"returnParameters":{"id":12688,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12687,"mutability":"mutable","name":"value","nameLocation":"16888:5:15","nodeType":"VariableDeclaration","scope":12689,"src":"16872:21:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_memory_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":12685,"name":"int256","nodeType":"ElementaryTypeName","src":"16872:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":12686,"nodeType":"ArrayTypeName","src":"16872:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"}],"src":"16871:23:15"},"scope":15595,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12699,"nodeType":"FunctionDefinition","src":"17086:91:15","nodes":[],"documentation":{"id":12690,"nodeType":"StructuredDocumentation","src":"16901:180:15","text":"Gets the environment variable `name` and parses it as `bool`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"4777f3cf","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"17095:5:15","parameters":{"id":12695,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12692,"mutability":"mutable","name":"name","nameLocation":"17117:4:15","nodeType":"VariableDeclaration","scope":12699,"src":"17101:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12691,"name":"string","nodeType":"ElementaryTypeName","src":"17101:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12694,"mutability":"mutable","name":"defaultValue","nameLocation":"17128:12:15","nodeType":"VariableDeclaration","scope":12699,"src":"17123:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":12693,"name":"bool","nodeType":"ElementaryTypeName","src":"17123:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"17100:41:15"},"returnParameters":{"id":12698,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12697,"mutability":"mutable","name":"value","nameLocation":"17170:5:15","nodeType":"VariableDeclaration","scope":12699,"src":"17165:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":12696,"name":"bool","nodeType":"ElementaryTypeName","src":"17165:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"17164:12:15"},"scope":15595,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12709,"nodeType":"FunctionDefinition","src":"17371:97:15","nodes":[],"documentation":{"id":12700,"nodeType":"StructuredDocumentation","src":"17183:183:15","text":"Gets the environment variable `name` and parses it as `uint256`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"5e97348f","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"17380:5:15","parameters":{"id":12705,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12702,"mutability":"mutable","name":"name","nameLocation":"17402:4:15","nodeType":"VariableDeclaration","scope":12709,"src":"17386:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12701,"name":"string","nodeType":"ElementaryTypeName","src":"17386:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12704,"mutability":"mutable","name":"defaultValue","nameLocation":"17416:12:15","nodeType":"VariableDeclaration","scope":12709,"src":"17408:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12703,"name":"uint256","nodeType":"ElementaryTypeName","src":"17408:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17385:44:15"},"returnParameters":{"id":12708,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12707,"mutability":"mutable","name":"value","nameLocation":"17461:5:15","nodeType":"VariableDeclaration","scope":12709,"src":"17453:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12706,"name":"uint256","nodeType":"ElementaryTypeName","src":"17453:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17452:15:15"},"scope":15595,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12723,"nodeType":"FunctionDefinition","src":"17696:164:15","nodes":[],"documentation":{"id":12710,"nodeType":"StructuredDocumentation","src":"17474:217:15","text":"Gets the environment variable `name` and parses it as an array of `address`, delimited by `delim`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"c74e9deb","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"17705:5:15","parameters":{"id":12718,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12712,"mutability":"mutable","name":"name","nameLocation":"17727:4:15","nodeType":"VariableDeclaration","scope":12723,"src":"17711:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12711,"name":"string","nodeType":"ElementaryTypeName","src":"17711:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12714,"mutability":"mutable","name":"delim","nameLocation":"17749:5:15","nodeType":"VariableDeclaration","scope":12723,"src":"17733:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12713,"name":"string","nodeType":"ElementaryTypeName","src":"17733:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12717,"mutability":"mutable","name":"defaultValue","nameLocation":"17775:12:15","nodeType":"VariableDeclaration","scope":12723,"src":"17756:31:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":12715,"name":"address","nodeType":"ElementaryTypeName","src":"17756:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":12716,"nodeType":"ArrayTypeName","src":"17756:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"17710:78:15"},"returnParameters":{"id":12722,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12721,"mutability":"mutable","name":"value","nameLocation":"17853:5:15","nodeType":"VariableDeclaration","scope":12723,"src":"17836:22:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":12719,"name":"address","nodeType":"ElementaryTypeName","src":"17836:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":12720,"nodeType":"ArrayTypeName","src":"17836:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"17835:24:15"},"scope":15595,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12737,"nodeType":"FunctionDefinition","src":"18088:164:15","nodes":[],"documentation":{"id":12724,"nodeType":"StructuredDocumentation","src":"17866:217:15","text":"Gets the environment variable `name` and parses it as an array of `bytes32`, delimited by `delim`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"2281f367","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"18097:5:15","parameters":{"id":12732,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12726,"mutability":"mutable","name":"name","nameLocation":"18119:4:15","nodeType":"VariableDeclaration","scope":12737,"src":"18103:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12725,"name":"string","nodeType":"ElementaryTypeName","src":"18103:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12728,"mutability":"mutable","name":"delim","nameLocation":"18141:5:15","nodeType":"VariableDeclaration","scope":12737,"src":"18125:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12727,"name":"string","nodeType":"ElementaryTypeName","src":"18125:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12731,"mutability":"mutable","name":"defaultValue","nameLocation":"18167:12:15","nodeType":"VariableDeclaration","scope":12737,"src":"18148:31:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":12729,"name":"bytes32","nodeType":"ElementaryTypeName","src":"18148:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":12730,"nodeType":"ArrayTypeName","src":"18148:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"18102:78:15"},"returnParameters":{"id":12736,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12735,"mutability":"mutable","name":"value","nameLocation":"18245:5:15","nodeType":"VariableDeclaration","scope":12737,"src":"18228:22:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":12733,"name":"bytes32","nodeType":"ElementaryTypeName","src":"18228:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":12734,"nodeType":"ArrayTypeName","src":"18228:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"18227:24:15"},"scope":15595,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12751,"nodeType":"FunctionDefinition","src":"18479:162:15","nodes":[],"documentation":{"id":12738,"nodeType":"StructuredDocumentation","src":"18258:216:15","text":"Gets the environment variable `name` and parses it as an array of `string`, delimited by `delim`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"859216bc","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"18488:5:15","parameters":{"id":12746,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12740,"mutability":"mutable","name":"name","nameLocation":"18510:4:15","nodeType":"VariableDeclaration","scope":12751,"src":"18494:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12739,"name":"string","nodeType":"ElementaryTypeName","src":"18494:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12742,"mutability":"mutable","name":"delim","nameLocation":"18532:5:15","nodeType":"VariableDeclaration","scope":12751,"src":"18516:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12741,"name":"string","nodeType":"ElementaryTypeName","src":"18516:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12745,"mutability":"mutable","name":"defaultValue","nameLocation":"18557:12:15","nodeType":"VariableDeclaration","scope":12751,"src":"18539:30:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":12743,"name":"string","nodeType":"ElementaryTypeName","src":"18539:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":12744,"nodeType":"ArrayTypeName","src":"18539:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"18493:77:15"},"returnParameters":{"id":12750,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12749,"mutability":"mutable","name":"value","nameLocation":"18634:5:15","nodeType":"VariableDeclaration","scope":12751,"src":"18618:21:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":12747,"name":"string","nodeType":"ElementaryTypeName","src":"18618:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":12748,"nodeType":"ArrayTypeName","src":"18618:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"18617:23:15"},"scope":15595,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12765,"nodeType":"FunctionDefinition","src":"18867:160:15","nodes":[],"documentation":{"id":12752,"nodeType":"StructuredDocumentation","src":"18647:215:15","text":"Gets the environment variable `name` and parses it as an array of `bytes`, delimited by `delim`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"64bc3e64","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"18876:5:15","parameters":{"id":12760,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12754,"mutability":"mutable","name":"name","nameLocation":"18898:4:15","nodeType":"VariableDeclaration","scope":12765,"src":"18882:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12753,"name":"string","nodeType":"ElementaryTypeName","src":"18882:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12756,"mutability":"mutable","name":"delim","nameLocation":"18920:5:15","nodeType":"VariableDeclaration","scope":12765,"src":"18904:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12755,"name":"string","nodeType":"ElementaryTypeName","src":"18904:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12759,"mutability":"mutable","name":"defaultValue","nameLocation":"18944:12:15","nodeType":"VariableDeclaration","scope":12765,"src":"18927:29:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":12757,"name":"bytes","nodeType":"ElementaryTypeName","src":"18927:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":12758,"nodeType":"ArrayTypeName","src":"18927:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"18881:76:15"},"returnParameters":{"id":12764,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12763,"mutability":"mutable","name":"value","nameLocation":"19020:5:15","nodeType":"VariableDeclaration","scope":12765,"src":"19005:20:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":12761,"name":"bytes","nodeType":"ElementaryTypeName","src":"19005:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":12762,"nodeType":"ArrayTypeName","src":"19005:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"19004:22:15"},"scope":15595,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12775,"nodeType":"FunctionDefinition","src":"19220:95:15","nodes":[],"documentation":{"id":12766,"nodeType":"StructuredDocumentation","src":"19033:182:15","text":"Gets the environment variable `name` and parses it as `int256`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"bbcb713e","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"19229:5:15","parameters":{"id":12771,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12768,"mutability":"mutable","name":"name","nameLocation":"19251:4:15","nodeType":"VariableDeclaration","scope":12775,"src":"19235:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12767,"name":"string","nodeType":"ElementaryTypeName","src":"19235:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12770,"mutability":"mutable","name":"defaultValue","nameLocation":"19264:12:15","nodeType":"VariableDeclaration","scope":12775,"src":"19257:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":12769,"name":"int256","nodeType":"ElementaryTypeName","src":"19257:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19234:43:15"},"returnParameters":{"id":12774,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12773,"mutability":"mutable","name":"value","nameLocation":"19308:5:15","nodeType":"VariableDeclaration","scope":12775,"src":"19301:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":12772,"name":"int256","nodeType":"ElementaryTypeName","src":"19301:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19300:14:15"},"scope":15595,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12785,"nodeType":"FunctionDefinition","src":"19509:97:15","nodes":[],"documentation":{"id":12776,"nodeType":"StructuredDocumentation","src":"19321:183:15","text":"Gets the environment variable `name` and parses it as `address`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"561fe540","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"19518:5:15","parameters":{"id":12781,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12778,"mutability":"mutable","name":"name","nameLocation":"19540:4:15","nodeType":"VariableDeclaration","scope":12785,"src":"19524:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12777,"name":"string","nodeType":"ElementaryTypeName","src":"19524:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12780,"mutability":"mutable","name":"defaultValue","nameLocation":"19554:12:15","nodeType":"VariableDeclaration","scope":12785,"src":"19546:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12779,"name":"address","nodeType":"ElementaryTypeName","src":"19546:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"19523:44:15"},"returnParameters":{"id":12784,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12783,"mutability":"mutable","name":"value","nameLocation":"19599:5:15","nodeType":"VariableDeclaration","scope":12785,"src":"19591:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12782,"name":"address","nodeType":"ElementaryTypeName","src":"19591:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"19590:15:15"},"scope":15595,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12795,"nodeType":"FunctionDefinition","src":"19800:97:15","nodes":[],"documentation":{"id":12786,"nodeType":"StructuredDocumentation","src":"19612:183:15","text":"Gets the environment variable `name` and parses it as `bytes32`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"b4a85892","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"19809:5:15","parameters":{"id":12791,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12788,"mutability":"mutable","name":"name","nameLocation":"19831:4:15","nodeType":"VariableDeclaration","scope":12795,"src":"19815:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12787,"name":"string","nodeType":"ElementaryTypeName","src":"19815:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12790,"mutability":"mutable","name":"defaultValue","nameLocation":"19845:12:15","nodeType":"VariableDeclaration","scope":12795,"src":"19837:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12789,"name":"bytes32","nodeType":"ElementaryTypeName","src":"19837:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"19814:44:15"},"returnParameters":{"id":12794,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12793,"mutability":"mutable","name":"value","nameLocation":"19890:5:15","nodeType":"VariableDeclaration","scope":12795,"src":"19882:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12792,"name":"bytes32","nodeType":"ElementaryTypeName","src":"19882:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"19881:15:15"},"scope":15595,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12805,"nodeType":"FunctionDefinition","src":"20090:111:15","nodes":[],"documentation":{"id":12796,"nodeType":"StructuredDocumentation","src":"19903:182:15","text":"Gets the environment variable `name` and parses it as `string`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"d145736c","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"20099:5:15","parameters":{"id":12801,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12798,"mutability":"mutable","name":"name","nameLocation":"20121:4:15","nodeType":"VariableDeclaration","scope":12805,"src":"20105:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12797,"name":"string","nodeType":"ElementaryTypeName","src":"20105:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12800,"mutability":"mutable","name":"defaultValue","nameLocation":"20143:12:15","nodeType":"VariableDeclaration","scope":12805,"src":"20127:28:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12799,"name":"string","nodeType":"ElementaryTypeName","src":"20127:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"20104:52:15"},"returnParameters":{"id":12804,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12803,"mutability":"mutable","name":"value","nameLocation":"20194:5:15","nodeType":"VariableDeclaration","scope":12805,"src":"20180:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":12802,"name":"string","nodeType":"ElementaryTypeName","src":"20180:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"20179:21:15"},"scope":15595,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12815,"nodeType":"FunctionDefinition","src":"20393:109:15","nodes":[],"documentation":{"id":12806,"nodeType":"StructuredDocumentation","src":"20207:181:15","text":"Gets the environment variable `name` and parses it as `bytes`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"b3e47705","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"20402:5:15","parameters":{"id":12811,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12808,"mutability":"mutable","name":"name","nameLocation":"20424:4:15","nodeType":"VariableDeclaration","scope":12815,"src":"20408:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12807,"name":"string","nodeType":"ElementaryTypeName","src":"20408:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12810,"mutability":"mutable","name":"defaultValue","nameLocation":"20445:12:15","nodeType":"VariableDeclaration","scope":12815,"src":"20430:27:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":12809,"name":"bytes","nodeType":"ElementaryTypeName","src":"20430:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"20407:51:15"},"returnParameters":{"id":12814,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12813,"mutability":"mutable","name":"value","nameLocation":"20495:5:15","nodeType":"VariableDeclaration","scope":12815,"src":"20482:18:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":12812,"name":"bytes","nodeType":"ElementaryTypeName","src":"20482:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"20481:20:15"},"scope":15595,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12829,"nodeType":"FunctionDefinition","src":"20727:158:15","nodes":[],"documentation":{"id":12816,"nodeType":"StructuredDocumentation","src":"20508:214:15","text":"Gets the environment variable `name` and parses it as an array of `bool`, delimited by `delim`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"eb85e83b","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"20736:5:15","parameters":{"id":12824,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12818,"mutability":"mutable","name":"name","nameLocation":"20758:4:15","nodeType":"VariableDeclaration","scope":12829,"src":"20742:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12817,"name":"string","nodeType":"ElementaryTypeName","src":"20742:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12820,"mutability":"mutable","name":"delim","nameLocation":"20780:5:15","nodeType":"VariableDeclaration","scope":12829,"src":"20764:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12819,"name":"string","nodeType":"ElementaryTypeName","src":"20764:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12823,"mutability":"mutable","name":"defaultValue","nameLocation":"20803:12:15","nodeType":"VariableDeclaration","scope":12829,"src":"20787:28:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":12821,"name":"bool","nodeType":"ElementaryTypeName","src":"20787:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":12822,"nodeType":"ArrayTypeName","src":"20787:6:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"src":"20741:75:15"},"returnParameters":{"id":12828,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12827,"mutability":"mutable","name":"value","nameLocation":"20878:5:15","nodeType":"VariableDeclaration","scope":12829,"src":"20864:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":12825,"name":"bool","nodeType":"ElementaryTypeName","src":"20864:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":12826,"nodeType":"ArrayTypeName","src":"20864:6:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"src":"20863:21:15"},"scope":15595,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12843,"nodeType":"FunctionDefinition","src":"21113:164:15","nodes":[],"documentation":{"id":12830,"nodeType":"StructuredDocumentation","src":"20891:217:15","text":"Gets the environment variable `name` and parses it as an array of `uint256`, delimited by `delim`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"74318528","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"21122:5:15","parameters":{"id":12838,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12832,"mutability":"mutable","name":"name","nameLocation":"21144:4:15","nodeType":"VariableDeclaration","scope":12843,"src":"21128:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12831,"name":"string","nodeType":"ElementaryTypeName","src":"21128:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12834,"mutability":"mutable","name":"delim","nameLocation":"21166:5:15","nodeType":"VariableDeclaration","scope":12843,"src":"21150:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12833,"name":"string","nodeType":"ElementaryTypeName","src":"21150:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12837,"mutability":"mutable","name":"defaultValue","nameLocation":"21192:12:15","nodeType":"VariableDeclaration","scope":12843,"src":"21173:31:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":12835,"name":"uint256","nodeType":"ElementaryTypeName","src":"21173:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":12836,"nodeType":"ArrayTypeName","src":"21173:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"21127:78:15"},"returnParameters":{"id":12842,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12841,"mutability":"mutable","name":"value","nameLocation":"21270:5:15","nodeType":"VariableDeclaration","scope":12843,"src":"21253:22:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":12839,"name":"uint256","nodeType":"ElementaryTypeName","src":"21253:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":12840,"nodeType":"ArrayTypeName","src":"21253:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"21252:24:15"},"scope":15595,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12857,"nodeType":"FunctionDefinition","src":"21504:162:15","nodes":[],"documentation":{"id":12844,"nodeType":"StructuredDocumentation","src":"21283:216:15","text":"Gets the environment variable `name` and parses it as an array of `int256`, delimited by `delim`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"4700d74b","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"21513:5:15","parameters":{"id":12852,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12846,"mutability":"mutable","name":"name","nameLocation":"21535:4:15","nodeType":"VariableDeclaration","scope":12857,"src":"21519:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12845,"name":"string","nodeType":"ElementaryTypeName","src":"21519:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12848,"mutability":"mutable","name":"delim","nameLocation":"21557:5:15","nodeType":"VariableDeclaration","scope":12857,"src":"21541:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12847,"name":"string","nodeType":"ElementaryTypeName","src":"21541:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12851,"mutability":"mutable","name":"defaultValue","nameLocation":"21582:12:15","nodeType":"VariableDeclaration","scope":12857,"src":"21564:30:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":12849,"name":"int256","nodeType":"ElementaryTypeName","src":"21564:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":12850,"nodeType":"ArrayTypeName","src":"21564:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"}],"src":"21518:77:15"},"returnParameters":{"id":12856,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12855,"mutability":"mutable","name":"value","nameLocation":"21659:5:15","nodeType":"VariableDeclaration","scope":12857,"src":"21643:21:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_memory_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":12853,"name":"int256","nodeType":"ElementaryTypeName","src":"21643:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":12854,"nodeType":"ArrayTypeName","src":"21643:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"}],"src":"21642:23:15"},"scope":15595,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12865,"nodeType":"FunctionDefinition","src":"21814:85:15","nodes":[],"documentation":{"id":12858,"nodeType":"StructuredDocumentation","src":"21672:137:15","text":"Gets the environment variable `name` and parses it as `string`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"f877cb19","implemented":false,"kind":"function","modifiers":[],"name":"envString","nameLocation":"21823:9:15","parameters":{"id":12861,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12860,"mutability":"mutable","name":"name","nameLocation":"21849:4:15","nodeType":"VariableDeclaration","scope":12865,"src":"21833:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12859,"name":"string","nodeType":"ElementaryTypeName","src":"21833:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"21832:22:15"},"returnParameters":{"id":12864,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12863,"mutability":"mutable","name":"value","nameLocation":"21892:5:15","nodeType":"VariableDeclaration","scope":12865,"src":"21878:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":12862,"name":"string","nodeType":"ElementaryTypeName","src":"21878:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"21877:21:15"},"scope":15595,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12876,"nodeType":"FunctionDefinition","src":"22081:110:15","nodes":[],"documentation":{"id":12866,"nodeType":"StructuredDocumentation","src":"21905:171:15","text":"Gets the environment variable `name` and parses it as an array of `string`, delimited by `delim`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"14b02bc9","implemented":false,"kind":"function","modifiers":[],"name":"envString","nameLocation":"22090:9:15","parameters":{"id":12871,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12868,"mutability":"mutable","name":"name","nameLocation":"22116:4:15","nodeType":"VariableDeclaration","scope":12876,"src":"22100:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12867,"name":"string","nodeType":"ElementaryTypeName","src":"22100:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12870,"mutability":"mutable","name":"delim","nameLocation":"22138:5:15","nodeType":"VariableDeclaration","scope":12876,"src":"22122:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12869,"name":"string","nodeType":"ElementaryTypeName","src":"22122:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"22099:45:15"},"returnParameters":{"id":12875,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12874,"mutability":"mutable","name":"value","nameLocation":"22184:5:15","nodeType":"VariableDeclaration","scope":12876,"src":"22168:21:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":12872,"name":"string","nodeType":"ElementaryTypeName","src":"22168:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":12873,"nodeType":"ArrayTypeName","src":"22168:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"22167:23:15"},"scope":15595,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12884,"nodeType":"FunctionDefinition","src":"22340:77:15","nodes":[],"documentation":{"id":12877,"nodeType":"StructuredDocumentation","src":"22197:138:15","text":"Gets the environment variable `name` and parses it as `uint256`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"c1978d1f","implemented":false,"kind":"function","modifiers":[],"name":"envUint","nameLocation":"22349:7:15","parameters":{"id":12880,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12879,"mutability":"mutable","name":"name","nameLocation":"22373:4:15","nodeType":"VariableDeclaration","scope":12884,"src":"22357:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12878,"name":"string","nodeType":"ElementaryTypeName","src":"22357:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"22356:22:15"},"returnParameters":{"id":12883,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12882,"mutability":"mutable","name":"value","nameLocation":"22410:5:15","nodeType":"VariableDeclaration","scope":12884,"src":"22402:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12881,"name":"uint256","nodeType":"ElementaryTypeName","src":"22402:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"22401:15:15"},"scope":15595,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12895,"nodeType":"FunctionDefinition","src":"22600:109:15","nodes":[],"documentation":{"id":12885,"nodeType":"StructuredDocumentation","src":"22423:172:15","text":"Gets the environment variable `name` and parses it as an array of `uint256`, delimited by `delim`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"f3dec099","implemented":false,"kind":"function","modifiers":[],"name":"envUint","nameLocation":"22609:7:15","parameters":{"id":12890,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12887,"mutability":"mutable","name":"name","nameLocation":"22633:4:15","nodeType":"VariableDeclaration","scope":12895,"src":"22617:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12886,"name":"string","nodeType":"ElementaryTypeName","src":"22617:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12889,"mutability":"mutable","name":"delim","nameLocation":"22655:5:15","nodeType":"VariableDeclaration","scope":12895,"src":"22639:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12888,"name":"string","nodeType":"ElementaryTypeName","src":"22639:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"22616:45:15"},"returnParameters":{"id":12894,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12893,"mutability":"mutable","name":"value","nameLocation":"22702:5:15","nodeType":"VariableDeclaration","scope":12895,"src":"22685:22:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":12891,"name":"uint256","nodeType":"ElementaryTypeName","src":"22685:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":12892,"nodeType":"ArrayTypeName","src":"22685:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"22684:24:15"},"scope":15595,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12904,"nodeType":"FunctionDefinition","src":"22786:77:15","nodes":[],"documentation":{"id":12896,"nodeType":"StructuredDocumentation","src":"22715:66:15","text":"Returns true if `forge` command was executed in given context."},"functionSelector":"64af255d","implemented":false,"kind":"function","modifiers":[],"name":"isContext","nameLocation":"22795:9:15","parameters":{"id":12900,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12899,"mutability":"mutable","name":"context","nameLocation":"22818:7:15","nodeType":"VariableDeclaration","scope":12904,"src":"22805:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_ForgeContext_$12241","typeString":"enum VmSafe.ForgeContext"},"typeName":{"id":12898,"nodeType":"UserDefinedTypeName","pathNode":{"id":12897,"name":"ForgeContext","nameLocations":["22805:12:15"],"nodeType":"IdentifierPath","referencedDeclaration":12241,"src":"22805:12:15"},"referencedDeclaration":12241,"src":"22805:12:15","typeDescriptions":{"typeIdentifier":"t_enum$_ForgeContext_$12241","typeString":"enum VmSafe.ForgeContext"}},"visibility":"internal"}],"src":"22804:22:15"},"returnParameters":{"id":12903,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12902,"mutability":"mutable","name":"result","nameLocation":"22855:6:15","nodeType":"VariableDeclaration","scope":12904,"src":"22850:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":12901,"name":"bool","nodeType":"ElementaryTypeName","src":"22850:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"22849:13:15"},"scope":15595,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12912,"nodeType":"FunctionDefinition","src":"22905:70:15","nodes":[],"documentation":{"id":12905,"nodeType":"StructuredDocumentation","src":"22869:31:15","text":"Sets environment variables."},"functionSelector":"3d5923ee","implemented":false,"kind":"function","modifiers":[],"name":"setEnv","nameLocation":"22914:6:15","parameters":{"id":12910,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12907,"mutability":"mutable","name":"name","nameLocation":"22937:4:15","nodeType":"VariableDeclaration","scope":12912,"src":"22921:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12906,"name":"string","nodeType":"ElementaryTypeName","src":"22921:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12909,"mutability":"mutable","name":"value","nameLocation":"22959:5:15","nodeType":"VariableDeclaration","scope":12912,"src":"22943:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12908,"name":"string","nodeType":"ElementaryTypeName","src":"22943:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"22920:45:15"},"returnParameters":{"id":12911,"nodeType":"ParameterList","parameters":[],"src":"22974:0:15"},"scope":15595,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12924,"nodeType":"FunctionDefinition","src":"23107:109:15","nodes":[],"documentation":{"id":12913,"nodeType":"StructuredDocumentation","src":"23011:91:15","text":"Gets all accessed reads and write slot from a `vm.record` session, for a given address."},"functionSelector":"65bc9481","implemented":false,"kind":"function","modifiers":[],"name":"accesses","nameLocation":"23116:8:15","parameters":{"id":12916,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12915,"mutability":"mutable","name":"target","nameLocation":"23133:6:15","nodeType":"VariableDeclaration","scope":12924,"src":"23125:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12914,"name":"address","nodeType":"ElementaryTypeName","src":"23125:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"23124:16:15"},"returnParameters":{"id":12923,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12919,"mutability":"mutable","name":"readSlots","nameLocation":"23176:9:15","nodeType":"VariableDeclaration","scope":12924,"src":"23159:26:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":12917,"name":"bytes32","nodeType":"ElementaryTypeName","src":"23159:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":12918,"nodeType":"ArrayTypeName","src":"23159:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":12922,"mutability":"mutable","name":"writeSlots","nameLocation":"23204:10:15","nodeType":"VariableDeclaration","scope":12924,"src":"23187:27:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":12920,"name":"bytes32","nodeType":"ElementaryTypeName","src":"23187:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":12921,"nodeType":"ArrayTypeName","src":"23187:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"23158:57:15"},"scope":15595,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12932,"nodeType":"FunctionDefinition","src":"23272:74:15","nodes":[],"documentation":{"id":12925,"nodeType":"StructuredDocumentation","src":"23222:45:15","text":"Gets the address for a given private key."},"functionSelector":"ffa18649","implemented":false,"kind":"function","modifiers":[],"name":"addr","nameLocation":"23281:4:15","parameters":{"id":12928,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12927,"mutability":"mutable","name":"privateKey","nameLocation":"23294:10:15","nodeType":"VariableDeclaration","scope":12932,"src":"23286:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12926,"name":"uint256","nodeType":"ElementaryTypeName","src":"23286:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"23285:20:15"},"returnParameters":{"id":12931,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12930,"mutability":"mutable","name":"keyAddr","nameLocation":"23337:7:15","nodeType":"VariableDeclaration","scope":12932,"src":"23329:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12929,"name":"address","nodeType":"ElementaryTypeName","src":"23329:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"23328:17:15"},"scope":15595,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":12949,"nodeType":"FunctionDefinition","src":"23409:160:15","nodes":[],"documentation":{"id":12933,"nodeType":"StructuredDocumentation","src":"23352:52:15","text":"Gets all the logs according to specified filter."},"functionSelector":"35e1349b","implemented":false,"kind":"function","modifiers":[],"name":"eth_getLogs","nameLocation":"23418:11:15","parameters":{"id":12943,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12935,"mutability":"mutable","name":"fromBlock","nameLocation":"23438:9:15","nodeType":"VariableDeclaration","scope":12949,"src":"23430:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12934,"name":"uint256","nodeType":"ElementaryTypeName","src":"23430:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":12937,"mutability":"mutable","name":"toBlock","nameLocation":"23457:7:15","nodeType":"VariableDeclaration","scope":12949,"src":"23449:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12936,"name":"uint256","nodeType":"ElementaryTypeName","src":"23449:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":12939,"mutability":"mutable","name":"target","nameLocation":"23474:6:15","nodeType":"VariableDeclaration","scope":12949,"src":"23466:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12938,"name":"address","nodeType":"ElementaryTypeName","src":"23466:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":12942,"mutability":"mutable","name":"topics","nameLocation":"23501:6:15","nodeType":"VariableDeclaration","scope":12949,"src":"23482:25:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":12940,"name":"bytes32","nodeType":"ElementaryTypeName","src":"23482:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":12941,"nodeType":"ArrayTypeName","src":"23482:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"23429:79:15"},"returnParameters":{"id":12948,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12947,"mutability":"mutable","name":"logs","nameLocation":"23563:4:15","nodeType":"VariableDeclaration","scope":12949,"src":"23543:24:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_EthGetLogs_$12277_memory_ptr_$dyn_memory_ptr","typeString":"struct VmSafe.EthGetLogs[]"},"typeName":{"baseType":{"id":12945,"nodeType":"UserDefinedTypeName","pathNode":{"id":12944,"name":"EthGetLogs","nameLocations":["23543:10:15"],"nodeType":"IdentifierPath","referencedDeclaration":12277,"src":"23543:10:15"},"referencedDeclaration":12277,"src":"23543:10:15","typeDescriptions":{"typeIdentifier":"t_struct$_EthGetLogs_$12277_storage_ptr","typeString":"struct VmSafe.EthGetLogs"}},"id":12946,"nodeType":"ArrayTypeName","src":"23543:12:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_EthGetLogs_$12277_storage_$dyn_storage_ptr","typeString":"struct VmSafe.EthGetLogs[]"}},"visibility":"internal"}],"src":"23542:26:15"},"scope":15595,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12955,"nodeType":"FunctionDefinition","src":"23906:70:15","nodes":[],"documentation":{"id":12950,"nodeType":"StructuredDocumentation","src":"23575:326:15","text":"Gets the current `block.blobbasefee`.\n You should use this instead of `block.blobbasefee` if you use `vm.blobBaseFee`, as `block.blobbasefee` is assumed to be constant across a transaction,\n and as a result will get optimized out by the compiler.\n See https://github.com/foundry-rs/foundry/issues/6180"},"functionSelector":"1f6d6ef7","implemented":false,"kind":"function","modifiers":[],"name":"getBlobBaseFee","nameLocation":"23915:14:15","parameters":{"id":12951,"nodeType":"ParameterList","parameters":[],"src":"23929:2:15"},"returnParameters":{"id":12954,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12953,"mutability":"mutable","name":"blobBaseFee","nameLocation":"23963:11:15","nodeType":"VariableDeclaration","scope":12955,"src":"23955:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12952,"name":"uint256","nodeType":"ElementaryTypeName","src":"23955:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"23954:21:15"},"scope":15595,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12961,"nodeType":"FunctionDefinition","src":"24291:65:15","nodes":[],"documentation":{"id":12956,"nodeType":"StructuredDocumentation","src":"23982:304:15","text":"Gets the current `block.number`.\n You should use this instead of `block.number` if you use `vm.roll`, as `block.number` is assumed to be constant across a transaction,\n and as a result will get optimized out by the compiler.\n See https://github.com/foundry-rs/foundry/issues/6180"},"functionSelector":"42cbb15c","implemented":false,"kind":"function","modifiers":[],"name":"getBlockNumber","nameLocation":"24300:14:15","parameters":{"id":12957,"nodeType":"ParameterList","parameters":[],"src":"24314:2:15"},"returnParameters":{"id":12960,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12959,"mutability":"mutable","name":"height","nameLocation":"24348:6:15","nodeType":"VariableDeclaration","scope":12961,"src":"24340:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12958,"name":"uint256","nodeType":"ElementaryTypeName","src":"24340:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"24339:16:15"},"scope":15595,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12967,"nodeType":"FunctionDefinition","src":"24680:71:15","nodes":[],"documentation":{"id":12962,"nodeType":"StructuredDocumentation","src":"24362:313:15","text":"Gets the current `block.timestamp`.\n You should use this instead of `block.timestamp` if you use `vm.warp`, as `block.timestamp` is assumed to be constant across a transaction,\n and as a result will get optimized out by the compiler.\n See https://github.com/foundry-rs/foundry/issues/6180"},"functionSelector":"796b89b9","implemented":false,"kind":"function","modifiers":[],"name":"getBlockTimestamp","nameLocation":"24689:17:15","parameters":{"id":12963,"nodeType":"ParameterList","parameters":[],"src":"24706:2:15"},"returnParameters":{"id":12966,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12965,"mutability":"mutable","name":"timestamp","nameLocation":"24740:9:15","nodeType":"VariableDeclaration","scope":12967,"src":"24732:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12964,"name":"uint256","nodeType":"ElementaryTypeName","src":"24732:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"24731:19:15"},"scope":15595,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12981,"nodeType":"FunctionDefinition","src":"24844:146:15","nodes":[],"documentation":{"id":12968,"nodeType":"StructuredDocumentation","src":"24757:82:15","text":"Gets the map key and parent of a mapping at a given slot, for a given address."},"functionSelector":"876e24e6","implemented":false,"kind":"function","modifiers":[],"name":"getMappingKeyAndParentOf","nameLocation":"24853:24:15","parameters":{"id":12973,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12970,"mutability":"mutable","name":"target","nameLocation":"24886:6:15","nodeType":"VariableDeclaration","scope":12981,"src":"24878:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12969,"name":"address","nodeType":"ElementaryTypeName","src":"24878:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":12972,"mutability":"mutable","name":"elementSlot","nameLocation":"24902:11:15","nodeType":"VariableDeclaration","scope":12981,"src":"24894:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12971,"name":"bytes32","nodeType":"ElementaryTypeName","src":"24894:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"24877:37:15"},"returnParameters":{"id":12980,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12975,"mutability":"mutable","name":"found","nameLocation":"24954:5:15","nodeType":"VariableDeclaration","scope":12981,"src":"24949:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":12974,"name":"bool","nodeType":"ElementaryTypeName","src":"24949:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":12977,"mutability":"mutable","name":"key","nameLocation":"24969:3:15","nodeType":"VariableDeclaration","scope":12981,"src":"24961:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12976,"name":"bytes32","nodeType":"ElementaryTypeName","src":"24961:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":12979,"mutability":"mutable","name":"parent","nameLocation":"24982:6:15","nodeType":"VariableDeclaration","scope":12981,"src":"24974:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12978,"name":"bytes32","nodeType":"ElementaryTypeName","src":"24974:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"24948:41:15"},"scope":15595,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12991,"nodeType":"FunctionDefinition","src":"25087:97:15","nodes":[],"documentation":{"id":12982,"nodeType":"StructuredDocumentation","src":"24996:86:15","text":"Gets the number of elements in the mapping at the given slot, for a given address."},"functionSelector":"2f2fd63f","implemented":false,"kind":"function","modifiers":[],"name":"getMappingLength","nameLocation":"25096:16:15","parameters":{"id":12987,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12984,"mutability":"mutable","name":"target","nameLocation":"25121:6:15","nodeType":"VariableDeclaration","scope":12991,"src":"25113:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12983,"name":"address","nodeType":"ElementaryTypeName","src":"25113:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":12986,"mutability":"mutable","name":"mappingSlot","nameLocation":"25137:11:15","nodeType":"VariableDeclaration","scope":12991,"src":"25129:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12985,"name":"bytes32","nodeType":"ElementaryTypeName","src":"25129:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"25112:37:15"},"returnParameters":{"id":12990,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12989,"mutability":"mutable","name":"length","nameLocation":"25176:6:15","nodeType":"VariableDeclaration","scope":12991,"src":"25168:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12988,"name":"uint256","nodeType":"ElementaryTypeName","src":"25168:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25167:16:15"},"scope":15595,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13003,"nodeType":"FunctionDefinition","src":"25388:109:15","nodes":[],"documentation":{"id":12992,"nodeType":"StructuredDocumentation","src":"25190:193:15","text":"Gets the elements at index idx of the mapping at the given slot, for a given address. The\n index must be less than the length of the mapping (i.e. the number of keys in the mapping)."},"functionSelector":"ebc73ab4","implemented":false,"kind":"function","modifiers":[],"name":"getMappingSlotAt","nameLocation":"25397:16:15","parameters":{"id":12999,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12994,"mutability":"mutable","name":"target","nameLocation":"25422:6:15","nodeType":"VariableDeclaration","scope":13003,"src":"25414:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12993,"name":"address","nodeType":"ElementaryTypeName","src":"25414:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":12996,"mutability":"mutable","name":"mappingSlot","nameLocation":"25438:11:15","nodeType":"VariableDeclaration","scope":13003,"src":"25430:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12995,"name":"bytes32","nodeType":"ElementaryTypeName","src":"25430:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":12998,"mutability":"mutable","name":"idx","nameLocation":"25459:3:15","nodeType":"VariableDeclaration","scope":13003,"src":"25451:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12997,"name":"uint256","nodeType":"ElementaryTypeName","src":"25451:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25413:50:15"},"returnParameters":{"id":13002,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13001,"mutability":"mutable","name":"value","nameLocation":"25490:5:15","nodeType":"VariableDeclaration","scope":13003,"src":"25482:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":13000,"name":"bytes32","nodeType":"ElementaryTypeName","src":"25482:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"25481:15:15"},"scope":15595,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13011,"nodeType":"FunctionDefinition","src":"25541:72:15","nodes":[],"documentation":{"id":13004,"nodeType":"StructuredDocumentation","src":"25503:33:15","text":"Gets the nonce of an account."},"functionSelector":"2d0335ab","implemented":false,"kind":"function","modifiers":[],"name":"getNonce","nameLocation":"25550:8:15","parameters":{"id":13007,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13006,"mutability":"mutable","name":"account","nameLocation":"25567:7:15","nodeType":"VariableDeclaration","scope":13011,"src":"25559:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":13005,"name":"address","nodeType":"ElementaryTypeName","src":"25559:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"25558:17:15"},"returnParameters":{"id":13010,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13009,"mutability":"mutable","name":"nonce","nameLocation":"25606:5:15","nodeType":"VariableDeclaration","scope":13011,"src":"25599:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":13008,"name":"uint64","nodeType":"ElementaryTypeName","src":"25599:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"25598:14:15"},"scope":15595,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":13020,"nodeType":"FunctionDefinition","src":"25656:74:15","nodes":[],"documentation":{"id":13012,"nodeType":"StructuredDocumentation","src":"25619:32:15","text":"Get the nonce of a `Wallet`."},"functionSelector":"a5748aad","implemented":false,"kind":"function","modifiers":[],"name":"getNonce","nameLocation":"25665:8:15","parameters":{"id":13016,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13015,"mutability":"mutable","name":"wallet","nameLocation":"25690:6:15","nodeType":"VariableDeclaration","scope":13020,"src":"25674:22:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$12315_calldata_ptr","typeString":"struct VmSafe.Wallet"},"typeName":{"id":13014,"nodeType":"UserDefinedTypeName","pathNode":{"id":13013,"name":"Wallet","nameLocations":["25674:6:15"],"nodeType":"IdentifierPath","referencedDeclaration":12315,"src":"25674:6:15"},"referencedDeclaration":12315,"src":"25674:6:15","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$12315_storage_ptr","typeString":"struct VmSafe.Wallet"}},"visibility":"internal"}],"src":"25673:24:15"},"returnParameters":{"id":13019,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13018,"mutability":"mutable","name":"nonce","nameLocation":"25723:5:15","nodeType":"VariableDeclaration","scope":13020,"src":"25716:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":13017,"name":"uint64","nodeType":"ElementaryTypeName","src":"25716:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"25715:14:15"},"scope":15595,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13028,"nodeType":"FunctionDefinition","src":"25772:64:15","nodes":[],"documentation":{"id":13021,"nodeType":"StructuredDocumentation","src":"25736:31:15","text":"Gets all the recorded logs."},"functionSelector":"191553a4","implemented":false,"kind":"function","modifiers":[],"name":"getRecordedLogs","nameLocation":"25781:15:15","parameters":{"id":13022,"nodeType":"ParameterList","parameters":[],"src":"25796:2:15"},"returnParameters":{"id":13027,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13026,"mutability":"mutable","name":"logs","nameLocation":"25830:4:15","nodeType":"VariableDeclaration","scope":13028,"src":"25817:17:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Log_$12250_memory_ptr_$dyn_memory_ptr","typeString":"struct VmSafe.Log[]"},"typeName":{"baseType":{"id":13024,"nodeType":"UserDefinedTypeName","pathNode":{"id":13023,"name":"Log","nameLocations":["25817:3:15"],"nodeType":"IdentifierPath","referencedDeclaration":12250,"src":"25817:3:15"},"referencedDeclaration":12250,"src":"25817:3:15","typeDescriptions":{"typeIdentifier":"t_struct$_Log_$12250_storage_ptr","typeString":"struct VmSafe.Log"}},"id":13025,"nodeType":"ArrayTypeName","src":"25817:5:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Log_$12250_storage_$dyn_storage_ptr","typeString":"struct VmSafe.Log[]"}},"visibility":"internal"}],"src":"25816:19:15"},"scope":15595,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13035,"nodeType":"FunctionDefinition","src":"25886:62:15","nodes":[],"documentation":{"id":13029,"nodeType":"StructuredDocumentation","src":"25842:39:15","text":"Gets the gas used in the last call."},"functionSelector":"2b589b28","implemented":false,"kind":"function","modifiers":[],"name":"lastCallGas","nameLocation":"25895:11:15","parameters":{"id":13030,"nodeType":"ParameterList","parameters":[],"src":"25906:2:15"},"returnParameters":{"id":13034,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13033,"mutability":"mutable","name":"gas","nameLocation":"25943:3:15","nodeType":"VariableDeclaration","scope":13035,"src":"25932:14:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Gas_$12387_memory_ptr","typeString":"struct VmSafe.Gas"},"typeName":{"id":13032,"nodeType":"UserDefinedTypeName","pathNode":{"id":13031,"name":"Gas","nameLocations":["25932:3:15"],"nodeType":"IdentifierPath","referencedDeclaration":12387,"src":"25932:3:15"},"referencedDeclaration":12387,"src":"25932:3:15","typeDescriptions":{"typeIdentifier":"t_struct$_Gas_$12387_storage_ptr","typeString":"struct VmSafe.Gas"}},"visibility":"internal"}],"src":"25931:16:15"},"scope":15595,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":13045,"nodeType":"FunctionDefinition","src":"26000:81:15","nodes":[],"documentation":{"id":13036,"nodeType":"StructuredDocumentation","src":"25954:41:15","text":"Loads a storage slot from an address."},"functionSelector":"667f9d70","implemented":false,"kind":"function","modifiers":[],"name":"load","nameLocation":"26009:4:15","parameters":{"id":13041,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13038,"mutability":"mutable","name":"target","nameLocation":"26022:6:15","nodeType":"VariableDeclaration","scope":13045,"src":"26014:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":13037,"name":"address","nodeType":"ElementaryTypeName","src":"26014:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":13040,"mutability":"mutable","name":"slot","nameLocation":"26038:4:15","nodeType":"VariableDeclaration","scope":13045,"src":"26030:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":13039,"name":"bytes32","nodeType":"ElementaryTypeName","src":"26030:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"26013:30:15"},"returnParameters":{"id":13044,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13043,"mutability":"mutable","name":"data","nameLocation":"26075:4:15","nodeType":"VariableDeclaration","scope":13045,"src":"26067:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":13042,"name":"bytes32","nodeType":"ElementaryTypeName","src":"26067:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"26066:14:15"},"scope":15595,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":13049,"nodeType":"FunctionDefinition","src":"26172:37:15","nodes":[],"documentation":{"id":13046,"nodeType":"StructuredDocumentation","src":"26087:80:15","text":"Pauses gas metering (i.e. gas usage is not counted). Noop if already paused."},"functionSelector":"d1a5b36f","implemented":false,"kind":"function","modifiers":[],"name":"pauseGasMetering","nameLocation":"26181:16:15","parameters":{"id":13047,"nodeType":"ParameterList","parameters":[],"src":"26197:2:15"},"returnParameters":{"id":13048,"nodeType":"ParameterList","parameters":[],"src":"26208:0:15"},"scope":15595,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13053,"nodeType":"FunctionDefinition","src":"26261:27:15","nodes":[],"documentation":{"id":13050,"nodeType":"StructuredDocumentation","src":"26215:41:15","text":"Records all storage reads and writes."},"functionSelector":"266cf109","implemented":false,"kind":"function","modifiers":[],"name":"record","nameLocation":"26270:6:15","parameters":{"id":13051,"nodeType":"ParameterList","parameters":[],"src":"26276:2:15"},"returnParameters":{"id":13052,"nodeType":"ParameterList","parameters":[],"src":"26287:0:15"},"scope":15595,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13057,"nodeType":"FunctionDefinition","src":"26335:31:15","nodes":[],"documentation":{"id":13054,"nodeType":"StructuredDocumentation","src":"26294:36:15","text":"Record all the transaction logs."},"functionSelector":"41af2f52","implemented":false,"kind":"function","modifiers":[],"name":"recordLogs","nameLocation":"26344:10:15","parameters":{"id":13055,"nodeType":"ParameterList","parameters":[],"src":"26354:2:15"},"returnParameters":{"id":13056,"nodeType":"ParameterList","parameters":[],"src":"26365:0:15"},"scope":15595,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13061,"nodeType":"FunctionDefinition","src":"26456:38:15","nodes":[],"documentation":{"id":13058,"nodeType":"StructuredDocumentation","src":"26372:79:15","text":"Resumes gas metering (i.e. gas usage is counted again). Noop if already on."},"functionSelector":"2bcd50e0","implemented":false,"kind":"function","modifiers":[],"name":"resumeGasMetering","nameLocation":"26465:17:15","parameters":{"id":13059,"nodeType":"ParameterList","parameters":[],"src":"26482:2:15"},"returnParameters":{"id":13060,"nodeType":"ParameterList","parameters":[],"src":"26493:0:15"},"scope":15595,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13071,"nodeType":"FunctionDefinition","src":"26571:98:15","nodes":[],"documentation":{"id":13062,"nodeType":"StructuredDocumentation","src":"26500:66:15","text":"Performs an Ethereum JSON-RPC request to the current fork URL."},"functionSelector":"1206c8a8","implemented":false,"kind":"function","modifiers":[],"name":"rpc","nameLocation":"26580:3:15","parameters":{"id":13067,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13064,"mutability":"mutable","name":"method","nameLocation":"26600:6:15","nodeType":"VariableDeclaration","scope":13071,"src":"26584:22:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13063,"name":"string","nodeType":"ElementaryTypeName","src":"26584:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13066,"mutability":"mutable","name":"params","nameLocation":"26624:6:15","nodeType":"VariableDeclaration","scope":13071,"src":"26608:22:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13065,"name":"string","nodeType":"ElementaryTypeName","src":"26608:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"26583:48:15"},"returnParameters":{"id":13070,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13069,"mutability":"mutable","name":"data","nameLocation":"26663:4:15","nodeType":"VariableDeclaration","scope":13071,"src":"26650:17:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":13068,"name":"bytes","nodeType":"ElementaryTypeName","src":"26650:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"26649:19:15"},"scope":15595,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13083,"nodeType":"FunctionDefinition","src":"26744:142:15","nodes":[],"documentation":{"id":13072,"nodeType":"StructuredDocumentation","src":"26675:64:15","text":"Performs an Ethereum JSON-RPC request to the given endpoint."},"functionSelector":"0199a220","implemented":false,"kind":"function","modifiers":[],"name":"rpc","nameLocation":"26753:3:15","parameters":{"id":13079,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13074,"mutability":"mutable","name":"urlOrAlias","nameLocation":"26773:10:15","nodeType":"VariableDeclaration","scope":13083,"src":"26757:26:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13073,"name":"string","nodeType":"ElementaryTypeName","src":"26757:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13076,"mutability":"mutable","name":"method","nameLocation":"26801:6:15","nodeType":"VariableDeclaration","scope":13083,"src":"26785:22:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13075,"name":"string","nodeType":"ElementaryTypeName","src":"26785:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13078,"mutability":"mutable","name":"params","nameLocation":"26825:6:15","nodeType":"VariableDeclaration","scope":13083,"src":"26809:22:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13077,"name":"string","nodeType":"ElementaryTypeName","src":"26809:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"26756:76:15"},"returnParameters":{"id":13082,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13081,"mutability":"mutable","name":"data","nameLocation":"26880:4:15","nodeType":"VariableDeclaration","scope":13083,"src":"26867:17:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":13080,"name":"bytes","nodeType":"ElementaryTypeName","src":"26867:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"26866:19:15"},"scope":15595,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13087,"nodeType":"FunctionDefinition","src":"26954:42:15","nodes":[],"documentation":{"id":13084,"nodeType":"StructuredDocumentation","src":"26892:57:15","text":"Starts recording all map SSTOREs for later retrieval."},"functionSelector":"3e9705c0","implemented":false,"kind":"function","modifiers":[],"name":"startMappingRecording","nameLocation":"26963:21:15","parameters":{"id":13085,"nodeType":"ParameterList","parameters":[],"src":"26984:2:15"},"returnParameters":{"id":13086,"nodeType":"ParameterList","parameters":[],"src":"26995:0:15"},"scope":15595,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13091,"nodeType":"FunctionDefinition","src":"27140:44:15","nodes":[],"documentation":{"id":13088,"nodeType":"StructuredDocumentation","src":"27002:133:15","text":"Record all account accesses as part of CREATE, CALL or SELFDESTRUCT opcodes in order,\n along with the context of the calls"},"functionSelector":"cf22e3c9","implemented":false,"kind":"function","modifiers":[],"name":"startStateDiffRecording","nameLocation":"27149:23:15","parameters":{"id":13089,"nodeType":"ParameterList","parameters":[],"src":"27172:2:15"},"returnParameters":{"id":13090,"nodeType":"ParameterList","parameters":[],"src":"27183:0:15"},"scope":15595,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13099,"nodeType":"FunctionDefinition","src":"27292:92:15","nodes":[],"documentation":{"id":13092,"nodeType":"StructuredDocumentation","src":"27190:97:15","text":"Returns an ordered array of all account accesses from a `vm.startStateDiffRecording` session."},"functionSelector":"aa5cf90e","implemented":false,"kind":"function","modifiers":[],"name":"stopAndReturnStateDiff","nameLocation":"27301:22:15","parameters":{"id":13093,"nodeType":"ParameterList","parameters":[],"src":"27323:2:15"},"returnParameters":{"id":13098,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13097,"mutability":"mutable","name":"accountAccesses","nameLocation":"27367:15:15","nodeType":"VariableDeclaration","scope":13099,"src":"27344:38:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AccountAccess_$12361_memory_ptr_$dyn_memory_ptr","typeString":"struct VmSafe.AccountAccess[]"},"typeName":{"baseType":{"id":13095,"nodeType":"UserDefinedTypeName","pathNode":{"id":13094,"name":"AccountAccess","nameLocations":["27344:13:15"],"nodeType":"IdentifierPath","referencedDeclaration":12361,"src":"27344:13:15"},"referencedDeclaration":12361,"src":"27344:13:15","typeDescriptions":{"typeIdentifier":"t_struct$_AccountAccess_$12361_storage_ptr","typeString":"struct VmSafe.AccountAccess"}},"id":13096,"nodeType":"ArrayTypeName","src":"27344:15:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AccountAccess_$12361_storage_$dyn_storage_ptr","typeString":"struct VmSafe.AccountAccess[]"}},"visibility":"internal"}],"src":"27343:40:15"},"scope":15595,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13103,"nodeType":"FunctionDefinition","src":"27480:41:15","nodes":[],"documentation":{"id":13100,"nodeType":"StructuredDocumentation","src":"27390:85:15","text":"Stops recording all map SSTOREs for later retrieval and clears the recorded data."},"functionSelector":"0d4aae9b","implemented":false,"kind":"function","modifiers":[],"name":"stopMappingRecording","nameLocation":"27489:20:15","parameters":{"id":13101,"nodeType":"ParameterList","parameters":[],"src":"27509:2:15"},"returnParameters":{"id":13102,"nodeType":"ParameterList","parameters":[],"src":"27520:0:15"},"scope":15595,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13109,"nodeType":"FunctionDefinition","src":"27720:50:15","nodes":[],"documentation":{"id":13104,"nodeType":"StructuredDocumentation","src":"27564:151:15","text":"Closes file for reading, resetting the offset and allowing to read it from beginning with readLine.\n `path` is relative to the project root."},"functionSelector":"48c3241f","implemented":false,"kind":"function","modifiers":[],"name":"closeFile","nameLocation":"27729:9:15","parameters":{"id":13107,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13106,"mutability":"mutable","name":"path","nameLocation":"27755:4:15","nodeType":"VariableDeclaration","scope":13109,"src":"27739:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13105,"name":"string","nodeType":"ElementaryTypeName","src":"27739:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"27738:22:15"},"returnParameters":{"id":13108,"nodeType":"ParameterList","parameters":[],"src":"27769:0:15"},"scope":15595,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13119,"nodeType":"FunctionDefinition","src":"28085:93:15","nodes":[],"documentation":{"id":13110,"nodeType":"StructuredDocumentation","src":"27776:304:15","text":"Copies the contents of one file to another. This function will **overwrite** the contents of `to`.\n On success, the total number of bytes copied is returned and it is equal to the length of the `to` file as reported by `metadata`.\n Both `from` and `to` are relative to the project root."},"functionSelector":"a54a87d8","implemented":false,"kind":"function","modifiers":[],"name":"copyFile","nameLocation":"28094:8:15","parameters":{"id":13115,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13112,"mutability":"mutable","name":"from","nameLocation":"28119:4:15","nodeType":"VariableDeclaration","scope":13119,"src":"28103:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13111,"name":"string","nodeType":"ElementaryTypeName","src":"28103:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13114,"mutability":"mutable","name":"to","nameLocation":"28141:2:15","nodeType":"VariableDeclaration","scope":13119,"src":"28125:18:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13113,"name":"string","nodeType":"ElementaryTypeName","src":"28125:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"28102:42:15"},"returnParameters":{"id":13118,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13117,"mutability":"mutable","name":"copied","nameLocation":"28170:6:15","nodeType":"VariableDeclaration","scope":13119,"src":"28163:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":13116,"name":"uint64","nodeType":"ElementaryTypeName","src":"28163:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"28162:15:15"},"scope":15595,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13127,"nodeType":"FunctionDefinition","src":"28583:66:15","nodes":[],"documentation":{"id":13120,"nodeType":"StructuredDocumentation","src":"28184:394:15","text":"Creates a new, empty directory at the provided path.\n This cheatcode will revert in the following situations, but is not limited to just these cases:\n - User lacks permissions to modify `path`.\n - A parent of the given path doesn't exist and `recursive` is false.\n - `path` already exists and `recursive` is false.\n `path` is relative to the project root."},"functionSelector":"168b64d3","implemented":false,"kind":"function","modifiers":[],"name":"createDir","nameLocation":"28592:9:15","parameters":{"id":13125,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13122,"mutability":"mutable","name":"path","nameLocation":"28618:4:15","nodeType":"VariableDeclaration","scope":13127,"src":"28602:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13121,"name":"string","nodeType":"ElementaryTypeName","src":"28602:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13124,"mutability":"mutable","name":"recursive","nameLocation":"28629:9:15","nodeType":"VariableDeclaration","scope":13127,"src":"28624:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":13123,"name":"bool","nodeType":"ElementaryTypeName","src":"28624:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"28601:38:15"},"returnParameters":{"id":13126,"nodeType":"ParameterList","parameters":[],"src":"28648:0:15"},"scope":15595,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13135,"nodeType":"FunctionDefinition","src":"28879:93:15","nodes":[],"documentation":{"id":13128,"nodeType":"StructuredDocumentation","src":"28655:219:15","text":"Deploys a contract from an artifact file. Takes in the relative path to the json file or the path to the\n artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional."},"functionSelector":"9a8325a0","implemented":false,"kind":"function","modifiers":[],"name":"deployCode","nameLocation":"28888:10:15","parameters":{"id":13131,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13130,"mutability":"mutable","name":"artifactPath","nameLocation":"28915:12:15","nodeType":"VariableDeclaration","scope":13135,"src":"28899:28:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13129,"name":"string","nodeType":"ElementaryTypeName","src":"28899:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"28898:30:15"},"returnParameters":{"id":13134,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13133,"mutability":"mutable","name":"deployedAddress","nameLocation":"28955:15:15","nodeType":"VariableDeclaration","scope":13135,"src":"28947:23:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":13132,"name":"address","nodeType":"ElementaryTypeName","src":"28947:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"28946:25:15"},"scope":15595,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13145,"nodeType":"FunctionDefinition","src":"29265:141:15","nodes":[],"documentation":{"id":13136,"nodeType":"StructuredDocumentation","src":"28978:282:15","text":"Deploys a contract from an artifact file. Takes in the relative path to the json file or the path to the\n artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional.\n Additionaly accepts abi-encoded constructor arguments."},"functionSelector":"29ce9dde","implemented":false,"kind":"function","modifiers":[],"name":"deployCode","nameLocation":"29274:10:15","parameters":{"id":13141,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13138,"mutability":"mutable","name":"artifactPath","nameLocation":"29301:12:15","nodeType":"VariableDeclaration","scope":13145,"src":"29285:28:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13137,"name":"string","nodeType":"ElementaryTypeName","src":"29285:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13140,"mutability":"mutable","name":"constructorArgs","nameLocation":"29330:15:15","nodeType":"VariableDeclaration","scope":13145,"src":"29315:30:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":13139,"name":"bytes","nodeType":"ElementaryTypeName","src":"29315:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"29284:62:15"},"returnParameters":{"id":13144,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13143,"mutability":"mutable","name":"deployedAddress","nameLocation":"29389:15:15","nodeType":"VariableDeclaration","scope":13145,"src":"29381:23:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":13142,"name":"address","nodeType":"ElementaryTypeName","src":"29381:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"29380:25:15"},"scope":15595,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13153,"nodeType":"FunctionDefinition","src":"29501:69:15","nodes":[],"documentation":{"id":13146,"nodeType":"StructuredDocumentation","src":"29412:84:15","text":"Returns true if the given path points to an existing entity, else returns false."},"functionSelector":"261a323e","implemented":false,"kind":"function","modifiers":[],"name":"exists","nameLocation":"29510:6:15","parameters":{"id":13149,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13148,"mutability":"mutable","name":"path","nameLocation":"29533:4:15","nodeType":"VariableDeclaration","scope":13153,"src":"29517:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13147,"name":"string","nodeType":"ElementaryTypeName","src":"29517:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"29516:22:15"},"returnParameters":{"id":13152,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13151,"mutability":"mutable","name":"result","nameLocation":"29562:6:15","nodeType":"VariableDeclaration","scope":13153,"src":"29557:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":13150,"name":"bool","nodeType":"ElementaryTypeName","src":"29557:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"29556:13:15"},"scope":15595,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13162,"nodeType":"FunctionDefinition","src":"29635:84:15","nodes":[],"documentation":{"id":13154,"nodeType":"StructuredDocumentation","src":"29576:54:15","text":"Performs a foreign function call via the terminal."},"functionSelector":"89160467","implemented":false,"kind":"function","modifiers":[],"name":"ffi","nameLocation":"29644:3:15","parameters":{"id":13158,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13157,"mutability":"mutable","name":"commandInput","nameLocation":"29666:12:15","nodeType":"VariableDeclaration","scope":13162,"src":"29648:30:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":13155,"name":"string","nodeType":"ElementaryTypeName","src":"29648:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":13156,"nodeType":"ArrayTypeName","src":"29648:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"29647:32:15"},"returnParameters":{"id":13161,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13160,"mutability":"mutable","name":"result","nameLocation":"29711:6:15","nodeType":"VariableDeclaration","scope":13162,"src":"29698:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":13159,"name":"bytes","nodeType":"ElementaryTypeName","src":"29698:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"29697:21:15"},"scope":15595,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13171,"nodeType":"FunctionDefinition","src":"29818:93:15","nodes":[],"documentation":{"id":13163,"nodeType":"StructuredDocumentation","src":"29725:88:15","text":"Given a path, query the file system to get information about a file, directory, etc."},"functionSelector":"af368a08","implemented":false,"kind":"function","modifiers":[],"name":"fsMetadata","nameLocation":"29827:10:15","parameters":{"id":13166,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13165,"mutability":"mutable","name":"path","nameLocation":"29854:4:15","nodeType":"VariableDeclaration","scope":13171,"src":"29838:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13164,"name":"string","nodeType":"ElementaryTypeName","src":"29838:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"29837:22:15"},"returnParameters":{"id":13170,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13169,"mutability":"mutable","name":"metadata","nameLocation":"29901:8:15","nodeType":"VariableDeclaration","scope":13171,"src":"29883:26:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_FsMetadata_$12305_memory_ptr","typeString":"struct VmSafe.FsMetadata"},"typeName":{"id":13168,"nodeType":"UserDefinedTypeName","pathNode":{"id":13167,"name":"FsMetadata","nameLocations":["29883:10:15"],"nodeType":"IdentifierPath","referencedDeclaration":12305,"src":"29883:10:15"},"referencedDeclaration":12305,"src":"29883:10:15","typeDescriptions":{"typeIdentifier":"t_struct$_FsMetadata_$12305_storage_ptr","typeString":"struct VmSafe.FsMetadata"}},"visibility":"internal"}],"src":"29882:28:15"},"scope":15595,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":13179,"nodeType":"FunctionDefinition","src":"30149:101:15","nodes":[],"documentation":{"id":13172,"nodeType":"StructuredDocumentation","src":"29917:227:15","text":"Gets the creation bytecode from an artifact file. Takes in the relative path to the json file or the path to the\n artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional."},"functionSelector":"8d1cc925","implemented":false,"kind":"function","modifiers":[],"name":"getCode","nameLocation":"30158:7:15","parameters":{"id":13175,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13174,"mutability":"mutable","name":"artifactPath","nameLocation":"30182:12:15","nodeType":"VariableDeclaration","scope":13179,"src":"30166:28:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13173,"name":"string","nodeType":"ElementaryTypeName","src":"30166:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"30165:30:15"},"returnParameters":{"id":13178,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13177,"mutability":"mutable","name":"creationBytecode","nameLocation":"30232:16:15","nodeType":"VariableDeclaration","scope":13179,"src":"30219:29:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":13176,"name":"bytes","nodeType":"ElementaryTypeName","src":"30219:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"30218:31:15"},"scope":15595,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":13187,"nodeType":"FunctionDefinition","src":"30488:108:15","nodes":[],"documentation":{"id":13180,"nodeType":"StructuredDocumentation","src":"30256:227:15","text":"Gets the deployed bytecode from an artifact file. Takes in the relative path to the json file or the path to the\n artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional."},"functionSelector":"3ebf73b4","implemented":false,"kind":"function","modifiers":[],"name":"getDeployedCode","nameLocation":"30497:15:15","parameters":{"id":13183,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13182,"mutability":"mutable","name":"artifactPath","nameLocation":"30529:12:15","nodeType":"VariableDeclaration","scope":13187,"src":"30513:28:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13181,"name":"string","nodeType":"ElementaryTypeName","src":"30513:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"30512:30:15"},"returnParameters":{"id":13186,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13185,"mutability":"mutable","name":"runtimeBytecode","nameLocation":"30579:15:15","nodeType":"VariableDeclaration","scope":13187,"src":"30566:28:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":13184,"name":"bytes","nodeType":"ElementaryTypeName","src":"30566:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"30565:30:15"},"scope":15595,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":13195,"nodeType":"FunctionDefinition","src":"30702:68:15","nodes":[],"documentation":{"id":13188,"nodeType":"StructuredDocumentation","src":"30602:95:15","text":"Returns true if the path exists on disk and is pointing at a directory, else returns false."},"functionSelector":"7d15d019","implemented":false,"kind":"function","modifiers":[],"name":"isDir","nameLocation":"30711:5:15","parameters":{"id":13191,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13190,"mutability":"mutable","name":"path","nameLocation":"30733:4:15","nodeType":"VariableDeclaration","scope":13195,"src":"30717:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13189,"name":"string","nodeType":"ElementaryTypeName","src":"30717:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"30716:22:15"},"returnParameters":{"id":13194,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13193,"mutability":"mutable","name":"result","nameLocation":"30762:6:15","nodeType":"VariableDeclaration","scope":13195,"src":"30757:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":13192,"name":"bool","nodeType":"ElementaryTypeName","src":"30757:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"30756:13:15"},"scope":15595,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13203,"nodeType":"FunctionDefinition","src":"30879:69:15","nodes":[],"documentation":{"id":13196,"nodeType":"StructuredDocumentation","src":"30776:98:15","text":"Returns true if the path exists on disk and is pointing at a regular file, else returns false."},"functionSelector":"e0eb04d4","implemented":false,"kind":"function","modifiers":[],"name":"isFile","nameLocation":"30888:6:15","parameters":{"id":13199,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13198,"mutability":"mutable","name":"path","nameLocation":"30911:4:15","nodeType":"VariableDeclaration","scope":13203,"src":"30895:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13197,"name":"string","nodeType":"ElementaryTypeName","src":"30895:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"30894:22:15"},"returnParameters":{"id":13202,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13201,"mutability":"mutable","name":"result","nameLocation":"30940:6:15","nodeType":"VariableDeclaration","scope":13203,"src":"30935:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":13200,"name":"bool","nodeType":"ElementaryTypeName","src":"30935:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"30934:13:15"},"scope":15595,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13209,"nodeType":"FunctionDefinition","src":"31004:66:15","nodes":[],"documentation":{"id":13204,"nodeType":"StructuredDocumentation","src":"30954:45:15","text":"Get the path of the current project root."},"functionSelector":"d930a0e6","implemented":false,"kind":"function","modifiers":[],"name":"projectRoot","nameLocation":"31013:11:15","parameters":{"id":13205,"nodeType":"ParameterList","parameters":[],"src":"31024:2:15"},"returnParameters":{"id":13208,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13207,"mutability":"mutable","name":"path","nameLocation":"31064:4:15","nodeType":"VariableDeclaration","scope":13209,"src":"31050:18:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":13206,"name":"string","nodeType":"ElementaryTypeName","src":"31050:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"31049:20:15"},"scope":15595,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":13217,"nodeType":"FunctionDefinition","src":"31137:83:15","nodes":[],"documentation":{"id":13210,"nodeType":"StructuredDocumentation","src":"31076:56:15","text":"Prompts the user for a string value in the terminal."},"functionSelector":"47eaf474","implemented":false,"kind":"function","modifiers":[],"name":"prompt","nameLocation":"31146:6:15","parameters":{"id":13213,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13212,"mutability":"mutable","name":"promptText","nameLocation":"31169:10:15","nodeType":"VariableDeclaration","scope":13217,"src":"31153:26:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13211,"name":"string","nodeType":"ElementaryTypeName","src":"31153:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"31152:28:15"},"returnParameters":{"id":13216,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13215,"mutability":"mutable","name":"input","nameLocation":"31213:5:15","nodeType":"VariableDeclaration","scope":13217,"src":"31199:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":13214,"name":"string","nodeType":"ElementaryTypeName","src":"31199:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"31198:21:15"},"scope":15595,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13225,"nodeType":"FunctionDefinition","src":"31283:78:15","nodes":[],"documentation":{"id":13218,"nodeType":"StructuredDocumentation","src":"31226:52:15","text":"Prompts the user for an address in the terminal."},"functionSelector":"62ee05f4","implemented":false,"kind":"function","modifiers":[],"name":"promptAddress","nameLocation":"31292:13:15","parameters":{"id":13221,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13220,"mutability":"mutable","name":"promptText","nameLocation":"31322:10:15","nodeType":"VariableDeclaration","scope":13225,"src":"31306:26:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13219,"name":"string","nodeType":"ElementaryTypeName","src":"31306:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"31305:28:15"},"returnParameters":{"id":13224,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13223,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":13225,"src":"31352:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":13222,"name":"address","nodeType":"ElementaryTypeName","src":"31352:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"31351:9:15"},"scope":15595,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13233,"nodeType":"FunctionDefinition","src":"31435:89:15","nodes":[],"documentation":{"id":13226,"nodeType":"StructuredDocumentation","src":"31367:63:15","text":"Prompts the user for a hidden string value in the terminal."},"functionSelector":"1e279d41","implemented":false,"kind":"function","modifiers":[],"name":"promptSecret","nameLocation":"31444:12:15","parameters":{"id":13229,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13228,"mutability":"mutable","name":"promptText","nameLocation":"31473:10:15","nodeType":"VariableDeclaration","scope":13233,"src":"31457:26:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13227,"name":"string","nodeType":"ElementaryTypeName","src":"31457:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"31456:28:15"},"returnParameters":{"id":13232,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13231,"mutability":"mutable","name":"input","nameLocation":"31517:5:15","nodeType":"VariableDeclaration","scope":13233,"src":"31503:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":13230,"name":"string","nodeType":"ElementaryTypeName","src":"31503:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"31502:21:15"},"scope":15595,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13241,"nodeType":"FunctionDefinition","src":"31604:81:15","nodes":[],"documentation":{"id":13234,"nodeType":"StructuredDocumentation","src":"31530:69:15","text":"Prompts the user for hidden uint256 in the terminal (usually pk)."},"functionSelector":"69ca02b7","implemented":false,"kind":"function","modifiers":[],"name":"promptSecretUint","nameLocation":"31613:16:15","parameters":{"id":13237,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13236,"mutability":"mutable","name":"promptText","nameLocation":"31646:10:15","nodeType":"VariableDeclaration","scope":13241,"src":"31630:26:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13235,"name":"string","nodeType":"ElementaryTypeName","src":"31630:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"31629:28:15"},"returnParameters":{"id":13240,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13239,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":13241,"src":"31676:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13238,"name":"uint256","nodeType":"ElementaryTypeName","src":"31676:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"31675:9:15"},"scope":15595,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13249,"nodeType":"FunctionDefinition","src":"31745:75:15","nodes":[],"documentation":{"id":13242,"nodeType":"StructuredDocumentation","src":"31691:49:15","text":"Prompts the user for uint256 in the terminal."},"functionSelector":"652fd489","implemented":false,"kind":"function","modifiers":[],"name":"promptUint","nameLocation":"31754:10:15","parameters":{"id":13245,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13244,"mutability":"mutable","name":"promptText","nameLocation":"31781:10:15","nodeType":"VariableDeclaration","scope":13249,"src":"31765:26:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13243,"name":"string","nodeType":"ElementaryTypeName","src":"31765:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"31764:28:15"},"returnParameters":{"id":13248,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13247,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":13249,"src":"31811:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13246,"name":"uint256","nodeType":"ElementaryTypeName","src":"31811:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"31810:9:15"},"scope":15595,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13259,"nodeType":"FunctionDefinition","src":"32068:89:15","nodes":[],"documentation":{"id":13250,"nodeType":"StructuredDocumentation","src":"31826:237:15","text":"Reads the directory at the given path recursively, up to `maxDepth`.\n `maxDepth` defaults to 1, meaning only the direct children of the given directory will be returned.\n Follows symbolic links if `followLinks` is true."},"functionSelector":"c4bc59e0","implemented":false,"kind":"function","modifiers":[],"name":"readDir","nameLocation":"32077:7:15","parameters":{"id":13253,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13252,"mutability":"mutable","name":"path","nameLocation":"32101:4:15","nodeType":"VariableDeclaration","scope":13259,"src":"32085:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13251,"name":"string","nodeType":"ElementaryTypeName","src":"32085:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"32084:22:15"},"returnParameters":{"id":13258,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13257,"mutability":"mutable","name":"entries","nameLocation":"32148:7:15","nodeType":"VariableDeclaration","scope":13259,"src":"32130:25:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_DirEntry_$12289_memory_ptr_$dyn_memory_ptr","typeString":"struct VmSafe.DirEntry[]"},"typeName":{"baseType":{"id":13255,"nodeType":"UserDefinedTypeName","pathNode":{"id":13254,"name":"DirEntry","nameLocations":["32130:8:15"],"nodeType":"IdentifierPath","referencedDeclaration":12289,"src":"32130:8:15"},"referencedDeclaration":12289,"src":"32130:8:15","typeDescriptions":{"typeIdentifier":"t_struct$_DirEntry_$12289_storage_ptr","typeString":"struct VmSafe.DirEntry"}},"id":13256,"nodeType":"ArrayTypeName","src":"32130:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_DirEntry_$12289_storage_$dyn_storage_ptr","typeString":"struct VmSafe.DirEntry[]"}},"visibility":"internal"}],"src":"32129:27:15"},"scope":15595,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":13271,"nodeType":"FunctionDefinition","src":"32194:106:15","nodes":[],"documentation":{"id":13260,"nodeType":"StructuredDocumentation","src":"32163:26:15","text":"See `readDir(string)`."},"functionSelector":"1497876c","implemented":false,"kind":"function","modifiers":[],"name":"readDir","nameLocation":"32203:7:15","parameters":{"id":13265,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13262,"mutability":"mutable","name":"path","nameLocation":"32227:4:15","nodeType":"VariableDeclaration","scope":13271,"src":"32211:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13261,"name":"string","nodeType":"ElementaryTypeName","src":"32211:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13264,"mutability":"mutable","name":"maxDepth","nameLocation":"32240:8:15","nodeType":"VariableDeclaration","scope":13271,"src":"32233:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":13263,"name":"uint64","nodeType":"ElementaryTypeName","src":"32233:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"32210:39:15"},"returnParameters":{"id":13270,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13269,"mutability":"mutable","name":"entries","nameLocation":"32291:7:15","nodeType":"VariableDeclaration","scope":13271,"src":"32273:25:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_DirEntry_$12289_memory_ptr_$dyn_memory_ptr","typeString":"struct VmSafe.DirEntry[]"},"typeName":{"baseType":{"id":13267,"nodeType":"UserDefinedTypeName","pathNode":{"id":13266,"name":"DirEntry","nameLocations":["32273:8:15"],"nodeType":"IdentifierPath","referencedDeclaration":12289,"src":"32273:8:15"},"referencedDeclaration":12289,"src":"32273:8:15","typeDescriptions":{"typeIdentifier":"t_struct$_DirEntry_$12289_storage_ptr","typeString":"struct VmSafe.DirEntry"}},"id":13268,"nodeType":"ArrayTypeName","src":"32273:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_DirEntry_$12289_storage_$dyn_storage_ptr","typeString":"struct VmSafe.DirEntry[]"}},"visibility":"internal"}],"src":"32272:27:15"},"scope":15595,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":13285,"nodeType":"FunctionDefinition","src":"32337:148:15","nodes":[],"documentation":{"id":13272,"nodeType":"StructuredDocumentation","src":"32306:26:15","text":"See `readDir(string)`."},"functionSelector":"8102d70d","implemented":false,"kind":"function","modifiers":[],"name":"readDir","nameLocation":"32346:7:15","parameters":{"id":13279,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13274,"mutability":"mutable","name":"path","nameLocation":"32370:4:15","nodeType":"VariableDeclaration","scope":13285,"src":"32354:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13273,"name":"string","nodeType":"ElementaryTypeName","src":"32354:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13276,"mutability":"mutable","name":"maxDepth","nameLocation":"32383:8:15","nodeType":"VariableDeclaration","scope":13285,"src":"32376:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":13275,"name":"uint64","nodeType":"ElementaryTypeName","src":"32376:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":13278,"mutability":"mutable","name":"followLinks","nameLocation":"32398:11:15","nodeType":"VariableDeclaration","scope":13285,"src":"32393:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":13277,"name":"bool","nodeType":"ElementaryTypeName","src":"32393:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"32353:57:15"},"returnParameters":{"id":13284,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13283,"mutability":"mutable","name":"entries","nameLocation":"32476:7:15","nodeType":"VariableDeclaration","scope":13285,"src":"32458:25:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_DirEntry_$12289_memory_ptr_$dyn_memory_ptr","typeString":"struct VmSafe.DirEntry[]"},"typeName":{"baseType":{"id":13281,"nodeType":"UserDefinedTypeName","pathNode":{"id":13280,"name":"DirEntry","nameLocations":["32458:8:15"],"nodeType":"IdentifierPath","referencedDeclaration":12289,"src":"32458:8:15"},"referencedDeclaration":12289,"src":"32458:8:15","typeDescriptions":{"typeIdentifier":"t_struct$_DirEntry_$12289_storage_ptr","typeString":"struct VmSafe.DirEntry"}},"id":13282,"nodeType":"ArrayTypeName","src":"32458:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_DirEntry_$12289_storage_$dyn_storage_ptr","typeString":"struct VmSafe.DirEntry[]"}},"visibility":"internal"}],"src":"32457:27:15"},"scope":15595,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":13293,"nodeType":"FunctionDefinition","src":"32583:83:15","nodes":[],"documentation":{"id":13286,"nodeType":"StructuredDocumentation","src":"32491:87:15","text":"Reads the entire content of file to string. `path` is relative to the project root."},"functionSelector":"60f9bb11","implemented":false,"kind":"function","modifiers":[],"name":"readFile","nameLocation":"32592:8:15","parameters":{"id":13289,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13288,"mutability":"mutable","name":"path","nameLocation":"32617:4:15","nodeType":"VariableDeclaration","scope":13293,"src":"32601:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13287,"name":"string","nodeType":"ElementaryTypeName","src":"32601:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"32600:22:15"},"returnParameters":{"id":13292,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13291,"mutability":"mutable","name":"data","nameLocation":"32660:4:15","nodeType":"VariableDeclaration","scope":13293,"src":"32646:18:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":13290,"name":"string","nodeType":"ElementaryTypeName","src":"32646:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"32645:20:15"},"scope":15595,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":13301,"nodeType":"FunctionDefinition","src":"32764:88:15","nodes":[],"documentation":{"id":13294,"nodeType":"StructuredDocumentation","src":"32672:87:15","text":"Reads the entire content of file as binary. `path` is relative to the project root."},"functionSelector":"16ed7bc4","implemented":false,"kind":"function","modifiers":[],"name":"readFileBinary","nameLocation":"32773:14:15","parameters":{"id":13297,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13296,"mutability":"mutable","name":"path","nameLocation":"32804:4:15","nodeType":"VariableDeclaration","scope":13301,"src":"32788:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13295,"name":"string","nodeType":"ElementaryTypeName","src":"32788:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"32787:22:15"},"returnParameters":{"id":13300,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13299,"mutability":"mutable","name":"data","nameLocation":"32846:4:15","nodeType":"VariableDeclaration","scope":13301,"src":"32833:17:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":13298,"name":"bytes","nodeType":"ElementaryTypeName","src":"32833:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"32832:19:15"},"scope":15595,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":13309,"nodeType":"FunctionDefinition","src":"32901:83:15","nodes":[],"documentation":{"id":13302,"nodeType":"StructuredDocumentation","src":"32858:38:15","text":"Reads next line of file to string."},"functionSelector":"70f55728","implemented":false,"kind":"function","modifiers":[],"name":"readLine","nameLocation":"32910:8:15","parameters":{"id":13305,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13304,"mutability":"mutable","name":"path","nameLocation":"32935:4:15","nodeType":"VariableDeclaration","scope":13309,"src":"32919:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13303,"name":"string","nodeType":"ElementaryTypeName","src":"32919:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"32918:22:15"},"returnParameters":{"id":13308,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13307,"mutability":"mutable","name":"line","nameLocation":"32978:4:15","nodeType":"VariableDeclaration","scope":13309,"src":"32964:18:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":13306,"name":"string","nodeType":"ElementaryTypeName","src":"32964:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"32963:20:15"},"scope":15595,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":13317,"nodeType":"FunctionDefinition","src":"33243:93:15","nodes":[],"documentation":{"id":13310,"nodeType":"StructuredDocumentation","src":"32990:248:15","text":"Reads a symbolic link, returning the path that the link points to.\n This cheatcode will revert in the following situations, but is not limited to just these cases:\n - `path` is not a symbolic link.\n - `path` does not exist."},"functionSelector":"9f5684a2","implemented":false,"kind":"function","modifiers":[],"name":"readLink","nameLocation":"33252:8:15","parameters":{"id":13313,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13312,"mutability":"mutable","name":"linkPath","nameLocation":"33277:8:15","nodeType":"VariableDeclaration","scope":13317,"src":"33261:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13311,"name":"string","nodeType":"ElementaryTypeName","src":"33261:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"33260:26:15"},"returnParameters":{"id":13316,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13315,"mutability":"mutable","name":"targetPath","nameLocation":"33324:10:15","nodeType":"VariableDeclaration","scope":13317,"src":"33310:24:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":13314,"name":"string","nodeType":"ElementaryTypeName","src":"33310:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"33309:26:15"},"scope":15595,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":13325,"nodeType":"FunctionDefinition","src":"33726:66:15","nodes":[],"documentation":{"id":13318,"nodeType":"StructuredDocumentation","src":"33342:379:15","text":"Removes a directory at the provided path.\n This cheatcode will revert in the following situations, but is not limited to just these cases:\n - `path` doesn't exist.\n - `path` isn't a directory.\n - User lacks permissions to modify `path`.\n - The directory is not empty and `recursive` is false.\n `path` is relative to the project root."},"functionSelector":"45c62011","implemented":false,"kind":"function","modifiers":[],"name":"removeDir","nameLocation":"33735:9:15","parameters":{"id":13323,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13320,"mutability":"mutable","name":"path","nameLocation":"33761:4:15","nodeType":"VariableDeclaration","scope":13325,"src":"33745:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13319,"name":"string","nodeType":"ElementaryTypeName","src":"33745:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13322,"mutability":"mutable","name":"recursive","nameLocation":"33772:9:15","nodeType":"VariableDeclaration","scope":13325,"src":"33767:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":13321,"name":"bool","nodeType":"ElementaryTypeName","src":"33767:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"33744:38:15"},"returnParameters":{"id":13324,"nodeType":"ParameterList","parameters":[],"src":"33791:0:15"},"scope":15595,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13331,"nodeType":"FunctionDefinition","src":"34125:51:15","nodes":[],"documentation":{"id":13326,"nodeType":"StructuredDocumentation","src":"33798:322:15","text":"Removes a file from the filesystem.\n This cheatcode will revert in the following situations, but is not limited to just these cases:\n - `path` points to a directory.\n - The file doesn't exist.\n - The user lacks permissions to remove the file.\n `path` is relative to the project root."},"functionSelector":"f1afe04d","implemented":false,"kind":"function","modifiers":[],"name":"removeFile","nameLocation":"34134:10:15","parameters":{"id":13329,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13328,"mutability":"mutable","name":"path","nameLocation":"34161:4:15","nodeType":"VariableDeclaration","scope":13331,"src":"34145:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13327,"name":"string","nodeType":"ElementaryTypeName","src":"34145:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"34144:22:15"},"returnParameters":{"id":13330,"nodeType":"ParameterList","parameters":[],"src":"34175:0:15"},"scope":15595,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13341,"nodeType":"FunctionDefinition","src":"34283:91:15","nodes":[],"documentation":{"id":13332,"nodeType":"StructuredDocumentation","src":"34182:96:15","text":"Performs a foreign function call via terminal and returns the exit code, stdout, and stderr."},"functionSelector":"f45c1ce7","implemented":false,"kind":"function","modifiers":[],"name":"tryFfi","nameLocation":"34292:6:15","parameters":{"id":13336,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13335,"mutability":"mutable","name":"commandInput","nameLocation":"34317:12:15","nodeType":"VariableDeclaration","scope":13341,"src":"34299:30:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":13333,"name":"string","nodeType":"ElementaryTypeName","src":"34299:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":13334,"nodeType":"ArrayTypeName","src":"34299:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"34298:32:15"},"returnParameters":{"id":13340,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13339,"mutability":"mutable","name":"result","nameLocation":"34366:6:15","nodeType":"VariableDeclaration","scope":13341,"src":"34349:23:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_FfiResult_$12323_memory_ptr","typeString":"struct VmSafe.FfiResult"},"typeName":{"id":13338,"nodeType":"UserDefinedTypeName","pathNode":{"id":13337,"name":"FfiResult","nameLocations":["34349:9:15"],"nodeType":"IdentifierPath","referencedDeclaration":12323,"src":"34349:9:15"},"referencedDeclaration":12323,"src":"34349:9:15","typeDescriptions":{"typeIdentifier":"t_struct$_FfiResult_$12323_storage_ptr","typeString":"struct VmSafe.FfiResult"}},"visibility":"internal"}],"src":"34348:25:15"},"scope":15595,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13347,"nodeType":"FunctionDefinition","src":"34439:60:15","nodes":[],"documentation":{"id":13342,"nodeType":"StructuredDocumentation","src":"34380:54:15","text":"Returns the time since unix epoch in milliseconds."},"functionSelector":"625387dc","implemented":false,"kind":"function","modifiers":[],"name":"unixTime","nameLocation":"34448:8:15","parameters":{"id":13343,"nodeType":"ParameterList","parameters":[],"src":"34456:2:15"},"returnParameters":{"id":13346,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13345,"mutability":"mutable","name":"milliseconds","nameLocation":"34485:12:15","nodeType":"VariableDeclaration","scope":13347,"src":"34477:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13344,"name":"uint256","nodeType":"ElementaryTypeName","src":"34477:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34476:22:15"},"scope":15595,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13355,"nodeType":"FunctionDefinition","src":"34668:72:15","nodes":[],"documentation":{"id":13348,"nodeType":"StructuredDocumentation","src":"34505:158:15","text":"Writes data to file, creating a file if it does not exist, and entirely replacing its contents if it does.\n `path` is relative to the project root."},"functionSelector":"897e0a97","implemented":false,"kind":"function","modifiers":[],"name":"writeFile","nameLocation":"34677:9:15","parameters":{"id":13353,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13350,"mutability":"mutable","name":"path","nameLocation":"34703:4:15","nodeType":"VariableDeclaration","scope":13355,"src":"34687:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13349,"name":"string","nodeType":"ElementaryTypeName","src":"34687:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13352,"mutability":"mutable","name":"data","nameLocation":"34725:4:15","nodeType":"VariableDeclaration","scope":13355,"src":"34709:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13351,"name":"string","nodeType":"ElementaryTypeName","src":"34709:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"34686:44:15"},"returnParameters":{"id":13354,"nodeType":"ParameterList","parameters":[],"src":"34739:0:15"},"scope":15595,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13363,"nodeType":"FunctionDefinition","src":"34918:77:15","nodes":[],"documentation":{"id":13356,"nodeType":"StructuredDocumentation","src":"34746:167:15","text":"Writes binary data to a file, creating a file if it does not exist, and entirely replacing its contents if it does.\n `path` is relative to the project root."},"functionSelector":"1f21fc80","implemented":false,"kind":"function","modifiers":[],"name":"writeFileBinary","nameLocation":"34927:15:15","parameters":{"id":13361,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13358,"mutability":"mutable","name":"path","nameLocation":"34959:4:15","nodeType":"VariableDeclaration","scope":13363,"src":"34943:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13357,"name":"string","nodeType":"ElementaryTypeName","src":"34943:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13360,"mutability":"mutable","name":"data","nameLocation":"34980:4:15","nodeType":"VariableDeclaration","scope":13363,"src":"34965:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":13359,"name":"bytes","nodeType":"ElementaryTypeName","src":"34965:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"34942:43:15"},"returnParameters":{"id":13362,"nodeType":"ParameterList","parameters":[],"src":"34994:0:15"},"scope":15595,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13371,"nodeType":"FunctionDefinition","src":"35116:72:15","nodes":[],"documentation":{"id":13364,"nodeType":"StructuredDocumentation","src":"35001:110:15","text":"Writes line to file, creating a file if it does not exist.\n `path` is relative to the project root."},"functionSelector":"619d897f","implemented":false,"kind":"function","modifiers":[],"name":"writeLine","nameLocation":"35125:9:15","parameters":{"id":13369,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13366,"mutability":"mutable","name":"path","nameLocation":"35151:4:15","nodeType":"VariableDeclaration","scope":13371,"src":"35135:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13365,"name":"string","nodeType":"ElementaryTypeName","src":"35135:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13368,"mutability":"mutable","name":"data","nameLocation":"35173:4:15","nodeType":"VariableDeclaration","scope":13371,"src":"35157:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13367,"name":"string","nodeType":"ElementaryTypeName","src":"35157:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"35134:44:15"},"returnParameters":{"id":13370,"nodeType":"ParameterList","parameters":[],"src":"35187:0:15"},"scope":15595,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13381,"nodeType":"FunctionDefinition","src":"35381:91:15","nodes":[],"documentation":{"id":13372,"nodeType":"StructuredDocumentation","src":"35225:151:15","text":"Checks if `key` exists in a JSON object\n `keyExists` is being deprecated in favor of `keyExistsJson`. It will be removed in future versions."},"functionSelector":"528a683c","implemented":false,"kind":"function","modifiers":[],"name":"keyExists","nameLocation":"35390:9:15","parameters":{"id":13377,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13374,"mutability":"mutable","name":"json","nameLocation":"35416:4:15","nodeType":"VariableDeclaration","scope":13381,"src":"35400:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13373,"name":"string","nodeType":"ElementaryTypeName","src":"35400:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13376,"mutability":"mutable","name":"key","nameLocation":"35438:3:15","nodeType":"VariableDeclaration","scope":13381,"src":"35422:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13375,"name":"string","nodeType":"ElementaryTypeName","src":"35422:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"35399:43:15"},"returnParameters":{"id":13380,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13379,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":13381,"src":"35466:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":13378,"name":"bool","nodeType":"ElementaryTypeName","src":"35466:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"35465:6:15"},"scope":15595,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":13391,"nodeType":"FunctionDefinition","src":"35527:95:15","nodes":[],"documentation":{"id":13382,"nodeType":"StructuredDocumentation","src":"35478:44:15","text":"Checks if `key` exists in a JSON object."},"functionSelector":"db4235f6","implemented":false,"kind":"function","modifiers":[],"name":"keyExistsJson","nameLocation":"35536:13:15","parameters":{"id":13387,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13384,"mutability":"mutable","name":"json","nameLocation":"35566:4:15","nodeType":"VariableDeclaration","scope":13391,"src":"35550:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13383,"name":"string","nodeType":"ElementaryTypeName","src":"35550:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13386,"mutability":"mutable","name":"key","nameLocation":"35588:3:15","nodeType":"VariableDeclaration","scope":13391,"src":"35572:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13385,"name":"string","nodeType":"ElementaryTypeName","src":"35572:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"35549:43:15"},"returnParameters":{"id":13390,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13389,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":13391,"src":"35616:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":13388,"name":"bool","nodeType":"ElementaryTypeName","src":"35616:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"35615:6:15"},"scope":15595,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":13401,"nodeType":"FunctionDefinition","src":"35703:101:15","nodes":[],"documentation":{"id":13392,"nodeType":"StructuredDocumentation","src":"35628:70:15","text":"Parses a string of JSON data at `key` and coerces it to `address`."},"functionSelector":"1e19e657","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonAddress","nameLocation":"35712:16:15","parameters":{"id":13397,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13394,"mutability":"mutable","name":"json","nameLocation":"35745:4:15","nodeType":"VariableDeclaration","scope":13401,"src":"35729:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13393,"name":"string","nodeType":"ElementaryTypeName","src":"35729:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13396,"mutability":"mutable","name":"key","nameLocation":"35767:3:15","nodeType":"VariableDeclaration","scope":13401,"src":"35751:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13395,"name":"string","nodeType":"ElementaryTypeName","src":"35751:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"35728:43:15"},"returnParameters":{"id":13400,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13399,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":13401,"src":"35795:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":13398,"name":"address","nodeType":"ElementaryTypeName","src":"35795:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"35794:9:15"},"scope":15595,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13412,"nodeType":"FunctionDefinition","src":"35887:139:15","nodes":[],"documentation":{"id":13402,"nodeType":"StructuredDocumentation","src":"35810:72:15","text":"Parses a string of JSON data at `key` and coerces it to `address[]`."},"functionSelector":"2fce7883","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonAddressArray","nameLocation":"35896:21:15","parameters":{"id":13407,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13404,"mutability":"mutable","name":"json","nameLocation":"35934:4:15","nodeType":"VariableDeclaration","scope":13412,"src":"35918:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13403,"name":"string","nodeType":"ElementaryTypeName","src":"35918:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13406,"mutability":"mutable","name":"key","nameLocation":"35956:3:15","nodeType":"VariableDeclaration","scope":13412,"src":"35940:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13405,"name":"string","nodeType":"ElementaryTypeName","src":"35940:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"35917:43:15"},"returnParameters":{"id":13411,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13410,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":13412,"src":"36008:16:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":13408,"name":"address","nodeType":"ElementaryTypeName","src":"36008:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":13409,"nodeType":"ArrayTypeName","src":"36008:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"36007:18:15"},"scope":15595,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13422,"nodeType":"FunctionDefinition","src":"36104:95:15","nodes":[],"documentation":{"id":13413,"nodeType":"StructuredDocumentation","src":"36032:67:15","text":"Parses a string of JSON data at `key` and coerces it to `bool`."},"functionSelector":"9f86dc91","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonBool","nameLocation":"36113:13:15","parameters":{"id":13418,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13415,"mutability":"mutable","name":"json","nameLocation":"36143:4:15","nodeType":"VariableDeclaration","scope":13422,"src":"36127:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13414,"name":"string","nodeType":"ElementaryTypeName","src":"36127:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13417,"mutability":"mutable","name":"key","nameLocation":"36165:3:15","nodeType":"VariableDeclaration","scope":13422,"src":"36149:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13416,"name":"string","nodeType":"ElementaryTypeName","src":"36149:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"36126:43:15"},"returnParameters":{"id":13421,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13420,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":13422,"src":"36193:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":13419,"name":"bool","nodeType":"ElementaryTypeName","src":"36193:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"36192:6:15"},"scope":15595,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13433,"nodeType":"FunctionDefinition","src":"36279:109:15","nodes":[],"documentation":{"id":13423,"nodeType":"StructuredDocumentation","src":"36205:69:15","text":"Parses a string of JSON data at `key` and coerces it to `bool[]`."},"functionSelector":"91f3b94f","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonBoolArray","nameLocation":"36288:18:15","parameters":{"id":13428,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13425,"mutability":"mutable","name":"json","nameLocation":"36323:4:15","nodeType":"VariableDeclaration","scope":13433,"src":"36307:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13424,"name":"string","nodeType":"ElementaryTypeName","src":"36307:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13427,"mutability":"mutable","name":"key","nameLocation":"36345:3:15","nodeType":"VariableDeclaration","scope":13433,"src":"36329:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13426,"name":"string","nodeType":"ElementaryTypeName","src":"36329:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"36306:43:15"},"returnParameters":{"id":13432,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13431,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":13433,"src":"36373:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":13429,"name":"bool","nodeType":"ElementaryTypeName","src":"36373:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":13430,"nodeType":"ArrayTypeName","src":"36373:6:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"src":"36372:15:15"},"scope":15595,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13443,"nodeType":"FunctionDefinition","src":"36467:104:15","nodes":[],"documentation":{"id":13434,"nodeType":"StructuredDocumentation","src":"36394:68:15","text":"Parses a string of JSON data at `key` and coerces it to `bytes`."},"functionSelector":"fd921be8","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonBytes","nameLocation":"36476:14:15","parameters":{"id":13439,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13436,"mutability":"mutable","name":"json","nameLocation":"36507:4:15","nodeType":"VariableDeclaration","scope":13443,"src":"36491:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13435,"name":"string","nodeType":"ElementaryTypeName","src":"36491:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13438,"mutability":"mutable","name":"key","nameLocation":"36529:3:15","nodeType":"VariableDeclaration","scope":13443,"src":"36513:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13437,"name":"string","nodeType":"ElementaryTypeName","src":"36513:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"36490:43:15"},"returnParameters":{"id":13442,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13441,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":13443,"src":"36557:12:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":13440,"name":"bytes","nodeType":"ElementaryTypeName","src":"36557:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"36556:14:15"},"scope":15595,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13453,"nodeType":"FunctionDefinition","src":"36652:101:15","nodes":[],"documentation":{"id":13444,"nodeType":"StructuredDocumentation","src":"36577:70:15","text":"Parses a string of JSON data at `key` and coerces it to `bytes32`."},"functionSelector":"1777e59d","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonBytes32","nameLocation":"36661:16:15","parameters":{"id":13449,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13446,"mutability":"mutable","name":"json","nameLocation":"36694:4:15","nodeType":"VariableDeclaration","scope":13453,"src":"36678:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13445,"name":"string","nodeType":"ElementaryTypeName","src":"36678:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13448,"mutability":"mutable","name":"key","nameLocation":"36716:3:15","nodeType":"VariableDeclaration","scope":13453,"src":"36700:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13447,"name":"string","nodeType":"ElementaryTypeName","src":"36700:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"36677:43:15"},"returnParameters":{"id":13452,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13451,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":13453,"src":"36744:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":13450,"name":"bytes32","nodeType":"ElementaryTypeName","src":"36744:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"36743:9:15"},"scope":15595,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13464,"nodeType":"FunctionDefinition","src":"36836:139:15","nodes":[],"documentation":{"id":13454,"nodeType":"StructuredDocumentation","src":"36759:72:15","text":"Parses a string of JSON data at `key` and coerces it to `bytes32[]`."},"functionSelector":"91c75bc3","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonBytes32Array","nameLocation":"36845:21:15","parameters":{"id":13459,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13456,"mutability":"mutable","name":"json","nameLocation":"36883:4:15","nodeType":"VariableDeclaration","scope":13464,"src":"36867:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13455,"name":"string","nodeType":"ElementaryTypeName","src":"36867:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13458,"mutability":"mutable","name":"key","nameLocation":"36905:3:15","nodeType":"VariableDeclaration","scope":13464,"src":"36889:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13457,"name":"string","nodeType":"ElementaryTypeName","src":"36889:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"36866:43:15"},"returnParameters":{"id":13463,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13462,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":13464,"src":"36957:16:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":13460,"name":"bytes32","nodeType":"ElementaryTypeName","src":"36957:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":13461,"nodeType":"ArrayTypeName","src":"36957:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"36956:18:15"},"scope":15595,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13475,"nodeType":"FunctionDefinition","src":"37056:111:15","nodes":[],"documentation":{"id":13465,"nodeType":"StructuredDocumentation","src":"36981:70:15","text":"Parses a string of JSON data at `key` and coerces it to `bytes[]`."},"functionSelector":"6631aa99","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonBytesArray","nameLocation":"37065:19:15","parameters":{"id":13470,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13467,"mutability":"mutable","name":"json","nameLocation":"37101:4:15","nodeType":"VariableDeclaration","scope":13475,"src":"37085:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13466,"name":"string","nodeType":"ElementaryTypeName","src":"37085:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13469,"mutability":"mutable","name":"key","nameLocation":"37123:3:15","nodeType":"VariableDeclaration","scope":13475,"src":"37107:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13468,"name":"string","nodeType":"ElementaryTypeName","src":"37107:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"37084:43:15"},"returnParameters":{"id":13474,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13473,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":13475,"src":"37151:14:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":13471,"name":"bytes","nodeType":"ElementaryTypeName","src":"37151:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":13472,"nodeType":"ArrayTypeName","src":"37151:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"37150:16:15"},"scope":15595,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13485,"nodeType":"FunctionDefinition","src":"37247:96:15","nodes":[],"documentation":{"id":13476,"nodeType":"StructuredDocumentation","src":"37173:69:15","text":"Parses a string of JSON data at `key` and coerces it to `int256`."},"functionSelector":"7b048ccd","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonInt","nameLocation":"37256:12:15","parameters":{"id":13481,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13478,"mutability":"mutable","name":"json","nameLocation":"37285:4:15","nodeType":"VariableDeclaration","scope":13485,"src":"37269:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13477,"name":"string","nodeType":"ElementaryTypeName","src":"37269:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13480,"mutability":"mutable","name":"key","nameLocation":"37307:3:15","nodeType":"VariableDeclaration","scope":13485,"src":"37291:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13479,"name":"string","nodeType":"ElementaryTypeName","src":"37291:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"37268:43:15"},"returnParameters":{"id":13484,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13483,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":13485,"src":"37335:6:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":13482,"name":"int256","nodeType":"ElementaryTypeName","src":"37335:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"37334:8:15"},"scope":15595,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13496,"nodeType":"FunctionDefinition","src":"37425:110:15","nodes":[],"documentation":{"id":13486,"nodeType":"StructuredDocumentation","src":"37349:71:15","text":"Parses a string of JSON data at `key` and coerces it to `int256[]`."},"functionSelector":"9983c28a","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonIntArray","nameLocation":"37434:17:15","parameters":{"id":13491,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13488,"mutability":"mutable","name":"json","nameLocation":"37468:4:15","nodeType":"VariableDeclaration","scope":13496,"src":"37452:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13487,"name":"string","nodeType":"ElementaryTypeName","src":"37452:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13490,"mutability":"mutable","name":"key","nameLocation":"37490:3:15","nodeType":"VariableDeclaration","scope":13496,"src":"37474:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13489,"name":"string","nodeType":"ElementaryTypeName","src":"37474:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"37451:43:15"},"returnParameters":{"id":13495,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13494,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":13496,"src":"37518:15:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_memory_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":13492,"name":"int256","nodeType":"ElementaryTypeName","src":"37518:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":13493,"nodeType":"ArrayTypeName","src":"37518:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"}],"src":"37517:17:15"},"scope":15595,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13507,"nodeType":"FunctionDefinition","src":"37600:111:15","nodes":[],"documentation":{"id":13497,"nodeType":"StructuredDocumentation","src":"37541:54:15","text":"Returns an array of all the keys in a JSON object."},"functionSelector":"213e4198","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonKeys","nameLocation":"37609:13:15","parameters":{"id":13502,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13499,"mutability":"mutable","name":"json","nameLocation":"37639:4:15","nodeType":"VariableDeclaration","scope":13507,"src":"37623:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13498,"name":"string","nodeType":"ElementaryTypeName","src":"37623:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13501,"mutability":"mutable","name":"key","nameLocation":"37661:3:15","nodeType":"VariableDeclaration","scope":13507,"src":"37645:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13500,"name":"string","nodeType":"ElementaryTypeName","src":"37645:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"37622:43:15"},"returnParameters":{"id":13506,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13505,"mutability":"mutable","name":"keys","nameLocation":"37705:4:15","nodeType":"VariableDeclaration","scope":13507,"src":"37689:20:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":13503,"name":"string","nodeType":"ElementaryTypeName","src":"37689:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":13504,"nodeType":"ArrayTypeName","src":"37689:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"37688:22:15"},"scope":15595,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13517,"nodeType":"FunctionDefinition","src":"37791:106:15","nodes":[],"documentation":{"id":13508,"nodeType":"StructuredDocumentation","src":"37717:69:15","text":"Parses a string of JSON data at `key` and coerces it to `string`."},"functionSelector":"49c4fac8","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonString","nameLocation":"37800:15:15","parameters":{"id":13513,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13510,"mutability":"mutable","name":"json","nameLocation":"37832:4:15","nodeType":"VariableDeclaration","scope":13517,"src":"37816:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13509,"name":"string","nodeType":"ElementaryTypeName","src":"37816:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13512,"mutability":"mutable","name":"key","nameLocation":"37854:3:15","nodeType":"VariableDeclaration","scope":13517,"src":"37838:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13511,"name":"string","nodeType":"ElementaryTypeName","src":"37838:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"37815:43:15"},"returnParameters":{"id":13516,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13515,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":13517,"src":"37882:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":13514,"name":"string","nodeType":"ElementaryTypeName","src":"37882:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"37881:15:15"},"scope":15595,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13528,"nodeType":"FunctionDefinition","src":"37979:113:15","nodes":[],"documentation":{"id":13518,"nodeType":"StructuredDocumentation","src":"37903:71:15","text":"Parses a string of JSON data at `key` and coerces it to `string[]`."},"functionSelector":"498fdcf4","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonStringArray","nameLocation":"37988:20:15","parameters":{"id":13523,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13520,"mutability":"mutable","name":"json","nameLocation":"38025:4:15","nodeType":"VariableDeclaration","scope":13528,"src":"38009:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13519,"name":"string","nodeType":"ElementaryTypeName","src":"38009:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13522,"mutability":"mutable","name":"key","nameLocation":"38047:3:15","nodeType":"VariableDeclaration","scope":13528,"src":"38031:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13521,"name":"string","nodeType":"ElementaryTypeName","src":"38031:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"38008:43:15"},"returnParameters":{"id":13527,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13526,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":13528,"src":"38075:15:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":13524,"name":"string","nodeType":"ElementaryTypeName","src":"38075:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":13525,"nodeType":"ArrayTypeName","src":"38075:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"38074:17:15"},"scope":15595,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13540,"nodeType":"FunctionDefinition","src":"38209:165:15","nodes":[],"documentation":{"id":13529,"nodeType":"StructuredDocumentation","src":"38098:106:15","text":"Parses a string of JSON data at `key` and coerces it to type array corresponding to `typeDescription`."},"functionSelector":"0175d535","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonTypeArray","nameLocation":"38218:18:15","parameters":{"id":13536,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13531,"mutability":"mutable","name":"json","nameLocation":"38253:4:15","nodeType":"VariableDeclaration","scope":13540,"src":"38237:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13530,"name":"string","nodeType":"ElementaryTypeName","src":"38237:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13533,"mutability":"mutable","name":"key","nameLocation":"38275:3:15","nodeType":"VariableDeclaration","scope":13540,"src":"38259:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13532,"name":"string","nodeType":"ElementaryTypeName","src":"38259:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13535,"mutability":"mutable","name":"typeDescription","nameLocation":"38296:15:15","nodeType":"VariableDeclaration","scope":13540,"src":"38280:31:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13534,"name":"string","nodeType":"ElementaryTypeName","src":"38280:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"38236:76:15"},"returnParameters":{"id":13539,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13538,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":13540,"src":"38360:12:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":13537,"name":"bytes","nodeType":"ElementaryTypeName","src":"38360:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"38359:14:15"},"scope":15595,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13550,"nodeType":"FunctionDefinition","src":"38476:139:15","nodes":[],"documentation":{"id":13541,"nodeType":"StructuredDocumentation","src":"38380:91:15","text":"Parses a string of JSON data and coerces it to type corresponding to `typeDescription`."},"functionSelector":"a9da313b","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonType","nameLocation":"38485:13:15","parameters":{"id":13546,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13543,"mutability":"mutable","name":"json","nameLocation":"38515:4:15","nodeType":"VariableDeclaration","scope":13550,"src":"38499:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13542,"name":"string","nodeType":"ElementaryTypeName","src":"38499:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13545,"mutability":"mutable","name":"typeDescription","nameLocation":"38537:15:15","nodeType":"VariableDeclaration","scope":13550,"src":"38521:31:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13544,"name":"string","nodeType":"ElementaryTypeName","src":"38521:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"38498:55:15"},"returnParameters":{"id":13549,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13548,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":13550,"src":"38601:12:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":13547,"name":"bytes","nodeType":"ElementaryTypeName","src":"38601:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"38600:14:15"},"scope":15595,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13562,"nodeType":"FunctionDefinition","src":"38726:160:15","nodes":[],"documentation":{"id":13551,"nodeType":"StructuredDocumentation","src":"38621:100:15","text":"Parses a string of JSON data at `key` and coerces it to type corresponding to `typeDescription`."},"functionSelector":"e3f5ae33","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonType","nameLocation":"38735:13:15","parameters":{"id":13558,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13553,"mutability":"mutable","name":"json","nameLocation":"38765:4:15","nodeType":"VariableDeclaration","scope":13562,"src":"38749:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13552,"name":"string","nodeType":"ElementaryTypeName","src":"38749:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13555,"mutability":"mutable","name":"key","nameLocation":"38787:3:15","nodeType":"VariableDeclaration","scope":13562,"src":"38771:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13554,"name":"string","nodeType":"ElementaryTypeName","src":"38771:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13557,"mutability":"mutable","name":"typeDescription","nameLocation":"38808:15:15","nodeType":"VariableDeclaration","scope":13562,"src":"38792:31:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13556,"name":"string","nodeType":"ElementaryTypeName","src":"38792:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"38748:76:15"},"returnParameters":{"id":13561,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13560,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":13562,"src":"38872:12:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":13559,"name":"bytes","nodeType":"ElementaryTypeName","src":"38872:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"38871:14:15"},"scope":15595,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13572,"nodeType":"FunctionDefinition","src":"38967:98:15","nodes":[],"documentation":{"id":13563,"nodeType":"StructuredDocumentation","src":"38892:70:15","text":"Parses a string of JSON data at `key` and coerces it to `uint256`."},"functionSelector":"addde2b6","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonUint","nameLocation":"38976:13:15","parameters":{"id":13568,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13565,"mutability":"mutable","name":"json","nameLocation":"39006:4:15","nodeType":"VariableDeclaration","scope":13572,"src":"38990:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13564,"name":"string","nodeType":"ElementaryTypeName","src":"38990:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13567,"mutability":"mutable","name":"key","nameLocation":"39028:3:15","nodeType":"VariableDeclaration","scope":13572,"src":"39012:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13566,"name":"string","nodeType":"ElementaryTypeName","src":"39012:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"38989:43:15"},"returnParameters":{"id":13571,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13570,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":13572,"src":"39056:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13569,"name":"uint256","nodeType":"ElementaryTypeName","src":"39056:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"39055:9:15"},"scope":15595,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13583,"nodeType":"FunctionDefinition","src":"39148:112:15","nodes":[],"documentation":{"id":13573,"nodeType":"StructuredDocumentation","src":"39071:72:15","text":"Parses a string of JSON data at `key` and coerces it to `uint256[]`."},"functionSelector":"522074ab","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonUintArray","nameLocation":"39157:18:15","parameters":{"id":13578,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13575,"mutability":"mutable","name":"json","nameLocation":"39192:4:15","nodeType":"VariableDeclaration","scope":13583,"src":"39176:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13574,"name":"string","nodeType":"ElementaryTypeName","src":"39176:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13577,"mutability":"mutable","name":"key","nameLocation":"39214:3:15","nodeType":"VariableDeclaration","scope":13583,"src":"39198:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13576,"name":"string","nodeType":"ElementaryTypeName","src":"39198:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"39175:43:15"},"returnParameters":{"id":13582,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13581,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":13583,"src":"39242:16:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":13579,"name":"uint256","nodeType":"ElementaryTypeName","src":"39242:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":13580,"nodeType":"ArrayTypeName","src":"39242:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"39241:18:15"},"scope":15595,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13591,"nodeType":"FunctionDefinition","src":"39301:93:15","nodes":[],"documentation":{"id":13584,"nodeType":"StructuredDocumentation","src":"39266:30:15","text":"ABI-encodes a JSON object."},"functionSelector":"6a82600a","implemented":false,"kind":"function","modifiers":[],"name":"parseJson","nameLocation":"39310:9:15","parameters":{"id":13587,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13586,"mutability":"mutable","name":"json","nameLocation":"39336:4:15","nodeType":"VariableDeclaration","scope":13591,"src":"39320:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13585,"name":"string","nodeType":"ElementaryTypeName","src":"39320:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"39319:22:15"},"returnParameters":{"id":13590,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13589,"mutability":"mutable","name":"abiEncodedData","nameLocation":"39378:14:15","nodeType":"VariableDeclaration","scope":13591,"src":"39365:27:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":13588,"name":"bytes","nodeType":"ElementaryTypeName","src":"39365:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"39364:29:15"},"scope":15595,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13601,"nodeType":"FunctionDefinition","src":"39444:114:15","nodes":[],"documentation":{"id":13592,"nodeType":"StructuredDocumentation","src":"39400:39:15","text":"ABI-encodes a JSON object at `key`."},"functionSelector":"85940ef1","implemented":false,"kind":"function","modifiers":[],"name":"parseJson","nameLocation":"39453:9:15","parameters":{"id":13597,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13594,"mutability":"mutable","name":"json","nameLocation":"39479:4:15","nodeType":"VariableDeclaration","scope":13601,"src":"39463:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13593,"name":"string","nodeType":"ElementaryTypeName","src":"39463:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13596,"mutability":"mutable","name":"key","nameLocation":"39501:3:15","nodeType":"VariableDeclaration","scope":13601,"src":"39485:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13595,"name":"string","nodeType":"ElementaryTypeName","src":"39485:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"39462:43:15"},"returnParameters":{"id":13600,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13599,"mutability":"mutable","name":"abiEncodedData","nameLocation":"39542:14:15","nodeType":"VariableDeclaration","scope":13601,"src":"39529:27:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":13598,"name":"bytes","nodeType":"ElementaryTypeName","src":"39529:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"39528:29:15"},"scope":15595,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13613,"nodeType":"FunctionDefinition","src":"39593:148:15","nodes":[],"documentation":{"id":13602,"nodeType":"StructuredDocumentation","src":"39564:24:15","text":"See `serializeJson`."},"functionSelector":"972c6062","implemented":false,"kind":"function","modifiers":[],"name":"serializeAddress","nameLocation":"39602:16:15","parameters":{"id":13609,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13604,"mutability":"mutable","name":"objectKey","nameLocation":"39635:9:15","nodeType":"VariableDeclaration","scope":13613,"src":"39619:25:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13603,"name":"string","nodeType":"ElementaryTypeName","src":"39619:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13606,"mutability":"mutable","name":"valueKey","nameLocation":"39662:8:15","nodeType":"VariableDeclaration","scope":13613,"src":"39646:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13605,"name":"string","nodeType":"ElementaryTypeName","src":"39646:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13608,"mutability":"mutable","name":"value","nameLocation":"39680:5:15","nodeType":"VariableDeclaration","scope":13613,"src":"39672:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":13607,"name":"address","nodeType":"ElementaryTypeName","src":"39672:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"39618:68:15"},"returnParameters":{"id":13612,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13611,"mutability":"mutable","name":"json","nameLocation":"39735:4:15","nodeType":"VariableDeclaration","scope":13613,"src":"39721:18:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":13610,"name":"string","nodeType":"ElementaryTypeName","src":"39721:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"39720:20:15"},"scope":15595,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13626,"nodeType":"FunctionDefinition","src":"39776:160:15","nodes":[],"documentation":{"id":13614,"nodeType":"StructuredDocumentation","src":"39747:24:15","text":"See `serializeJson`."},"functionSelector":"1e356e1a","implemented":false,"kind":"function","modifiers":[],"name":"serializeAddress","nameLocation":"39785:16:15","parameters":{"id":13622,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13616,"mutability":"mutable","name":"objectKey","nameLocation":"39818:9:15","nodeType":"VariableDeclaration","scope":13626,"src":"39802:25:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13615,"name":"string","nodeType":"ElementaryTypeName","src":"39802:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13618,"mutability":"mutable","name":"valueKey","nameLocation":"39845:8:15","nodeType":"VariableDeclaration","scope":13626,"src":"39829:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13617,"name":"string","nodeType":"ElementaryTypeName","src":"39829:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13621,"mutability":"mutable","name":"values","nameLocation":"39874:6:15","nodeType":"VariableDeclaration","scope":13626,"src":"39855:25:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":13619,"name":"address","nodeType":"ElementaryTypeName","src":"39855:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":13620,"nodeType":"ArrayTypeName","src":"39855:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"39801:80:15"},"returnParameters":{"id":13625,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13624,"mutability":"mutable","name":"json","nameLocation":"39930:4:15","nodeType":"VariableDeclaration","scope":13626,"src":"39916:18:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":13623,"name":"string","nodeType":"ElementaryTypeName","src":"39916:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"39915:20:15"},"scope":15595,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13638,"nodeType":"FunctionDefinition","src":"39971:142:15","nodes":[],"documentation":{"id":13627,"nodeType":"StructuredDocumentation","src":"39942:24:15","text":"See `serializeJson`."},"functionSelector":"ac22e971","implemented":false,"kind":"function","modifiers":[],"name":"serializeBool","nameLocation":"39980:13:15","parameters":{"id":13634,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13629,"mutability":"mutable","name":"objectKey","nameLocation":"40010:9:15","nodeType":"VariableDeclaration","scope":13638,"src":"39994:25:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13628,"name":"string","nodeType":"ElementaryTypeName","src":"39994:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13631,"mutability":"mutable","name":"valueKey","nameLocation":"40037:8:15","nodeType":"VariableDeclaration","scope":13638,"src":"40021:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13630,"name":"string","nodeType":"ElementaryTypeName","src":"40021:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13633,"mutability":"mutable","name":"value","nameLocation":"40052:5:15","nodeType":"VariableDeclaration","scope":13638,"src":"40047:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":13632,"name":"bool","nodeType":"ElementaryTypeName","src":"40047:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"39993:65:15"},"returnParameters":{"id":13637,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13636,"mutability":"mutable","name":"json","nameLocation":"40107:4:15","nodeType":"VariableDeclaration","scope":13638,"src":"40093:18:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":13635,"name":"string","nodeType":"ElementaryTypeName","src":"40093:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"40092:20:15"},"scope":15595,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13651,"nodeType":"FunctionDefinition","src":"40148:154:15","nodes":[],"documentation":{"id":13639,"nodeType":"StructuredDocumentation","src":"40119:24:15","text":"See `serializeJson`."},"functionSelector":"92925aa1","implemented":false,"kind":"function","modifiers":[],"name":"serializeBool","nameLocation":"40157:13:15","parameters":{"id":13647,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13641,"mutability":"mutable","name":"objectKey","nameLocation":"40187:9:15","nodeType":"VariableDeclaration","scope":13651,"src":"40171:25:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13640,"name":"string","nodeType":"ElementaryTypeName","src":"40171:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13643,"mutability":"mutable","name":"valueKey","nameLocation":"40214:8:15","nodeType":"VariableDeclaration","scope":13651,"src":"40198:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13642,"name":"string","nodeType":"ElementaryTypeName","src":"40198:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13646,"mutability":"mutable","name":"values","nameLocation":"40240:6:15","nodeType":"VariableDeclaration","scope":13651,"src":"40224:22:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":13644,"name":"bool","nodeType":"ElementaryTypeName","src":"40224:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":13645,"nodeType":"ArrayTypeName","src":"40224:6:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"src":"40170:77:15"},"returnParameters":{"id":13650,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13649,"mutability":"mutable","name":"json","nameLocation":"40296:4:15","nodeType":"VariableDeclaration","scope":13651,"src":"40282:18:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":13648,"name":"string","nodeType":"ElementaryTypeName","src":"40282:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"40281:20:15"},"scope":15595,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13663,"nodeType":"FunctionDefinition","src":"40337:148:15","nodes":[],"documentation":{"id":13652,"nodeType":"StructuredDocumentation","src":"40308:24:15","text":"See `serializeJson`."},"functionSelector":"2d812b44","implemented":false,"kind":"function","modifiers":[],"name":"serializeBytes32","nameLocation":"40346:16:15","parameters":{"id":13659,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13654,"mutability":"mutable","name":"objectKey","nameLocation":"40379:9:15","nodeType":"VariableDeclaration","scope":13663,"src":"40363:25:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13653,"name":"string","nodeType":"ElementaryTypeName","src":"40363:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13656,"mutability":"mutable","name":"valueKey","nameLocation":"40406:8:15","nodeType":"VariableDeclaration","scope":13663,"src":"40390:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13655,"name":"string","nodeType":"ElementaryTypeName","src":"40390:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13658,"mutability":"mutable","name":"value","nameLocation":"40424:5:15","nodeType":"VariableDeclaration","scope":13663,"src":"40416:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":13657,"name":"bytes32","nodeType":"ElementaryTypeName","src":"40416:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"40362:68:15"},"returnParameters":{"id":13662,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13661,"mutability":"mutable","name":"json","nameLocation":"40479:4:15","nodeType":"VariableDeclaration","scope":13663,"src":"40465:18:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":13660,"name":"string","nodeType":"ElementaryTypeName","src":"40465:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"40464:20:15"},"scope":15595,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13676,"nodeType":"FunctionDefinition","src":"40520:160:15","nodes":[],"documentation":{"id":13664,"nodeType":"StructuredDocumentation","src":"40491:24:15","text":"See `serializeJson`."},"functionSelector":"201e43e2","implemented":false,"kind":"function","modifiers":[],"name":"serializeBytes32","nameLocation":"40529:16:15","parameters":{"id":13672,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13666,"mutability":"mutable","name":"objectKey","nameLocation":"40562:9:15","nodeType":"VariableDeclaration","scope":13676,"src":"40546:25:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13665,"name":"string","nodeType":"ElementaryTypeName","src":"40546:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13668,"mutability":"mutable","name":"valueKey","nameLocation":"40589:8:15","nodeType":"VariableDeclaration","scope":13676,"src":"40573:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13667,"name":"string","nodeType":"ElementaryTypeName","src":"40573:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13671,"mutability":"mutable","name":"values","nameLocation":"40618:6:15","nodeType":"VariableDeclaration","scope":13676,"src":"40599:25:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":13669,"name":"bytes32","nodeType":"ElementaryTypeName","src":"40599:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":13670,"nodeType":"ArrayTypeName","src":"40599:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"40545:80:15"},"returnParameters":{"id":13675,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13674,"mutability":"mutable","name":"json","nameLocation":"40674:4:15","nodeType":"VariableDeclaration","scope":13676,"src":"40660:18:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":13673,"name":"string","nodeType":"ElementaryTypeName","src":"40660:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"40659:20:15"},"scope":15595,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13688,"nodeType":"FunctionDefinition","src":"40715:153:15","nodes":[],"documentation":{"id":13677,"nodeType":"StructuredDocumentation","src":"40686:24:15","text":"See `serializeJson`."},"functionSelector":"f21d52c7","implemented":false,"kind":"function","modifiers":[],"name":"serializeBytes","nameLocation":"40724:14:15","parameters":{"id":13684,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13679,"mutability":"mutable","name":"objectKey","nameLocation":"40755:9:15","nodeType":"VariableDeclaration","scope":13688,"src":"40739:25:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13678,"name":"string","nodeType":"ElementaryTypeName","src":"40739:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13681,"mutability":"mutable","name":"valueKey","nameLocation":"40782:8:15","nodeType":"VariableDeclaration","scope":13688,"src":"40766:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13680,"name":"string","nodeType":"ElementaryTypeName","src":"40766:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13683,"mutability":"mutable","name":"value","nameLocation":"40807:5:15","nodeType":"VariableDeclaration","scope":13688,"src":"40792:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":13682,"name":"bytes","nodeType":"ElementaryTypeName","src":"40792:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"40738:75:15"},"returnParameters":{"id":13687,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13686,"mutability":"mutable","name":"json","nameLocation":"40862:4:15","nodeType":"VariableDeclaration","scope":13688,"src":"40848:18:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":13685,"name":"string","nodeType":"ElementaryTypeName","src":"40848:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"40847:20:15"},"scope":15595,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13701,"nodeType":"FunctionDefinition","src":"40903:156:15","nodes":[],"documentation":{"id":13689,"nodeType":"StructuredDocumentation","src":"40874:24:15","text":"See `serializeJson`."},"functionSelector":"9884b232","implemented":false,"kind":"function","modifiers":[],"name":"serializeBytes","nameLocation":"40912:14:15","parameters":{"id":13697,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13691,"mutability":"mutable","name":"objectKey","nameLocation":"40943:9:15","nodeType":"VariableDeclaration","scope":13701,"src":"40927:25:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13690,"name":"string","nodeType":"ElementaryTypeName","src":"40927:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13693,"mutability":"mutable","name":"valueKey","nameLocation":"40970:8:15","nodeType":"VariableDeclaration","scope":13701,"src":"40954:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13692,"name":"string","nodeType":"ElementaryTypeName","src":"40954:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13696,"mutability":"mutable","name":"values","nameLocation":"40997:6:15","nodeType":"VariableDeclaration","scope":13701,"src":"40980:23:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":13694,"name":"bytes","nodeType":"ElementaryTypeName","src":"40980:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":13695,"nodeType":"ArrayTypeName","src":"40980:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"40926:78:15"},"returnParameters":{"id":13700,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13699,"mutability":"mutable","name":"json","nameLocation":"41053:4:15","nodeType":"VariableDeclaration","scope":13701,"src":"41039:18:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":13698,"name":"string","nodeType":"ElementaryTypeName","src":"41039:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"41038:20:15"},"scope":15595,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13713,"nodeType":"FunctionDefinition","src":"41094:143:15","nodes":[],"documentation":{"id":13702,"nodeType":"StructuredDocumentation","src":"41065:24:15","text":"See `serializeJson`."},"functionSelector":"3f33db60","implemented":false,"kind":"function","modifiers":[],"name":"serializeInt","nameLocation":"41103:12:15","parameters":{"id":13709,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13704,"mutability":"mutable","name":"objectKey","nameLocation":"41132:9:15","nodeType":"VariableDeclaration","scope":13713,"src":"41116:25:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13703,"name":"string","nodeType":"ElementaryTypeName","src":"41116:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13706,"mutability":"mutable","name":"valueKey","nameLocation":"41159:8:15","nodeType":"VariableDeclaration","scope":13713,"src":"41143:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13705,"name":"string","nodeType":"ElementaryTypeName","src":"41143:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13708,"mutability":"mutable","name":"value","nameLocation":"41176:5:15","nodeType":"VariableDeclaration","scope":13713,"src":"41169:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":13707,"name":"int256","nodeType":"ElementaryTypeName","src":"41169:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"41115:67:15"},"returnParameters":{"id":13712,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13711,"mutability":"mutable","name":"json","nameLocation":"41231:4:15","nodeType":"VariableDeclaration","scope":13713,"src":"41217:18:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":13710,"name":"string","nodeType":"ElementaryTypeName","src":"41217:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"41216:20:15"},"scope":15595,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13726,"nodeType":"FunctionDefinition","src":"41272:155:15","nodes":[],"documentation":{"id":13714,"nodeType":"StructuredDocumentation","src":"41243:24:15","text":"See `serializeJson`."},"functionSelector":"7676e127","implemented":false,"kind":"function","modifiers":[],"name":"serializeInt","nameLocation":"41281:12:15","parameters":{"id":13722,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13716,"mutability":"mutable","name":"objectKey","nameLocation":"41310:9:15","nodeType":"VariableDeclaration","scope":13726,"src":"41294:25:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13715,"name":"string","nodeType":"ElementaryTypeName","src":"41294:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13718,"mutability":"mutable","name":"valueKey","nameLocation":"41337:8:15","nodeType":"VariableDeclaration","scope":13726,"src":"41321:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13717,"name":"string","nodeType":"ElementaryTypeName","src":"41321:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13721,"mutability":"mutable","name":"values","nameLocation":"41365:6:15","nodeType":"VariableDeclaration","scope":13726,"src":"41347:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":13719,"name":"int256","nodeType":"ElementaryTypeName","src":"41347:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":13720,"nodeType":"ArrayTypeName","src":"41347:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"}],"src":"41293:79:15"},"returnParameters":{"id":13725,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13724,"mutability":"mutable","name":"json","nameLocation":"41421:4:15","nodeType":"VariableDeclaration","scope":13726,"src":"41407:18:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":13723,"name":"string","nodeType":"ElementaryTypeName","src":"41407:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"41406:20:15"},"scope":15595,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13736,"nodeType":"FunctionDefinition","src":"41624:111:15","nodes":[],"documentation":{"id":13727,"nodeType":"StructuredDocumentation","src":"41433:186:15","text":"Serializes a key and value to a JSON object stored in-memory that can be later written to a file.\n Returns the stringified version of the specific JSON file up to that moment."},"functionSelector":"9b3358b0","implemented":false,"kind":"function","modifiers":[],"name":"serializeJson","nameLocation":"41633:13:15","parameters":{"id":13732,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13729,"mutability":"mutable","name":"objectKey","nameLocation":"41663:9:15","nodeType":"VariableDeclaration","scope":13736,"src":"41647:25:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13728,"name":"string","nodeType":"ElementaryTypeName","src":"41647:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13731,"mutability":"mutable","name":"value","nameLocation":"41690:5:15","nodeType":"VariableDeclaration","scope":13736,"src":"41674:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13730,"name":"string","nodeType":"ElementaryTypeName","src":"41674:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"41646:50:15"},"returnParameters":{"id":13735,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13734,"mutability":"mutable","name":"json","nameLocation":"41729:4:15","nodeType":"VariableDeclaration","scope":13736,"src":"41715:18:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":13733,"name":"string","nodeType":"ElementaryTypeName","src":"41715:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"41714:20:15"},"scope":15595,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13746,"nodeType":"FunctionDefinition","src":"41770:149:15","nodes":[],"documentation":{"id":13737,"nodeType":"StructuredDocumentation","src":"41741:24:15","text":"See `serializeJson`."},"functionSelector":"6d4f96a6","implemented":false,"kind":"function","modifiers":[],"name":"serializeJsonType","nameLocation":"41779:17:15","parameters":{"id":13742,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13739,"mutability":"mutable","name":"typeDescription","nameLocation":"41813:15:15","nodeType":"VariableDeclaration","scope":13746,"src":"41797:31:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13738,"name":"string","nodeType":"ElementaryTypeName","src":"41797:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13741,"mutability":"mutable","name":"value","nameLocation":"41845:5:15","nodeType":"VariableDeclaration","scope":13746,"src":"41830:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":13740,"name":"bytes","nodeType":"ElementaryTypeName","src":"41830:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"41796:55:15"},"returnParameters":{"id":13745,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13744,"mutability":"mutable","name":"json","nameLocation":"41913:4:15","nodeType":"VariableDeclaration","scope":13746,"src":"41899:18:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":13743,"name":"string","nodeType":"ElementaryTypeName","src":"41899:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"41898:20:15"},"scope":15595,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13760,"nodeType":"FunctionDefinition","src":"41954:211:15","nodes":[],"documentation":{"id":13747,"nodeType":"StructuredDocumentation","src":"41925:24:15","text":"See `serializeJson`."},"functionSelector":"6f93bccb","implemented":false,"kind":"function","modifiers":[],"name":"serializeJsonType","nameLocation":"41963:17:15","parameters":{"id":13756,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13749,"mutability":"mutable","name":"objectKey","nameLocation":"42006:9:15","nodeType":"VariableDeclaration","scope":13760,"src":"41990:25:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13748,"name":"string","nodeType":"ElementaryTypeName","src":"41990:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13751,"mutability":"mutable","name":"valueKey","nameLocation":"42041:8:15","nodeType":"VariableDeclaration","scope":13760,"src":"42025:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13750,"name":"string","nodeType":"ElementaryTypeName","src":"42025:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13753,"mutability":"mutable","name":"typeDescription","nameLocation":"42075:15:15","nodeType":"VariableDeclaration","scope":13760,"src":"42059:31:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13752,"name":"string","nodeType":"ElementaryTypeName","src":"42059:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13755,"mutability":"mutable","name":"value","nameLocation":"42115:5:15","nodeType":"VariableDeclaration","scope":13760,"src":"42100:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":13754,"name":"bytes","nodeType":"ElementaryTypeName","src":"42100:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"41980:146:15"},"returnParameters":{"id":13759,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13758,"mutability":"mutable","name":"json","nameLocation":"42159:4:15","nodeType":"VariableDeclaration","scope":13760,"src":"42145:18:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":13757,"name":"string","nodeType":"ElementaryTypeName","src":"42145:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"42144:20:15"},"scope":15595,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13772,"nodeType":"FunctionDefinition","src":"42200:155:15","nodes":[],"documentation":{"id":13761,"nodeType":"StructuredDocumentation","src":"42171:24:15","text":"See `serializeJson`."},"functionSelector":"88da6d35","implemented":false,"kind":"function","modifiers":[],"name":"serializeString","nameLocation":"42209:15:15","parameters":{"id":13768,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13763,"mutability":"mutable","name":"objectKey","nameLocation":"42241:9:15","nodeType":"VariableDeclaration","scope":13772,"src":"42225:25:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13762,"name":"string","nodeType":"ElementaryTypeName","src":"42225:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13765,"mutability":"mutable","name":"valueKey","nameLocation":"42268:8:15","nodeType":"VariableDeclaration","scope":13772,"src":"42252:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13764,"name":"string","nodeType":"ElementaryTypeName","src":"42252:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13767,"mutability":"mutable","name":"value","nameLocation":"42294:5:15","nodeType":"VariableDeclaration","scope":13772,"src":"42278:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13766,"name":"string","nodeType":"ElementaryTypeName","src":"42278:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"42224:76:15"},"returnParameters":{"id":13771,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13770,"mutability":"mutable","name":"json","nameLocation":"42349:4:15","nodeType":"VariableDeclaration","scope":13772,"src":"42335:18:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":13769,"name":"string","nodeType":"ElementaryTypeName","src":"42335:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"42334:20:15"},"scope":15595,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13785,"nodeType":"FunctionDefinition","src":"42390:158:15","nodes":[],"documentation":{"id":13773,"nodeType":"StructuredDocumentation","src":"42361:24:15","text":"See `serializeJson`."},"functionSelector":"561cd6f3","implemented":false,"kind":"function","modifiers":[],"name":"serializeString","nameLocation":"42399:15:15","parameters":{"id":13781,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13775,"mutability":"mutable","name":"objectKey","nameLocation":"42431:9:15","nodeType":"VariableDeclaration","scope":13785,"src":"42415:25:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13774,"name":"string","nodeType":"ElementaryTypeName","src":"42415:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13777,"mutability":"mutable","name":"valueKey","nameLocation":"42458:8:15","nodeType":"VariableDeclaration","scope":13785,"src":"42442:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13776,"name":"string","nodeType":"ElementaryTypeName","src":"42442:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13780,"mutability":"mutable","name":"values","nameLocation":"42486:6:15","nodeType":"VariableDeclaration","scope":13785,"src":"42468:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":13778,"name":"string","nodeType":"ElementaryTypeName","src":"42468:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":13779,"nodeType":"ArrayTypeName","src":"42468:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"42414:79:15"},"returnParameters":{"id":13784,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13783,"mutability":"mutable","name":"json","nameLocation":"42542:4:15","nodeType":"VariableDeclaration","scope":13785,"src":"42528:18:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":13782,"name":"string","nodeType":"ElementaryTypeName","src":"42528:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"42527:20:15"},"scope":15595,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13797,"nodeType":"FunctionDefinition","src":"42583:150:15","nodes":[],"documentation":{"id":13786,"nodeType":"StructuredDocumentation","src":"42554:24:15","text":"See `serializeJson`."},"functionSelector":"ae5a2ae8","implemented":false,"kind":"function","modifiers":[],"name":"serializeUintToHex","nameLocation":"42592:18:15","parameters":{"id":13793,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13788,"mutability":"mutable","name":"objectKey","nameLocation":"42627:9:15","nodeType":"VariableDeclaration","scope":13797,"src":"42611:25:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13787,"name":"string","nodeType":"ElementaryTypeName","src":"42611:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13790,"mutability":"mutable","name":"valueKey","nameLocation":"42654:8:15","nodeType":"VariableDeclaration","scope":13797,"src":"42638:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13789,"name":"string","nodeType":"ElementaryTypeName","src":"42638:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13792,"mutability":"mutable","name":"value","nameLocation":"42672:5:15","nodeType":"VariableDeclaration","scope":13797,"src":"42664:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13791,"name":"uint256","nodeType":"ElementaryTypeName","src":"42664:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"42610:68:15"},"returnParameters":{"id":13796,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13795,"mutability":"mutable","name":"json","nameLocation":"42727:4:15","nodeType":"VariableDeclaration","scope":13797,"src":"42713:18:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":13794,"name":"string","nodeType":"ElementaryTypeName","src":"42713:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"42712:20:15"},"scope":15595,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13809,"nodeType":"FunctionDefinition","src":"42768:145:15","nodes":[],"documentation":{"id":13798,"nodeType":"StructuredDocumentation","src":"42739:24:15","text":"See `serializeJson`."},"functionSelector":"129e9002","implemented":false,"kind":"function","modifiers":[],"name":"serializeUint","nameLocation":"42777:13:15","parameters":{"id":13805,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13800,"mutability":"mutable","name":"objectKey","nameLocation":"42807:9:15","nodeType":"VariableDeclaration","scope":13809,"src":"42791:25:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13799,"name":"string","nodeType":"ElementaryTypeName","src":"42791:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13802,"mutability":"mutable","name":"valueKey","nameLocation":"42834:8:15","nodeType":"VariableDeclaration","scope":13809,"src":"42818:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13801,"name":"string","nodeType":"ElementaryTypeName","src":"42818:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13804,"mutability":"mutable","name":"value","nameLocation":"42852:5:15","nodeType":"VariableDeclaration","scope":13809,"src":"42844:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13803,"name":"uint256","nodeType":"ElementaryTypeName","src":"42844:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"42790:68:15"},"returnParameters":{"id":13808,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13807,"mutability":"mutable","name":"json","nameLocation":"42907:4:15","nodeType":"VariableDeclaration","scope":13809,"src":"42893:18:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":13806,"name":"string","nodeType":"ElementaryTypeName","src":"42893:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"42892:20:15"},"scope":15595,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13822,"nodeType":"FunctionDefinition","src":"42948:157:15","nodes":[],"documentation":{"id":13810,"nodeType":"StructuredDocumentation","src":"42919:24:15","text":"See `serializeJson`."},"functionSelector":"fee9a469","implemented":false,"kind":"function","modifiers":[],"name":"serializeUint","nameLocation":"42957:13:15","parameters":{"id":13818,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13812,"mutability":"mutable","name":"objectKey","nameLocation":"42987:9:15","nodeType":"VariableDeclaration","scope":13822,"src":"42971:25:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13811,"name":"string","nodeType":"ElementaryTypeName","src":"42971:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13814,"mutability":"mutable","name":"valueKey","nameLocation":"43014:8:15","nodeType":"VariableDeclaration","scope":13822,"src":"42998:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13813,"name":"string","nodeType":"ElementaryTypeName","src":"42998:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13817,"mutability":"mutable","name":"values","nameLocation":"43043:6:15","nodeType":"VariableDeclaration","scope":13822,"src":"43024:25:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":13815,"name":"uint256","nodeType":"ElementaryTypeName","src":"43024:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":13816,"nodeType":"ArrayTypeName","src":"43024:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"42970:80:15"},"returnParameters":{"id":13821,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13820,"mutability":"mutable","name":"json","nameLocation":"43099:4:15","nodeType":"VariableDeclaration","scope":13822,"src":"43085:18:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":13819,"name":"string","nodeType":"ElementaryTypeName","src":"43085:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"43084:20:15"},"scope":15595,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13830,"nodeType":"FunctionDefinition","src":"43205:72:15","nodes":[],"documentation":{"id":13823,"nodeType":"StructuredDocumentation","src":"43111:89:15","text":"Write a serialized JSON object to a file. If the file exists, it will be overwritten."},"functionSelector":"e23cd19f","implemented":false,"kind":"function","modifiers":[],"name":"writeJson","nameLocation":"43214:9:15","parameters":{"id":13828,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13825,"mutability":"mutable","name":"json","nameLocation":"43240:4:15","nodeType":"VariableDeclaration","scope":13830,"src":"43224:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13824,"name":"string","nodeType":"ElementaryTypeName","src":"43224:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13827,"mutability":"mutable","name":"path","nameLocation":"43262:4:15","nodeType":"VariableDeclaration","scope":13830,"src":"43246:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13826,"name":"string","nodeType":"ElementaryTypeName","src":"43246:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"43223:44:15"},"returnParameters":{"id":13829,"nodeType":"ParameterList","parameters":[],"src":"43276:0:15"},"scope":15595,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13840,"nodeType":"FunctionDefinition","src":"43503:98:15","nodes":[],"documentation":{"id":13831,"nodeType":"StructuredDocumentation","src":"43283:215:15","text":"Write a serialized JSON object to an **existing** JSON file, replacing a value with key = <value_key.>\n This is useful to replace a specific value of a JSON file, without having to parse the entire thing."},"functionSelector":"35d6ad46","implemented":false,"kind":"function","modifiers":[],"name":"writeJson","nameLocation":"43512:9:15","parameters":{"id":13838,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13833,"mutability":"mutable","name":"json","nameLocation":"43538:4:15","nodeType":"VariableDeclaration","scope":13840,"src":"43522:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13832,"name":"string","nodeType":"ElementaryTypeName","src":"43522:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13835,"mutability":"mutable","name":"path","nameLocation":"43560:4:15","nodeType":"VariableDeclaration","scope":13840,"src":"43544:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13834,"name":"string","nodeType":"ElementaryTypeName","src":"43544:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13837,"mutability":"mutable","name":"valueKey","nameLocation":"43582:8:15","nodeType":"VariableDeclaration","scope":13840,"src":"43566:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13836,"name":"string","nodeType":"ElementaryTypeName","src":"43566:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"43521:70:15"},"returnParameters":{"id":13839,"nodeType":"ParameterList","parameters":[],"src":"43600:0:15"},"scope":15595,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13846,"nodeType":"FunctionDefinition","src":"43712:63:15","nodes":[],"documentation":{"id":13841,"nodeType":"StructuredDocumentation","src":"43643:64:15","text":"Takes a signed transaction and broadcasts it to the network."},"functionSelector":"8c0c72e0","implemented":false,"kind":"function","modifiers":[],"name":"broadcastRawTransaction","nameLocation":"43721:23:15","parameters":{"id":13844,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13843,"mutability":"mutable","name":"data","nameLocation":"43760:4:15","nodeType":"VariableDeclaration","scope":13846,"src":"43745:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":13842,"name":"bytes","nodeType":"ElementaryTypeName","src":"43745:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"43744:21:15"},"returnParameters":{"id":13845,"nodeType":"ParameterList","parameters":[],"src":"43774:0:15"},"scope":15595,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13850,"nodeType":"FunctionDefinition","src":"44278:30:15","nodes":[],"documentation":{"id":13847,"nodeType":"StructuredDocumentation","src":"43781:492:15","text":"Has the next call (at this call depth only) create transactions that can later be signed and sent onchain.\n Broadcasting address is determined by checking the following in order:\n 1. If `--sender` argument was provided, that address is used.\n 2. If exactly one signer (e.g. private key, hw wallet, keystore) is set when `forge broadcast` is invoked, that signer is used.\n 3. Otherwise, default foundry sender (1804c8AB1F12E6bbf3894d4083f33e07309d1f38) is used."},"functionSelector":"afc98040","implemented":false,"kind":"function","modifiers":[],"name":"broadcast","nameLocation":"44287:9:15","parameters":{"id":13848,"nodeType":"ParameterList","parameters":[],"src":"44296:2:15"},"returnParameters":{"id":13849,"nodeType":"ParameterList","parameters":[],"src":"44307:0:15"},"scope":15595,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13856,"nodeType":"FunctionDefinition","src":"44478:44:15","nodes":[],"documentation":{"id":13851,"nodeType":"StructuredDocumentation","src":"44314:159:15","text":"Has the next call (at this call depth only) create a transaction with the address provided\n as the sender that can later be signed and sent onchain."},"functionSelector":"e6962cdb","implemented":false,"kind":"function","modifiers":[],"name":"broadcast","nameLocation":"44487:9:15","parameters":{"id":13854,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13853,"mutability":"mutable","name":"signer","nameLocation":"44505:6:15","nodeType":"VariableDeclaration","scope":13856,"src":"44497:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":13852,"name":"address","nodeType":"ElementaryTypeName","src":"44497:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"44496:16:15"},"returnParameters":{"id":13855,"nodeType":"ParameterList","parameters":[],"src":"44521:0:15"},"scope":15595,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13862,"nodeType":"FunctionDefinition","src":"44696:48:15","nodes":[],"documentation":{"id":13857,"nodeType":"StructuredDocumentation","src":"44528:163:15","text":"Has the next call (at this call depth only) create a transaction with the private key\n provided as the sender that can later be signed and sent onchain."},"functionSelector":"f67a965b","implemented":false,"kind":"function","modifiers":[],"name":"broadcast","nameLocation":"44705:9:15","parameters":{"id":13860,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13859,"mutability":"mutable","name":"privateKey","nameLocation":"44723:10:15","nodeType":"VariableDeclaration","scope":13862,"src":"44715:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13858,"name":"uint256","nodeType":"ElementaryTypeName","src":"44715:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"44714:20:15"},"returnParameters":{"id":13861,"nodeType":"ParameterList","parameters":[],"src":"44743:0:15"},"scope":15595,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13866,"nodeType":"FunctionDefinition","src":"45254:35:15","nodes":[],"documentation":{"id":13863,"nodeType":"StructuredDocumentation","src":"44750:499:15","text":"Has all subsequent calls (at this call depth only) create transactions that can later be signed and sent onchain.\n Broadcasting address is determined by checking the following in order:\n 1. If `--sender` argument was provided, that address is used.\n 2. If exactly one signer (e.g. private key, hw wallet, keystore) is set when `forge broadcast` is invoked, that signer is used.\n 3. Otherwise, default foundry sender (1804c8AB1F12E6bbf3894d4083f33e07309d1f38) is used."},"functionSelector":"7fb5297f","implemented":false,"kind":"function","modifiers":[],"name":"startBroadcast","nameLocation":"45263:14:15","parameters":{"id":13864,"nodeType":"ParameterList","parameters":[],"src":"45277:2:15"},"returnParameters":{"id":13865,"nodeType":"ParameterList","parameters":[],"src":"45288:0:15"},"scope":15595,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13872,"nodeType":"FunctionDefinition","src":"45451:49:15","nodes":[],"documentation":{"id":13867,"nodeType":"StructuredDocumentation","src":"45295:151:15","text":"Has all subsequent calls (at this call depth only) create transactions with the address\n provided that can later be signed and sent onchain."},"functionSelector":"7fec2a8d","implemented":false,"kind":"function","modifiers":[],"name":"startBroadcast","nameLocation":"45460:14:15","parameters":{"id":13870,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13869,"mutability":"mutable","name":"signer","nameLocation":"45483:6:15","nodeType":"VariableDeclaration","scope":13872,"src":"45475:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":13868,"name":"address","nodeType":"ElementaryTypeName","src":"45475:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"45474:16:15"},"returnParameters":{"id":13871,"nodeType":"ParameterList","parameters":[],"src":"45499:0:15"},"scope":15595,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13878,"nodeType":"FunctionDefinition","src":"45666:53:15","nodes":[],"documentation":{"id":13873,"nodeType":"StructuredDocumentation","src":"45506:155:15","text":"Has all subsequent calls (at this call depth only) create transactions with the private key\n provided that can later be signed and sent onchain."},"functionSelector":"ce817d47","implemented":false,"kind":"function","modifiers":[],"name":"startBroadcast","nameLocation":"45675:14:15","parameters":{"id":13876,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13875,"mutability":"mutable","name":"privateKey","nameLocation":"45698:10:15","nodeType":"VariableDeclaration","scope":13878,"src":"45690:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13874,"name":"uint256","nodeType":"ElementaryTypeName","src":"45690:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"45689:20:15"},"returnParameters":{"id":13877,"nodeType":"ParameterList","parameters":[],"src":"45718:0:15"},"scope":15595,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13882,"nodeType":"FunctionDefinition","src":"45772:34:15","nodes":[],"documentation":{"id":13879,"nodeType":"StructuredDocumentation","src":"45725:42:15","text":"Stops collecting onchain transactions."},"functionSelector":"76eadd36","implemented":false,"kind":"function","modifiers":[],"name":"stopBroadcast","nameLocation":"45781:13:15","parameters":{"id":13880,"nodeType":"ParameterList","parameters":[],"src":"45794:2:15"},"returnParameters":{"id":13881,"nodeType":"ParameterList","parameters":[],"src":"45805:0:15"},"scope":15595,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13892,"nodeType":"FunctionDefinition","src":"46055:93:15","nodes":[],"documentation":{"id":13883,"nodeType":"StructuredDocumentation","src":"45845:205:15","text":"Returns the index of the first occurrence of a `key` in an `input` string.\n Returns `NOT_FOUND` (i.e. `type(uint256).max`) if the `key` is not found.\n Returns 0 in case of an empty `key`."},"functionSelector":"8a0807b7","implemented":false,"kind":"function","modifiers":[],"name":"indexOf","nameLocation":"46064:7:15","parameters":{"id":13888,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13885,"mutability":"mutable","name":"input","nameLocation":"46088:5:15","nodeType":"VariableDeclaration","scope":13892,"src":"46072:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13884,"name":"string","nodeType":"ElementaryTypeName","src":"46072:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13887,"mutability":"mutable","name":"key","nameLocation":"46111:3:15","nodeType":"VariableDeclaration","scope":13892,"src":"46095:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13886,"name":"string","nodeType":"ElementaryTypeName","src":"46095:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"46071:44:15"},"returnParameters":{"id":13891,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13890,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":13892,"src":"46139:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13889,"name":"uint256","nodeType":"ElementaryTypeName","src":"46139:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"46138:9:15"},"scope":15595,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13900,"nodeType":"FunctionDefinition","src":"46207:100:15","nodes":[],"documentation":{"id":13893,"nodeType":"StructuredDocumentation","src":"46154:48:15","text":"Parses the given `string` into an `address`."},"functionSelector":"c6ce059d","implemented":false,"kind":"function","modifiers":[],"name":"parseAddress","nameLocation":"46216:12:15","parameters":{"id":13896,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13895,"mutability":"mutable","name":"stringifiedValue","nameLocation":"46245:16:15","nodeType":"VariableDeclaration","scope":13900,"src":"46229:32:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13894,"name":"string","nodeType":"ElementaryTypeName","src":"46229:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"46228:34:15"},"returnParameters":{"id":13899,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13898,"mutability":"mutable","name":"parsedValue","nameLocation":"46294:11:15","nodeType":"VariableDeclaration","scope":13900,"src":"46286:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":13897,"name":"address","nodeType":"ElementaryTypeName","src":"46286:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"46285:21:15"},"scope":15595,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13908,"nodeType":"FunctionDefinition","src":"46362:94:15","nodes":[],"documentation":{"id":13901,"nodeType":"StructuredDocumentation","src":"46313:44:15","text":"Parses the given `string` into a `bool`."},"functionSelector":"974ef924","implemented":false,"kind":"function","modifiers":[],"name":"parseBool","nameLocation":"46371:9:15","parameters":{"id":13904,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13903,"mutability":"mutable","name":"stringifiedValue","nameLocation":"46397:16:15","nodeType":"VariableDeclaration","scope":13908,"src":"46381:32:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13902,"name":"string","nodeType":"ElementaryTypeName","src":"46381:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"46380:34:15"},"returnParameters":{"id":13907,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13906,"mutability":"mutable","name":"parsedValue","nameLocation":"46443:11:15","nodeType":"VariableDeclaration","scope":13908,"src":"46438:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":13905,"name":"bool","nodeType":"ElementaryTypeName","src":"46438:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"46437:18:15"},"scope":15595,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13916,"nodeType":"FunctionDefinition","src":"46510:103:15","nodes":[],"documentation":{"id":13909,"nodeType":"StructuredDocumentation","src":"46462:43:15","text":"Parses the given `string` into `bytes`."},"functionSelector":"8f5d232d","implemented":false,"kind":"function","modifiers":[],"name":"parseBytes","nameLocation":"46519:10:15","parameters":{"id":13912,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13911,"mutability":"mutable","name":"stringifiedValue","nameLocation":"46546:16:15","nodeType":"VariableDeclaration","scope":13916,"src":"46530:32:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13910,"name":"string","nodeType":"ElementaryTypeName","src":"46530:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"46529:34:15"},"returnParameters":{"id":13915,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13914,"mutability":"mutable","name":"parsedValue","nameLocation":"46600:11:15","nodeType":"VariableDeclaration","scope":13916,"src":"46587:24:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":13913,"name":"bytes","nodeType":"ElementaryTypeName","src":"46587:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"46586:26:15"},"scope":15595,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13924,"nodeType":"FunctionDefinition","src":"46671:100:15","nodes":[],"documentation":{"id":13917,"nodeType":"StructuredDocumentation","src":"46619:47:15","text":"Parses the given `string` into a `bytes32`."},"functionSelector":"087e6e81","implemented":false,"kind":"function","modifiers":[],"name":"parseBytes32","nameLocation":"46680:12:15","parameters":{"id":13920,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13919,"mutability":"mutable","name":"stringifiedValue","nameLocation":"46709:16:15","nodeType":"VariableDeclaration","scope":13924,"src":"46693:32:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13918,"name":"string","nodeType":"ElementaryTypeName","src":"46693:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"46692:34:15"},"returnParameters":{"id":13923,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13922,"mutability":"mutable","name":"parsedValue","nameLocation":"46758:11:15","nodeType":"VariableDeclaration","scope":13924,"src":"46750:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":13921,"name":"bytes32","nodeType":"ElementaryTypeName","src":"46750:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"46749:21:15"},"scope":15595,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13932,"nodeType":"FunctionDefinition","src":"46828:95:15","nodes":[],"documentation":{"id":13925,"nodeType":"StructuredDocumentation","src":"46777:46:15","text":"Parses the given `string` into a `int256`."},"functionSelector":"42346c5e","implemented":false,"kind":"function","modifiers":[],"name":"parseInt","nameLocation":"46837:8:15","parameters":{"id":13928,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13927,"mutability":"mutable","name":"stringifiedValue","nameLocation":"46862:16:15","nodeType":"VariableDeclaration","scope":13932,"src":"46846:32:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13926,"name":"string","nodeType":"ElementaryTypeName","src":"46846:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"46845:34:15"},"returnParameters":{"id":13931,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13930,"mutability":"mutable","name":"parsedValue","nameLocation":"46910:11:15","nodeType":"VariableDeclaration","scope":13932,"src":"46903:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":13929,"name":"int256","nodeType":"ElementaryTypeName","src":"46903:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"46902:20:15"},"scope":15595,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13940,"nodeType":"FunctionDefinition","src":"46981:97:15","nodes":[],"documentation":{"id":13933,"nodeType":"StructuredDocumentation","src":"46929:47:15","text":"Parses the given `string` into a `uint256`."},"functionSelector":"fa91454d","implemented":false,"kind":"function","modifiers":[],"name":"parseUint","nameLocation":"46990:9:15","parameters":{"id":13936,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13935,"mutability":"mutable","name":"stringifiedValue","nameLocation":"47016:16:15","nodeType":"VariableDeclaration","scope":13940,"src":"47000:32:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13934,"name":"string","nodeType":"ElementaryTypeName","src":"47000:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"46999:34:15"},"returnParameters":{"id":13939,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13938,"mutability":"mutable","name":"parsedValue","nameLocation":"47065:11:15","nodeType":"VariableDeclaration","scope":13940,"src":"47057:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13937,"name":"uint256","nodeType":"ElementaryTypeName","src":"47057:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"47056:21:15"},"scope":15595,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13952,"nodeType":"FunctionDefinition","src":"47156:151:15","nodes":[],"documentation":{"id":13941,"nodeType":"StructuredDocumentation","src":"47084:67:15","text":"Replaces occurrences of `from` in the given `string` with `to`."},"functionSelector":"e00ad03e","implemented":false,"kind":"function","modifiers":[],"name":"replace","nameLocation":"47165:7:15","parameters":{"id":13948,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13943,"mutability":"mutable","name":"input","nameLocation":"47189:5:15","nodeType":"VariableDeclaration","scope":13952,"src":"47173:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13942,"name":"string","nodeType":"ElementaryTypeName","src":"47173:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13945,"mutability":"mutable","name":"from","nameLocation":"47212:4:15","nodeType":"VariableDeclaration","scope":13952,"src":"47196:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13944,"name":"string","nodeType":"ElementaryTypeName","src":"47196:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13947,"mutability":"mutable","name":"to","nameLocation":"47234:2:15","nodeType":"VariableDeclaration","scope":13952,"src":"47218:18:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13946,"name":"string","nodeType":"ElementaryTypeName","src":"47218:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"47172:65:15"},"returnParameters":{"id":13951,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13950,"mutability":"mutable","name":"output","nameLocation":"47299:6:15","nodeType":"VariableDeclaration","scope":13952,"src":"47285:20:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":13949,"name":"string","nodeType":"ElementaryTypeName","src":"47285:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"47284:22:15"},"scope":15595,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13963,"nodeType":"FunctionDefinition","src":"47400:113:15","nodes":[],"documentation":{"id":13953,"nodeType":"StructuredDocumentation","src":"47313:82:15","text":"Splits the given `string` into an array of strings divided by the `delimiter`."},"functionSelector":"8bb75533","implemented":false,"kind":"function","modifiers":[],"name":"split","nameLocation":"47409:5:15","parameters":{"id":13958,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13955,"mutability":"mutable","name":"input","nameLocation":"47431:5:15","nodeType":"VariableDeclaration","scope":13963,"src":"47415:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13954,"name":"string","nodeType":"ElementaryTypeName","src":"47415:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13957,"mutability":"mutable","name":"delimiter","nameLocation":"47454:9:15","nodeType":"VariableDeclaration","scope":13963,"src":"47438:25:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13956,"name":"string","nodeType":"ElementaryTypeName","src":"47438:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"47414:50:15"},"returnParameters":{"id":13962,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13961,"mutability":"mutable","name":"outputs","nameLocation":"47504:7:15","nodeType":"VariableDeclaration","scope":13963,"src":"47488:23:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":13959,"name":"string","nodeType":"ElementaryTypeName","src":"47488:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":13960,"nodeType":"ArrayTypeName","src":"47488:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"47487:25:15"},"scope":15595,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13971,"nodeType":"FunctionDefinition","src":"47575:89:15","nodes":[],"documentation":{"id":13964,"nodeType":"StructuredDocumentation","src":"47519:51:15","text":"Converts the given `string` value to Lowercase."},"functionSelector":"50bb0884","implemented":false,"kind":"function","modifiers":[],"name":"toLowercase","nameLocation":"47584:11:15","parameters":{"id":13967,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13966,"mutability":"mutable","name":"input","nameLocation":"47612:5:15","nodeType":"VariableDeclaration","scope":13971,"src":"47596:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13965,"name":"string","nodeType":"ElementaryTypeName","src":"47596:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"47595:23:15"},"returnParameters":{"id":13970,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13969,"mutability":"mutable","name":"output","nameLocation":"47656:6:15","nodeType":"VariableDeclaration","scope":13971,"src":"47642:20:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":13968,"name":"string","nodeType":"ElementaryTypeName","src":"47642:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"47641:22:15"},"scope":15595,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13979,"nodeType":"FunctionDefinition","src":"47718:88:15","nodes":[],"documentation":{"id":13972,"nodeType":"StructuredDocumentation","src":"47670:43:15","text":"Converts the given value to a `string`."},"functionSelector":"56ca623e","implemented":false,"kind":"function","modifiers":[],"name":"toString","nameLocation":"47727:8:15","parameters":{"id":13975,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13974,"mutability":"mutable","name":"value","nameLocation":"47744:5:15","nodeType":"VariableDeclaration","scope":13979,"src":"47736:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":13973,"name":"address","nodeType":"ElementaryTypeName","src":"47736:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"47735:15:15"},"returnParameters":{"id":13978,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13977,"mutability":"mutable","name":"stringifiedValue","nameLocation":"47788:16:15","nodeType":"VariableDeclaration","scope":13979,"src":"47774:30:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":13976,"name":"string","nodeType":"ElementaryTypeName","src":"47774:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"47773:32:15"},"scope":15595,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13987,"nodeType":"FunctionDefinition","src":"47860:95:15","nodes":[],"documentation":{"id":13980,"nodeType":"StructuredDocumentation","src":"47812:43:15","text":"Converts the given value to a `string`."},"functionSelector":"71aad10d","implemented":false,"kind":"function","modifiers":[],"name":"toString","nameLocation":"47869:8:15","parameters":{"id":13983,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13982,"mutability":"mutable","name":"value","nameLocation":"47893:5:15","nodeType":"VariableDeclaration","scope":13987,"src":"47878:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":13981,"name":"bytes","nodeType":"ElementaryTypeName","src":"47878:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"47877:22:15"},"returnParameters":{"id":13986,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13985,"mutability":"mutable","name":"stringifiedValue","nameLocation":"47937:16:15","nodeType":"VariableDeclaration","scope":13987,"src":"47923:30:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":13984,"name":"string","nodeType":"ElementaryTypeName","src":"47923:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"47922:32:15"},"scope":15595,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13995,"nodeType":"FunctionDefinition","src":"48009:88:15","nodes":[],"documentation":{"id":13988,"nodeType":"StructuredDocumentation","src":"47961:43:15","text":"Converts the given value to a `string`."},"functionSelector":"b11a19e8","implemented":false,"kind":"function","modifiers":[],"name":"toString","nameLocation":"48018:8:15","parameters":{"id":13991,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13990,"mutability":"mutable","name":"value","nameLocation":"48035:5:15","nodeType":"VariableDeclaration","scope":13995,"src":"48027:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":13989,"name":"bytes32","nodeType":"ElementaryTypeName","src":"48027:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"48026:15:15"},"returnParameters":{"id":13994,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13993,"mutability":"mutable","name":"stringifiedValue","nameLocation":"48079:16:15","nodeType":"VariableDeclaration","scope":13995,"src":"48065:30:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":13992,"name":"string","nodeType":"ElementaryTypeName","src":"48065:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"48064:32:15"},"scope":15595,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14003,"nodeType":"FunctionDefinition","src":"48151:85:15","nodes":[],"documentation":{"id":13996,"nodeType":"StructuredDocumentation","src":"48103:43:15","text":"Converts the given value to a `string`."},"functionSelector":"71dce7da","implemented":false,"kind":"function","modifiers":[],"name":"toString","nameLocation":"48160:8:15","parameters":{"id":13999,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13998,"mutability":"mutable","name":"value","nameLocation":"48174:5:15","nodeType":"VariableDeclaration","scope":14003,"src":"48169:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":13997,"name":"bool","nodeType":"ElementaryTypeName","src":"48169:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"48168:12:15"},"returnParameters":{"id":14002,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14001,"mutability":"mutable","name":"stringifiedValue","nameLocation":"48218:16:15","nodeType":"VariableDeclaration","scope":14003,"src":"48204:30:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":14000,"name":"string","nodeType":"ElementaryTypeName","src":"48204:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"48203:32:15"},"scope":15595,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14011,"nodeType":"FunctionDefinition","src":"48290:88:15","nodes":[],"documentation":{"id":14004,"nodeType":"StructuredDocumentation","src":"48242:43:15","text":"Converts the given value to a `string`."},"functionSelector":"6900a3ae","implemented":false,"kind":"function","modifiers":[],"name":"toString","nameLocation":"48299:8:15","parameters":{"id":14007,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14006,"mutability":"mutable","name":"value","nameLocation":"48316:5:15","nodeType":"VariableDeclaration","scope":14011,"src":"48308:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14005,"name":"uint256","nodeType":"ElementaryTypeName","src":"48308:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"48307:15:15"},"returnParameters":{"id":14010,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14009,"mutability":"mutable","name":"stringifiedValue","nameLocation":"48360:16:15","nodeType":"VariableDeclaration","scope":14011,"src":"48346:30:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":14008,"name":"string","nodeType":"ElementaryTypeName","src":"48346:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"48345:32:15"},"scope":15595,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14019,"nodeType":"FunctionDefinition","src":"48432:87:15","nodes":[],"documentation":{"id":14012,"nodeType":"StructuredDocumentation","src":"48384:43:15","text":"Converts the given value to a `string`."},"functionSelector":"a322c40e","implemented":false,"kind":"function","modifiers":[],"name":"toString","nameLocation":"48441:8:15","parameters":{"id":14015,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14014,"mutability":"mutable","name":"value","nameLocation":"48457:5:15","nodeType":"VariableDeclaration","scope":14019,"src":"48450:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14013,"name":"int256","nodeType":"ElementaryTypeName","src":"48450:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"48449:14:15"},"returnParameters":{"id":14018,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14017,"mutability":"mutable","name":"stringifiedValue","nameLocation":"48501:16:15","nodeType":"VariableDeclaration","scope":14019,"src":"48487:30:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":14016,"name":"string","nodeType":"ElementaryTypeName","src":"48487:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"48486:32:15"},"scope":15595,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14027,"nodeType":"FunctionDefinition","src":"48581:89:15","nodes":[],"documentation":{"id":14020,"nodeType":"StructuredDocumentation","src":"48525:51:15","text":"Converts the given `string` value to Uppercase."},"functionSelector":"074ae3d7","implemented":false,"kind":"function","modifiers":[],"name":"toUppercase","nameLocation":"48590:11:15","parameters":{"id":14023,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14022,"mutability":"mutable","name":"input","nameLocation":"48618:5:15","nodeType":"VariableDeclaration","scope":14027,"src":"48602:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14021,"name":"string","nodeType":"ElementaryTypeName","src":"48602:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"48601:23:15"},"returnParameters":{"id":14026,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14025,"mutability":"mutable","name":"output","nameLocation":"48662:6:15","nodeType":"VariableDeclaration","scope":14027,"src":"48648:20:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":14024,"name":"string","nodeType":"ElementaryTypeName","src":"48648:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"48647:22:15"},"scope":15595,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14035,"nodeType":"FunctionDefinition","src":"48753:82:15","nodes":[],"documentation":{"id":14028,"nodeType":"StructuredDocumentation","src":"48676:72:15","text":"Trims leading and trailing whitespace from the given `string` value."},"functionSelector":"b2dad155","implemented":false,"kind":"function","modifiers":[],"name":"trim","nameLocation":"48762:4:15","parameters":{"id":14031,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14030,"mutability":"mutable","name":"input","nameLocation":"48783:5:15","nodeType":"VariableDeclaration","scope":14035,"src":"48767:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14029,"name":"string","nodeType":"ElementaryTypeName","src":"48767:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"48766:23:15"},"returnParameters":{"id":14034,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14033,"mutability":"mutable","name":"output","nameLocation":"48827:6:15","nodeType":"VariableDeclaration","scope":14035,"src":"48813:20:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":14032,"name":"string","nodeType":"ElementaryTypeName","src":"48813:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"48812:22:15"},"scope":15595,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14047,"nodeType":"FunctionDefinition","src":"49030:113:15","nodes":[],"documentation":{"id":14036,"nodeType":"StructuredDocumentation","src":"48875:150:15","text":"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`.\n Formats values with decimals in failure message."},"functionSelector":"045c55ce","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqAbsDecimal","nameLocation":"49039:24:15","parameters":{"id":14045,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14038,"mutability":"mutable","name":"left","nameLocation":"49072:4:15","nodeType":"VariableDeclaration","scope":14047,"src":"49064:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14037,"name":"uint256","nodeType":"ElementaryTypeName","src":"49064:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14040,"mutability":"mutable","name":"right","nameLocation":"49086:5:15","nodeType":"VariableDeclaration","scope":14047,"src":"49078:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14039,"name":"uint256","nodeType":"ElementaryTypeName","src":"49078:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14042,"mutability":"mutable","name":"maxDelta","nameLocation":"49101:8:15","nodeType":"VariableDeclaration","scope":14047,"src":"49093:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14041,"name":"uint256","nodeType":"ElementaryTypeName","src":"49093:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14044,"mutability":"mutable","name":"decimals","nameLocation":"49119:8:15","nodeType":"VariableDeclaration","scope":14047,"src":"49111:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14043,"name":"uint256","nodeType":"ElementaryTypeName","src":"49111:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"49063:65:15"},"returnParameters":{"id":14046,"nodeType":"ParameterList","parameters":[],"src":"49142:0:15"},"scope":15595,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14061,"nodeType":"FunctionDefinition","src":"49358:182:15","nodes":[],"documentation":{"id":14048,"nodeType":"StructuredDocumentation","src":"49149:204:15","text":"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"60429eb2","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqAbsDecimal","nameLocation":"49367:24:15","parameters":{"id":14059,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14050,"mutability":"mutable","name":"left","nameLocation":"49409:4:15","nodeType":"VariableDeclaration","scope":14061,"src":"49401:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14049,"name":"uint256","nodeType":"ElementaryTypeName","src":"49401:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14052,"mutability":"mutable","name":"right","nameLocation":"49431:5:15","nodeType":"VariableDeclaration","scope":14061,"src":"49423:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14051,"name":"uint256","nodeType":"ElementaryTypeName","src":"49423:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14054,"mutability":"mutable","name":"maxDelta","nameLocation":"49454:8:15","nodeType":"VariableDeclaration","scope":14061,"src":"49446:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14053,"name":"uint256","nodeType":"ElementaryTypeName","src":"49446:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14056,"mutability":"mutable","name":"decimals","nameLocation":"49480:8:15","nodeType":"VariableDeclaration","scope":14061,"src":"49472:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14055,"name":"uint256","nodeType":"ElementaryTypeName","src":"49472:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14058,"mutability":"mutable","name":"error","nameLocation":"49514:5:15","nodeType":"VariableDeclaration","scope":14061,"src":"49498:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14057,"name":"string","nodeType":"ElementaryTypeName","src":"49498:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"49391:134:15"},"returnParameters":{"id":14060,"nodeType":"ParameterList","parameters":[],"src":"49539:0:15"},"scope":15595,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14073,"nodeType":"FunctionDefinition","src":"49700:111:15","nodes":[],"documentation":{"id":14062,"nodeType":"StructuredDocumentation","src":"49546:149:15","text":"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`.\n Formats values with decimals in failure message."},"functionSelector":"3d5bc8bc","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqAbsDecimal","nameLocation":"49709:24:15","parameters":{"id":14071,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14064,"mutability":"mutable","name":"left","nameLocation":"49741:4:15","nodeType":"VariableDeclaration","scope":14073,"src":"49734:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14063,"name":"int256","nodeType":"ElementaryTypeName","src":"49734:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14066,"mutability":"mutable","name":"right","nameLocation":"49754:5:15","nodeType":"VariableDeclaration","scope":14073,"src":"49747:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14065,"name":"int256","nodeType":"ElementaryTypeName","src":"49747:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14068,"mutability":"mutable","name":"maxDelta","nameLocation":"49769:8:15","nodeType":"VariableDeclaration","scope":14073,"src":"49761:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14067,"name":"uint256","nodeType":"ElementaryTypeName","src":"49761:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14070,"mutability":"mutable","name":"decimals","nameLocation":"49787:8:15","nodeType":"VariableDeclaration","scope":14073,"src":"49779:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14069,"name":"uint256","nodeType":"ElementaryTypeName","src":"49779:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"49733:63:15"},"returnParameters":{"id":14072,"nodeType":"ParameterList","parameters":[],"src":"49810:0:15"},"scope":15595,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14087,"nodeType":"FunctionDefinition","src":"50025:180:15","nodes":[],"documentation":{"id":14074,"nodeType":"StructuredDocumentation","src":"49817:203:15","text":"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"6a5066d4","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqAbsDecimal","nameLocation":"50034:24:15","parameters":{"id":14085,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14076,"mutability":"mutable","name":"left","nameLocation":"50075:4:15","nodeType":"VariableDeclaration","scope":14087,"src":"50068:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14075,"name":"int256","nodeType":"ElementaryTypeName","src":"50068:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14078,"mutability":"mutable","name":"right","nameLocation":"50096:5:15","nodeType":"VariableDeclaration","scope":14087,"src":"50089:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14077,"name":"int256","nodeType":"ElementaryTypeName","src":"50089:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14080,"mutability":"mutable","name":"maxDelta","nameLocation":"50119:8:15","nodeType":"VariableDeclaration","scope":14087,"src":"50111:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14079,"name":"uint256","nodeType":"ElementaryTypeName","src":"50111:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14082,"mutability":"mutable","name":"decimals","nameLocation":"50145:8:15","nodeType":"VariableDeclaration","scope":14087,"src":"50137:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14081,"name":"uint256","nodeType":"ElementaryTypeName","src":"50137:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14084,"mutability":"mutable","name":"error","nameLocation":"50179:5:15","nodeType":"VariableDeclaration","scope":14087,"src":"50163:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14083,"name":"string","nodeType":"ElementaryTypeName","src":"50163:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"50058:132:15"},"returnParameters":{"id":14086,"nodeType":"ParameterList","parameters":[],"src":"50204:0:15"},"scope":15595,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14097,"nodeType":"FunctionDefinition","src":"50309:88:15","nodes":[],"documentation":{"id":14088,"nodeType":"StructuredDocumentation","src":"50211:93:15","text":"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`."},"functionSelector":"16d207c6","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqAbs","nameLocation":"50318:17:15","parameters":{"id":14095,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14090,"mutability":"mutable","name":"left","nameLocation":"50344:4:15","nodeType":"VariableDeclaration","scope":14097,"src":"50336:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14089,"name":"uint256","nodeType":"ElementaryTypeName","src":"50336:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14092,"mutability":"mutable","name":"right","nameLocation":"50358:5:15","nodeType":"VariableDeclaration","scope":14097,"src":"50350:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14091,"name":"uint256","nodeType":"ElementaryTypeName","src":"50350:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14094,"mutability":"mutable","name":"maxDelta","nameLocation":"50373:8:15","nodeType":"VariableDeclaration","scope":14097,"src":"50365:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14093,"name":"uint256","nodeType":"ElementaryTypeName","src":"50365:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"50335:47:15"},"returnParameters":{"id":14096,"nodeType":"ParameterList","parameters":[],"src":"50396:0:15"},"scope":15595,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14109,"nodeType":"FunctionDefinition","src":"50563:111:15","nodes":[],"documentation":{"id":14098,"nodeType":"StructuredDocumentation","src":"50403:155:15","text":"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`.\n Includes error message into revert string on failure."},"functionSelector":"f710b062","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqAbs","nameLocation":"50572:17:15","parameters":{"id":14107,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14100,"mutability":"mutable","name":"left","nameLocation":"50598:4:15","nodeType":"VariableDeclaration","scope":14109,"src":"50590:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14099,"name":"uint256","nodeType":"ElementaryTypeName","src":"50590:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14102,"mutability":"mutable","name":"right","nameLocation":"50612:5:15","nodeType":"VariableDeclaration","scope":14109,"src":"50604:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14101,"name":"uint256","nodeType":"ElementaryTypeName","src":"50604:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14104,"mutability":"mutable","name":"maxDelta","nameLocation":"50627:8:15","nodeType":"VariableDeclaration","scope":14109,"src":"50619:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14103,"name":"uint256","nodeType":"ElementaryTypeName","src":"50619:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14106,"mutability":"mutable","name":"error","nameLocation":"50653:5:15","nodeType":"VariableDeclaration","scope":14109,"src":"50637:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14105,"name":"string","nodeType":"ElementaryTypeName","src":"50637:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"50589:70:15"},"returnParameters":{"id":14108,"nodeType":"ParameterList","parameters":[],"src":"50673:0:15"},"scope":15595,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14119,"nodeType":"FunctionDefinition","src":"50777:86:15","nodes":[],"documentation":{"id":14110,"nodeType":"StructuredDocumentation","src":"50680:92:15","text":"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`."},"functionSelector":"240f839d","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqAbs","nameLocation":"50786:17:15","parameters":{"id":14117,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14112,"mutability":"mutable","name":"left","nameLocation":"50811:4:15","nodeType":"VariableDeclaration","scope":14119,"src":"50804:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14111,"name":"int256","nodeType":"ElementaryTypeName","src":"50804:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14114,"mutability":"mutable","name":"right","nameLocation":"50824:5:15","nodeType":"VariableDeclaration","scope":14119,"src":"50817:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14113,"name":"int256","nodeType":"ElementaryTypeName","src":"50817:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14116,"mutability":"mutable","name":"maxDelta","nameLocation":"50839:8:15","nodeType":"VariableDeclaration","scope":14119,"src":"50831:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14115,"name":"uint256","nodeType":"ElementaryTypeName","src":"50831:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"50803:45:15"},"returnParameters":{"id":14118,"nodeType":"ParameterList","parameters":[],"src":"50862:0:15"},"scope":15595,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14131,"nodeType":"FunctionDefinition","src":"51028:109:15","nodes":[],"documentation":{"id":14120,"nodeType":"StructuredDocumentation","src":"50869:154:15","text":"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`.\n Includes error message into revert string on failure."},"functionSelector":"8289e621","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqAbs","nameLocation":"51037:17:15","parameters":{"id":14129,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14122,"mutability":"mutable","name":"left","nameLocation":"51062:4:15","nodeType":"VariableDeclaration","scope":14131,"src":"51055:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14121,"name":"int256","nodeType":"ElementaryTypeName","src":"51055:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14124,"mutability":"mutable","name":"right","nameLocation":"51075:5:15","nodeType":"VariableDeclaration","scope":14131,"src":"51068:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14123,"name":"int256","nodeType":"ElementaryTypeName","src":"51068:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14126,"mutability":"mutable","name":"maxDelta","nameLocation":"51090:8:15","nodeType":"VariableDeclaration","scope":14131,"src":"51082:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14125,"name":"uint256","nodeType":"ElementaryTypeName","src":"51082:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14128,"mutability":"mutable","name":"error","nameLocation":"51116:5:15","nodeType":"VariableDeclaration","scope":14131,"src":"51100:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14127,"name":"string","nodeType":"ElementaryTypeName","src":"51100:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"51054:68:15"},"returnParameters":{"id":14130,"nodeType":"ParameterList","parameters":[],"src":"51136:0:15"},"scope":15595,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14143,"nodeType":"FunctionDefinition","src":"51408:136:15","nodes":[],"documentation":{"id":14132,"nodeType":"StructuredDocumentation","src":"51143:260:15","text":"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`.\n `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%\n Formats values with decimals in failure message."},"functionSelector":"21ed2977","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqRelDecimal","nameLocation":"51417:24:15","parameters":{"id":14141,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14134,"mutability":"mutable","name":"left","nameLocation":"51450:4:15","nodeType":"VariableDeclaration","scope":14143,"src":"51442:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14133,"name":"uint256","nodeType":"ElementaryTypeName","src":"51442:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14136,"mutability":"mutable","name":"right","nameLocation":"51464:5:15","nodeType":"VariableDeclaration","scope":14143,"src":"51456:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14135,"name":"uint256","nodeType":"ElementaryTypeName","src":"51456:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14138,"mutability":"mutable","name":"maxPercentDelta","nameLocation":"51479:15:15","nodeType":"VariableDeclaration","scope":14143,"src":"51471:23:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14137,"name":"uint256","nodeType":"ElementaryTypeName","src":"51471:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14140,"mutability":"mutable","name":"decimals","nameLocation":"51504:8:15","nodeType":"VariableDeclaration","scope":14143,"src":"51496:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14139,"name":"uint256","nodeType":"ElementaryTypeName","src":"51496:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"51441:72:15"},"returnParameters":{"id":14142,"nodeType":"ParameterList","parameters":[],"src":"51543:0:15"},"scope":15595,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14157,"nodeType":"FunctionDefinition","src":"51869:189:15","nodes":[],"documentation":{"id":14144,"nodeType":"StructuredDocumentation","src":"51550:314:15","text":"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`.\n `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"82d6c8fd","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqRelDecimal","nameLocation":"51878:24:15","parameters":{"id":14155,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14146,"mutability":"mutable","name":"left","nameLocation":"51920:4:15","nodeType":"VariableDeclaration","scope":14157,"src":"51912:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14145,"name":"uint256","nodeType":"ElementaryTypeName","src":"51912:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14148,"mutability":"mutable","name":"right","nameLocation":"51942:5:15","nodeType":"VariableDeclaration","scope":14157,"src":"51934:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14147,"name":"uint256","nodeType":"ElementaryTypeName","src":"51934:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14150,"mutability":"mutable","name":"maxPercentDelta","nameLocation":"51965:15:15","nodeType":"VariableDeclaration","scope":14157,"src":"51957:23:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14149,"name":"uint256","nodeType":"ElementaryTypeName","src":"51957:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14152,"mutability":"mutable","name":"decimals","nameLocation":"51998:8:15","nodeType":"VariableDeclaration","scope":14157,"src":"51990:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14151,"name":"uint256","nodeType":"ElementaryTypeName","src":"51990:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14154,"mutability":"mutable","name":"error","nameLocation":"52032:5:15","nodeType":"VariableDeclaration","scope":14157,"src":"52016:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14153,"name":"string","nodeType":"ElementaryTypeName","src":"52016:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"51902:141:15"},"returnParameters":{"id":14156,"nodeType":"ParameterList","parameters":[],"src":"52057:0:15"},"scope":15595,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14169,"nodeType":"FunctionDefinition","src":"52328:134:15","nodes":[],"documentation":{"id":14158,"nodeType":"StructuredDocumentation","src":"52064:259:15","text":"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`.\n `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%\n Formats values with decimals in failure message."},"functionSelector":"abbf21cc","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqRelDecimal","nameLocation":"52337:24:15","parameters":{"id":14167,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14160,"mutability":"mutable","name":"left","nameLocation":"52369:4:15","nodeType":"VariableDeclaration","scope":14169,"src":"52362:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14159,"name":"int256","nodeType":"ElementaryTypeName","src":"52362:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14162,"mutability":"mutable","name":"right","nameLocation":"52382:5:15","nodeType":"VariableDeclaration","scope":14169,"src":"52375:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14161,"name":"int256","nodeType":"ElementaryTypeName","src":"52375:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14164,"mutability":"mutable","name":"maxPercentDelta","nameLocation":"52397:15:15","nodeType":"VariableDeclaration","scope":14169,"src":"52389:23:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14163,"name":"uint256","nodeType":"ElementaryTypeName","src":"52389:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14166,"mutability":"mutable","name":"decimals","nameLocation":"52422:8:15","nodeType":"VariableDeclaration","scope":14169,"src":"52414:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14165,"name":"uint256","nodeType":"ElementaryTypeName","src":"52414:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"52361:70:15"},"returnParameters":{"id":14168,"nodeType":"ParameterList","parameters":[],"src":"52461:0:15"},"scope":15595,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14183,"nodeType":"FunctionDefinition","src":"52786:187:15","nodes":[],"documentation":{"id":14170,"nodeType":"StructuredDocumentation","src":"52468:313:15","text":"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`.\n `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"fccc11c4","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqRelDecimal","nameLocation":"52795:24:15","parameters":{"id":14181,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14172,"mutability":"mutable","name":"left","nameLocation":"52836:4:15","nodeType":"VariableDeclaration","scope":14183,"src":"52829:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14171,"name":"int256","nodeType":"ElementaryTypeName","src":"52829:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14174,"mutability":"mutable","name":"right","nameLocation":"52857:5:15","nodeType":"VariableDeclaration","scope":14183,"src":"52850:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14173,"name":"int256","nodeType":"ElementaryTypeName","src":"52850:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14176,"mutability":"mutable","name":"maxPercentDelta","nameLocation":"52880:15:15","nodeType":"VariableDeclaration","scope":14183,"src":"52872:23:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14175,"name":"uint256","nodeType":"ElementaryTypeName","src":"52872:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14178,"mutability":"mutable","name":"decimals","nameLocation":"52913:8:15","nodeType":"VariableDeclaration","scope":14183,"src":"52905:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14177,"name":"uint256","nodeType":"ElementaryTypeName","src":"52905:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14180,"mutability":"mutable","name":"error","nameLocation":"52947:5:15","nodeType":"VariableDeclaration","scope":14183,"src":"52931:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14179,"name":"string","nodeType":"ElementaryTypeName","src":"52931:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"52819:139:15"},"returnParameters":{"id":14182,"nodeType":"ParameterList","parameters":[],"src":"52972:0:15"},"scope":15595,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14193,"nodeType":"FunctionDefinition","src":"53187:95:15","nodes":[],"documentation":{"id":14184,"nodeType":"StructuredDocumentation","src":"52979:203:15","text":"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`.\n `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%"},"functionSelector":"8cf25ef4","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqRel","nameLocation":"53196:17:15","parameters":{"id":14191,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14186,"mutability":"mutable","name":"left","nameLocation":"53222:4:15","nodeType":"VariableDeclaration","scope":14193,"src":"53214:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14185,"name":"uint256","nodeType":"ElementaryTypeName","src":"53214:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14188,"mutability":"mutable","name":"right","nameLocation":"53236:5:15","nodeType":"VariableDeclaration","scope":14193,"src":"53228:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14187,"name":"uint256","nodeType":"ElementaryTypeName","src":"53228:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14190,"mutability":"mutable","name":"maxPercentDelta","nameLocation":"53251:15:15","nodeType":"VariableDeclaration","scope":14193,"src":"53243:23:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14189,"name":"uint256","nodeType":"ElementaryTypeName","src":"53243:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"53213:54:15"},"returnParameters":{"id":14192,"nodeType":"ParameterList","parameters":[],"src":"53281:0:15"},"scope":15595,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14205,"nodeType":"FunctionDefinition","src":"53558:134:15","nodes":[],"documentation":{"id":14194,"nodeType":"StructuredDocumentation","src":"53288:265:15","text":"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`.\n `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%\n Includes error message into revert string on failure."},"functionSelector":"1ecb7d33","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqRel","nameLocation":"53567:17:15","parameters":{"id":14203,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14196,"mutability":"mutable","name":"left","nameLocation":"53593:4:15","nodeType":"VariableDeclaration","scope":14205,"src":"53585:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14195,"name":"uint256","nodeType":"ElementaryTypeName","src":"53585:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14198,"mutability":"mutable","name":"right","nameLocation":"53607:5:15","nodeType":"VariableDeclaration","scope":14205,"src":"53599:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14197,"name":"uint256","nodeType":"ElementaryTypeName","src":"53599:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14200,"mutability":"mutable","name":"maxPercentDelta","nameLocation":"53622:15:15","nodeType":"VariableDeclaration","scope":14205,"src":"53614:23:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14199,"name":"uint256","nodeType":"ElementaryTypeName","src":"53614:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14202,"mutability":"mutable","name":"error","nameLocation":"53655:5:15","nodeType":"VariableDeclaration","scope":14205,"src":"53639:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14201,"name":"string","nodeType":"ElementaryTypeName","src":"53639:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"53584:77:15"},"returnParameters":{"id":14204,"nodeType":"ParameterList","parameters":[],"src":"53691:0:15"},"scope":15595,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14215,"nodeType":"FunctionDefinition","src":"53905:93:15","nodes":[],"documentation":{"id":14206,"nodeType":"StructuredDocumentation","src":"53698:202:15","text":"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`.\n `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%"},"functionSelector":"fea2d14f","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqRel","nameLocation":"53914:17:15","parameters":{"id":14213,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14208,"mutability":"mutable","name":"left","nameLocation":"53939:4:15","nodeType":"VariableDeclaration","scope":14215,"src":"53932:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14207,"name":"int256","nodeType":"ElementaryTypeName","src":"53932:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14210,"mutability":"mutable","name":"right","nameLocation":"53952:5:15","nodeType":"VariableDeclaration","scope":14215,"src":"53945:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14209,"name":"int256","nodeType":"ElementaryTypeName","src":"53945:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14212,"mutability":"mutable","name":"maxPercentDelta","nameLocation":"53967:15:15","nodeType":"VariableDeclaration","scope":14215,"src":"53959:23:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14211,"name":"uint256","nodeType":"ElementaryTypeName","src":"53959:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"53931:52:15"},"returnParameters":{"id":14214,"nodeType":"ParameterList","parameters":[],"src":"53997:0:15"},"scope":15595,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14227,"nodeType":"FunctionDefinition","src":"54273:132:15","nodes":[],"documentation":{"id":14216,"nodeType":"StructuredDocumentation","src":"54004:264:15","text":"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`.\n `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%\n Includes error message into revert string on failure."},"functionSelector":"ef277d72","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqRel","nameLocation":"54282:17:15","parameters":{"id":14225,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14218,"mutability":"mutable","name":"left","nameLocation":"54307:4:15","nodeType":"VariableDeclaration","scope":14227,"src":"54300:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14217,"name":"int256","nodeType":"ElementaryTypeName","src":"54300:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14220,"mutability":"mutable","name":"right","nameLocation":"54320:5:15","nodeType":"VariableDeclaration","scope":14227,"src":"54313:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14219,"name":"int256","nodeType":"ElementaryTypeName","src":"54313:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14222,"mutability":"mutable","name":"maxPercentDelta","nameLocation":"54335:15:15","nodeType":"VariableDeclaration","scope":14227,"src":"54327:23:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14221,"name":"uint256","nodeType":"ElementaryTypeName","src":"54327:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14224,"mutability":"mutable","name":"error","nameLocation":"54368:5:15","nodeType":"VariableDeclaration","scope":14227,"src":"54352:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14223,"name":"string","nodeType":"ElementaryTypeName","src":"54352:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"54299:75:15"},"returnParameters":{"id":14226,"nodeType":"ParameterList","parameters":[],"src":"54404:0:15"},"scope":15595,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14237,"nodeType":"FunctionDefinition","src":"54514:86:15","nodes":[],"documentation":{"id":14228,"nodeType":"StructuredDocumentation","src":"54411:98:15","text":"Asserts that two `uint256` values are equal, formatting them with decimals in failure message."},"functionSelector":"27af7d9c","implemented":false,"kind":"function","modifiers":[],"name":"assertEqDecimal","nameLocation":"54523:15:15","parameters":{"id":14235,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14230,"mutability":"mutable","name":"left","nameLocation":"54547:4:15","nodeType":"VariableDeclaration","scope":14237,"src":"54539:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14229,"name":"uint256","nodeType":"ElementaryTypeName","src":"54539:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14232,"mutability":"mutable","name":"right","nameLocation":"54561:5:15","nodeType":"VariableDeclaration","scope":14237,"src":"54553:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14231,"name":"uint256","nodeType":"ElementaryTypeName","src":"54553:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14234,"mutability":"mutable","name":"decimals","nameLocation":"54576:8:15","nodeType":"VariableDeclaration","scope":14237,"src":"54568:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14233,"name":"uint256","nodeType":"ElementaryTypeName","src":"54568:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"54538:47:15"},"returnParameters":{"id":14236,"nodeType":"ParameterList","parameters":[],"src":"54599:0:15"},"scope":15595,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14249,"nodeType":"FunctionDefinition","src":"54771:109:15","nodes":[],"documentation":{"id":14238,"nodeType":"StructuredDocumentation","src":"54606:160:15","text":"Asserts that two `uint256` values are equal, formatting them with decimals in failure message.\n Includes error message into revert string on failure."},"functionSelector":"d0cbbdef","implemented":false,"kind":"function","modifiers":[],"name":"assertEqDecimal","nameLocation":"54780:15:15","parameters":{"id":14247,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14240,"mutability":"mutable","name":"left","nameLocation":"54804:4:15","nodeType":"VariableDeclaration","scope":14249,"src":"54796:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14239,"name":"uint256","nodeType":"ElementaryTypeName","src":"54796:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14242,"mutability":"mutable","name":"right","nameLocation":"54818:5:15","nodeType":"VariableDeclaration","scope":14249,"src":"54810:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14241,"name":"uint256","nodeType":"ElementaryTypeName","src":"54810:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14244,"mutability":"mutable","name":"decimals","nameLocation":"54833:8:15","nodeType":"VariableDeclaration","scope":14249,"src":"54825:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14243,"name":"uint256","nodeType":"ElementaryTypeName","src":"54825:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14246,"mutability":"mutable","name":"error","nameLocation":"54859:5:15","nodeType":"VariableDeclaration","scope":14249,"src":"54843:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14245,"name":"string","nodeType":"ElementaryTypeName","src":"54843:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"54795:70:15"},"returnParameters":{"id":14248,"nodeType":"ParameterList","parameters":[],"src":"54879:0:15"},"scope":15595,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14259,"nodeType":"FunctionDefinition","src":"54988:84:15","nodes":[],"documentation":{"id":14250,"nodeType":"StructuredDocumentation","src":"54886:97:15","text":"Asserts that two `int256` values are equal, formatting them with decimals in failure message."},"functionSelector":"48016c04","implemented":false,"kind":"function","modifiers":[],"name":"assertEqDecimal","nameLocation":"54997:15:15","parameters":{"id":14257,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14252,"mutability":"mutable","name":"left","nameLocation":"55020:4:15","nodeType":"VariableDeclaration","scope":14259,"src":"55013:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14251,"name":"int256","nodeType":"ElementaryTypeName","src":"55013:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14254,"mutability":"mutable","name":"right","nameLocation":"55033:5:15","nodeType":"VariableDeclaration","scope":14259,"src":"55026:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14253,"name":"int256","nodeType":"ElementaryTypeName","src":"55026:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14256,"mutability":"mutable","name":"decimals","nameLocation":"55048:8:15","nodeType":"VariableDeclaration","scope":14259,"src":"55040:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14255,"name":"uint256","nodeType":"ElementaryTypeName","src":"55040:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"55012:45:15"},"returnParameters":{"id":14258,"nodeType":"ParameterList","parameters":[],"src":"55071:0:15"},"scope":15595,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14271,"nodeType":"FunctionDefinition","src":"55242:107:15","nodes":[],"documentation":{"id":14260,"nodeType":"StructuredDocumentation","src":"55078:159:15","text":"Asserts that two `int256` values are equal, formatting them with decimals in failure message.\n Includes error message into revert string on failure."},"functionSelector":"7e77b0c5","implemented":false,"kind":"function","modifiers":[],"name":"assertEqDecimal","nameLocation":"55251:15:15","parameters":{"id":14269,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14262,"mutability":"mutable","name":"left","nameLocation":"55274:4:15","nodeType":"VariableDeclaration","scope":14271,"src":"55267:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14261,"name":"int256","nodeType":"ElementaryTypeName","src":"55267:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14264,"mutability":"mutable","name":"right","nameLocation":"55287:5:15","nodeType":"VariableDeclaration","scope":14271,"src":"55280:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14263,"name":"int256","nodeType":"ElementaryTypeName","src":"55280:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14266,"mutability":"mutable","name":"decimals","nameLocation":"55302:8:15","nodeType":"VariableDeclaration","scope":14271,"src":"55294:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14265,"name":"uint256","nodeType":"ElementaryTypeName","src":"55294:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14268,"mutability":"mutable","name":"error","nameLocation":"55328:5:15","nodeType":"VariableDeclaration","scope":14271,"src":"55312:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14267,"name":"string","nodeType":"ElementaryTypeName","src":"55312:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"55266:68:15"},"returnParameters":{"id":14270,"nodeType":"ParameterList","parameters":[],"src":"55348:0:15"},"scope":15595,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14279,"nodeType":"FunctionDefinition","src":"55405:55:15","nodes":[],"documentation":{"id":14272,"nodeType":"StructuredDocumentation","src":"55355:45:15","text":"Asserts that two `bool` values are equal."},"functionSelector":"f7fe3477","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"55414:8:15","parameters":{"id":14277,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14274,"mutability":"mutable","name":"left","nameLocation":"55428:4:15","nodeType":"VariableDeclaration","scope":14279,"src":"55423:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":14273,"name":"bool","nodeType":"ElementaryTypeName","src":"55423:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":14276,"mutability":"mutable","name":"right","nameLocation":"55439:5:15","nodeType":"VariableDeclaration","scope":14279,"src":"55434:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":14275,"name":"bool","nodeType":"ElementaryTypeName","src":"55434:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"55422:23:15"},"returnParameters":{"id":14278,"nodeType":"ParameterList","parameters":[],"src":"55459:0:15"},"scope":15595,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14289,"nodeType":"FunctionDefinition","src":"55573:78:15","nodes":[],"documentation":{"id":14280,"nodeType":"StructuredDocumentation","src":"55466:102:15","text":"Asserts that two `bool` values are equal and includes error message into revert string on failure."},"functionSelector":"4db19e7e","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"55582:8:15","parameters":{"id":14287,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14282,"mutability":"mutable","name":"left","nameLocation":"55596:4:15","nodeType":"VariableDeclaration","scope":14289,"src":"55591:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":14281,"name":"bool","nodeType":"ElementaryTypeName","src":"55591:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":14284,"mutability":"mutable","name":"right","nameLocation":"55607:5:15","nodeType":"VariableDeclaration","scope":14289,"src":"55602:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":14283,"name":"bool","nodeType":"ElementaryTypeName","src":"55602:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":14286,"mutability":"mutable","name":"error","nameLocation":"55630:5:15","nodeType":"VariableDeclaration","scope":14289,"src":"55614:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14285,"name":"string","nodeType":"ElementaryTypeName","src":"55614:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"55590:46:15"},"returnParameters":{"id":14288,"nodeType":"ParameterList","parameters":[],"src":"55650:0:15"},"scope":15595,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14297,"nodeType":"FunctionDefinition","src":"55709:77:15","nodes":[],"documentation":{"id":14290,"nodeType":"StructuredDocumentation","src":"55657:47:15","text":"Asserts that two `string` values are equal."},"functionSelector":"f320d963","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"55718:8:15","parameters":{"id":14295,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14292,"mutability":"mutable","name":"left","nameLocation":"55743:4:15","nodeType":"VariableDeclaration","scope":14297,"src":"55727:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14291,"name":"string","nodeType":"ElementaryTypeName","src":"55727:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14294,"mutability":"mutable","name":"right","nameLocation":"55765:5:15","nodeType":"VariableDeclaration","scope":14297,"src":"55749:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14293,"name":"string","nodeType":"ElementaryTypeName","src":"55749:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"55726:45:15"},"returnParameters":{"id":14296,"nodeType":"ParameterList","parameters":[],"src":"55785:0:15"},"scope":15595,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14307,"nodeType":"FunctionDefinition","src":"55901:100:15","nodes":[],"documentation":{"id":14298,"nodeType":"StructuredDocumentation","src":"55792:104:15","text":"Asserts that two `string` values are equal and includes error message into revert string on failure."},"functionSelector":"36f656d8","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"55910:8:15","parameters":{"id":14305,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14300,"mutability":"mutable","name":"left","nameLocation":"55935:4:15","nodeType":"VariableDeclaration","scope":14307,"src":"55919:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14299,"name":"string","nodeType":"ElementaryTypeName","src":"55919:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14302,"mutability":"mutable","name":"right","nameLocation":"55957:5:15","nodeType":"VariableDeclaration","scope":14307,"src":"55941:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14301,"name":"string","nodeType":"ElementaryTypeName","src":"55941:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14304,"mutability":"mutable","name":"error","nameLocation":"55980:5:15","nodeType":"VariableDeclaration","scope":14307,"src":"55964:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14303,"name":"string","nodeType":"ElementaryTypeName","src":"55964:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"55918:68:15"},"returnParameters":{"id":14306,"nodeType":"ParameterList","parameters":[],"src":"56000:0:15"},"scope":15595,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14315,"nodeType":"FunctionDefinition","src":"56058:75:15","nodes":[],"documentation":{"id":14308,"nodeType":"StructuredDocumentation","src":"56007:46:15","text":"Asserts that two `bytes` values are equal."},"functionSelector":"97624631","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"56067:8:15","parameters":{"id":14313,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14310,"mutability":"mutable","name":"left","nameLocation":"56091:4:15","nodeType":"VariableDeclaration","scope":14315,"src":"56076:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":14309,"name":"bytes","nodeType":"ElementaryTypeName","src":"56076:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":14312,"mutability":"mutable","name":"right","nameLocation":"56112:5:15","nodeType":"VariableDeclaration","scope":14315,"src":"56097:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":14311,"name":"bytes","nodeType":"ElementaryTypeName","src":"56097:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"56075:43:15"},"returnParameters":{"id":14314,"nodeType":"ParameterList","parameters":[],"src":"56132:0:15"},"scope":15595,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14325,"nodeType":"FunctionDefinition","src":"56247:98:15","nodes":[],"documentation":{"id":14316,"nodeType":"StructuredDocumentation","src":"56139:103:15","text":"Asserts that two `bytes` values are equal and includes error message into revert string on failure."},"functionSelector":"e24fed00","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"56256:8:15","parameters":{"id":14323,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14318,"mutability":"mutable","name":"left","nameLocation":"56280:4:15","nodeType":"VariableDeclaration","scope":14325,"src":"56265:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":14317,"name":"bytes","nodeType":"ElementaryTypeName","src":"56265:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":14320,"mutability":"mutable","name":"right","nameLocation":"56301:5:15","nodeType":"VariableDeclaration","scope":14325,"src":"56286:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":14319,"name":"bytes","nodeType":"ElementaryTypeName","src":"56286:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":14322,"mutability":"mutable","name":"error","nameLocation":"56324:5:15","nodeType":"VariableDeclaration","scope":14325,"src":"56308:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14321,"name":"string","nodeType":"ElementaryTypeName","src":"56308:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"56264:66:15"},"returnParameters":{"id":14324,"nodeType":"ParameterList","parameters":[],"src":"56344:0:15"},"scope":15595,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14335,"nodeType":"FunctionDefinition","src":"56411:77:15","nodes":[],"documentation":{"id":14326,"nodeType":"StructuredDocumentation","src":"56351:55:15","text":"Asserts that two arrays of `bool` values are equal."},"functionSelector":"707df785","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"56420:8:15","parameters":{"id":14333,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14329,"mutability":"mutable","name":"left","nameLocation":"56445:4:15","nodeType":"VariableDeclaration","scope":14335,"src":"56429:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":14327,"name":"bool","nodeType":"ElementaryTypeName","src":"56429:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":14328,"nodeType":"ArrayTypeName","src":"56429:6:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":14332,"mutability":"mutable","name":"right","nameLocation":"56467:5:15","nodeType":"VariableDeclaration","scope":14335,"src":"56451:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":14330,"name":"bool","nodeType":"ElementaryTypeName","src":"56451:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":14331,"nodeType":"ArrayTypeName","src":"56451:6:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"src":"56428:45:15"},"returnParameters":{"id":14334,"nodeType":"ParameterList","parameters":[],"src":"56487:0:15"},"scope":15595,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14347,"nodeType":"FunctionDefinition","src":"56611:100:15","nodes":[],"documentation":{"id":14336,"nodeType":"StructuredDocumentation","src":"56494:112:15","text":"Asserts that two arrays of `bool` values are equal and includes error message into revert string on failure."},"functionSelector":"e48a8f8d","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"56620:8:15","parameters":{"id":14345,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14339,"mutability":"mutable","name":"left","nameLocation":"56645:4:15","nodeType":"VariableDeclaration","scope":14347,"src":"56629:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":14337,"name":"bool","nodeType":"ElementaryTypeName","src":"56629:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":14338,"nodeType":"ArrayTypeName","src":"56629:6:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":14342,"mutability":"mutable","name":"right","nameLocation":"56667:5:15","nodeType":"VariableDeclaration","scope":14347,"src":"56651:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":14340,"name":"bool","nodeType":"ElementaryTypeName","src":"56651:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":14341,"nodeType":"ArrayTypeName","src":"56651:6:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":14344,"mutability":"mutable","name":"error","nameLocation":"56690:5:15","nodeType":"VariableDeclaration","scope":14347,"src":"56674:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14343,"name":"string","nodeType":"ElementaryTypeName","src":"56674:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"56628:68:15"},"returnParameters":{"id":14346,"nodeType":"ParameterList","parameters":[],"src":"56710:0:15"},"scope":15595,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14357,"nodeType":"FunctionDefinition","src":"56779:83:15","nodes":[],"documentation":{"id":14348,"nodeType":"StructuredDocumentation","src":"56717:57:15","text":"Asserts that two arrays of `uint256 values are equal."},"functionSelector":"975d5a12","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"56788:8:15","parameters":{"id":14355,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14351,"mutability":"mutable","name":"left","nameLocation":"56816:4:15","nodeType":"VariableDeclaration","scope":14357,"src":"56797:23:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":14349,"name":"uint256","nodeType":"ElementaryTypeName","src":"56797:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":14350,"nodeType":"ArrayTypeName","src":"56797:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":14354,"mutability":"mutable","name":"right","nameLocation":"56841:5:15","nodeType":"VariableDeclaration","scope":14357,"src":"56822:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":14352,"name":"uint256","nodeType":"ElementaryTypeName","src":"56822:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":14353,"nodeType":"ArrayTypeName","src":"56822:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"56796:51:15"},"returnParameters":{"id":14356,"nodeType":"ParameterList","parameters":[],"src":"56861:0:15"},"scope":15595,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14369,"nodeType":"FunctionDefinition","src":"56988:106:15","nodes":[],"documentation":{"id":14358,"nodeType":"StructuredDocumentation","src":"56868:115:15","text":"Asserts that two arrays of `uint256` values are equal and includes error message into revert string on failure."},"functionSelector":"5d18c73a","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"56997:8:15","parameters":{"id":14367,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14361,"mutability":"mutable","name":"left","nameLocation":"57025:4:15","nodeType":"VariableDeclaration","scope":14369,"src":"57006:23:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":14359,"name":"uint256","nodeType":"ElementaryTypeName","src":"57006:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":14360,"nodeType":"ArrayTypeName","src":"57006:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":14364,"mutability":"mutable","name":"right","nameLocation":"57050:5:15","nodeType":"VariableDeclaration","scope":14369,"src":"57031:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":14362,"name":"uint256","nodeType":"ElementaryTypeName","src":"57031:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":14363,"nodeType":"ArrayTypeName","src":"57031:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":14366,"mutability":"mutable","name":"error","nameLocation":"57073:5:15","nodeType":"VariableDeclaration","scope":14369,"src":"57057:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14365,"name":"string","nodeType":"ElementaryTypeName","src":"57057:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"57005:74:15"},"returnParameters":{"id":14368,"nodeType":"ParameterList","parameters":[],"src":"57093:0:15"},"scope":15595,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14379,"nodeType":"FunctionDefinition","src":"57162:81:15","nodes":[],"documentation":{"id":14370,"nodeType":"StructuredDocumentation","src":"57100:57:15","text":"Asserts that two arrays of `int256` values are equal."},"functionSelector":"711043ac","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"57171:8:15","parameters":{"id":14377,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14373,"mutability":"mutable","name":"left","nameLocation":"57198:4:15","nodeType":"VariableDeclaration","scope":14379,"src":"57180:22:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":14371,"name":"int256","nodeType":"ElementaryTypeName","src":"57180:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":14372,"nodeType":"ArrayTypeName","src":"57180:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"},{"constant":false,"id":14376,"mutability":"mutable","name":"right","nameLocation":"57222:5:15","nodeType":"VariableDeclaration","scope":14379,"src":"57204:23:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":14374,"name":"int256","nodeType":"ElementaryTypeName","src":"57204:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":14375,"nodeType":"ArrayTypeName","src":"57204:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"}],"src":"57179:49:15"},"returnParameters":{"id":14378,"nodeType":"ParameterList","parameters":[],"src":"57242:0:15"},"scope":15595,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14391,"nodeType":"FunctionDefinition","src":"57368:104:15","nodes":[],"documentation":{"id":14380,"nodeType":"StructuredDocumentation","src":"57249:114:15","text":"Asserts that two arrays of `int256` values are equal and includes error message into revert string on failure."},"functionSelector":"191f1b30","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"57377:8:15","parameters":{"id":14389,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14383,"mutability":"mutable","name":"left","nameLocation":"57404:4:15","nodeType":"VariableDeclaration","scope":14391,"src":"57386:22:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":14381,"name":"int256","nodeType":"ElementaryTypeName","src":"57386:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":14382,"nodeType":"ArrayTypeName","src":"57386:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"},{"constant":false,"id":14386,"mutability":"mutable","name":"right","nameLocation":"57428:5:15","nodeType":"VariableDeclaration","scope":14391,"src":"57410:23:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":14384,"name":"int256","nodeType":"ElementaryTypeName","src":"57410:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":14385,"nodeType":"ArrayTypeName","src":"57410:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"},{"constant":false,"id":14388,"mutability":"mutable","name":"error","nameLocation":"57451:5:15","nodeType":"VariableDeclaration","scope":14391,"src":"57435:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14387,"name":"string","nodeType":"ElementaryTypeName","src":"57435:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"57385:72:15"},"returnParameters":{"id":14390,"nodeType":"ParameterList","parameters":[],"src":"57471:0:15"},"scope":15595,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14399,"nodeType":"FunctionDefinition","src":"57531:61:15","nodes":[],"documentation":{"id":14392,"nodeType":"StructuredDocumentation","src":"57478:48:15","text":"Asserts that two `uint256` values are equal."},"functionSelector":"98296c54","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"57540:8:15","parameters":{"id":14397,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14394,"mutability":"mutable","name":"left","nameLocation":"57557:4:15","nodeType":"VariableDeclaration","scope":14399,"src":"57549:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14393,"name":"uint256","nodeType":"ElementaryTypeName","src":"57549:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14396,"mutability":"mutable","name":"right","nameLocation":"57571:5:15","nodeType":"VariableDeclaration","scope":14399,"src":"57563:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14395,"name":"uint256","nodeType":"ElementaryTypeName","src":"57563:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"57548:29:15"},"returnParameters":{"id":14398,"nodeType":"ParameterList","parameters":[],"src":"57591:0:15"},"scope":15595,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14409,"nodeType":"FunctionDefinition","src":"57661:83:15","nodes":[],"documentation":{"id":14400,"nodeType":"StructuredDocumentation","src":"57598:58:15","text":"Asserts that two arrays of `address` values are equal."},"functionSelector":"3868ac34","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"57670:8:15","parameters":{"id":14407,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14403,"mutability":"mutable","name":"left","nameLocation":"57698:4:15","nodeType":"VariableDeclaration","scope":14409,"src":"57679:23:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":14401,"name":"address","nodeType":"ElementaryTypeName","src":"57679:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":14402,"nodeType":"ArrayTypeName","src":"57679:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":14406,"mutability":"mutable","name":"right","nameLocation":"57723:5:15","nodeType":"VariableDeclaration","scope":14409,"src":"57704:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":14404,"name":"address","nodeType":"ElementaryTypeName","src":"57704:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":14405,"nodeType":"ArrayTypeName","src":"57704:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"57678:51:15"},"returnParameters":{"id":14408,"nodeType":"ParameterList","parameters":[],"src":"57743:0:15"},"scope":15595,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14421,"nodeType":"FunctionDefinition","src":"57870:106:15","nodes":[],"documentation":{"id":14410,"nodeType":"StructuredDocumentation","src":"57750:115:15","text":"Asserts that two arrays of `address` values are equal and includes error message into revert string on failure."},"functionSelector":"3e9173c5","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"57879:8:15","parameters":{"id":14419,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14413,"mutability":"mutable","name":"left","nameLocation":"57907:4:15","nodeType":"VariableDeclaration","scope":14421,"src":"57888:23:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":14411,"name":"address","nodeType":"ElementaryTypeName","src":"57888:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":14412,"nodeType":"ArrayTypeName","src":"57888:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":14416,"mutability":"mutable","name":"right","nameLocation":"57932:5:15","nodeType":"VariableDeclaration","scope":14421,"src":"57913:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":14414,"name":"address","nodeType":"ElementaryTypeName","src":"57913:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":14415,"nodeType":"ArrayTypeName","src":"57913:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":14418,"mutability":"mutable","name":"error","nameLocation":"57955:5:15","nodeType":"VariableDeclaration","scope":14421,"src":"57939:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14417,"name":"string","nodeType":"ElementaryTypeName","src":"57939:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"57887:74:15"},"returnParameters":{"id":14420,"nodeType":"ParameterList","parameters":[],"src":"57975:0:15"},"scope":15595,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14431,"nodeType":"FunctionDefinition","src":"58045:83:15","nodes":[],"documentation":{"id":14422,"nodeType":"StructuredDocumentation","src":"57982:58:15","text":"Asserts that two arrays of `bytes32` values are equal."},"functionSelector":"0cc9ee84","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"58054:8:15","parameters":{"id":14429,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14425,"mutability":"mutable","name":"left","nameLocation":"58082:4:15","nodeType":"VariableDeclaration","scope":14431,"src":"58063:23:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":14423,"name":"bytes32","nodeType":"ElementaryTypeName","src":"58063:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":14424,"nodeType":"ArrayTypeName","src":"58063:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":14428,"mutability":"mutable","name":"right","nameLocation":"58107:5:15","nodeType":"VariableDeclaration","scope":14431,"src":"58088:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":14426,"name":"bytes32","nodeType":"ElementaryTypeName","src":"58088:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":14427,"nodeType":"ArrayTypeName","src":"58088:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"58062:51:15"},"returnParameters":{"id":14430,"nodeType":"ParameterList","parameters":[],"src":"58127:0:15"},"scope":15595,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14443,"nodeType":"FunctionDefinition","src":"58254:106:15","nodes":[],"documentation":{"id":14432,"nodeType":"StructuredDocumentation","src":"58134:115:15","text":"Asserts that two arrays of `bytes32` values are equal and includes error message into revert string on failure."},"functionSelector":"e03e9177","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"58263:8:15","parameters":{"id":14441,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14435,"mutability":"mutable","name":"left","nameLocation":"58291:4:15","nodeType":"VariableDeclaration","scope":14443,"src":"58272:23:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":14433,"name":"bytes32","nodeType":"ElementaryTypeName","src":"58272:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":14434,"nodeType":"ArrayTypeName","src":"58272:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":14438,"mutability":"mutable","name":"right","nameLocation":"58316:5:15","nodeType":"VariableDeclaration","scope":14443,"src":"58297:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":14436,"name":"bytes32","nodeType":"ElementaryTypeName","src":"58297:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":14437,"nodeType":"ArrayTypeName","src":"58297:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":14440,"mutability":"mutable","name":"error","nameLocation":"58339:5:15","nodeType":"VariableDeclaration","scope":14443,"src":"58323:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14439,"name":"string","nodeType":"ElementaryTypeName","src":"58323:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"58271:74:15"},"returnParameters":{"id":14442,"nodeType":"ParameterList","parameters":[],"src":"58359:0:15"},"scope":15595,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14453,"nodeType":"FunctionDefinition","src":"58428:81:15","nodes":[],"documentation":{"id":14444,"nodeType":"StructuredDocumentation","src":"58366:57:15","text":"Asserts that two arrays of `string` values are equal."},"functionSelector":"cf1c049c","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"58437:8:15","parameters":{"id":14451,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14447,"mutability":"mutable","name":"left","nameLocation":"58464:4:15","nodeType":"VariableDeclaration","scope":14453,"src":"58446:22:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":14445,"name":"string","nodeType":"ElementaryTypeName","src":"58446:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":14446,"nodeType":"ArrayTypeName","src":"58446:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":14450,"mutability":"mutable","name":"right","nameLocation":"58488:5:15","nodeType":"VariableDeclaration","scope":14453,"src":"58470:23:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":14448,"name":"string","nodeType":"ElementaryTypeName","src":"58470:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":14449,"nodeType":"ArrayTypeName","src":"58470:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"58445:49:15"},"returnParameters":{"id":14452,"nodeType":"ParameterList","parameters":[],"src":"58508:0:15"},"scope":15595,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14465,"nodeType":"FunctionDefinition","src":"58634:104:15","nodes":[],"documentation":{"id":14454,"nodeType":"StructuredDocumentation","src":"58515:114:15","text":"Asserts that two arrays of `string` values are equal and includes error message into revert string on failure."},"functionSelector":"eff6b27d","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"58643:8:15","parameters":{"id":14463,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14457,"mutability":"mutable","name":"left","nameLocation":"58670:4:15","nodeType":"VariableDeclaration","scope":14465,"src":"58652:22:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":14455,"name":"string","nodeType":"ElementaryTypeName","src":"58652:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":14456,"nodeType":"ArrayTypeName","src":"58652:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":14460,"mutability":"mutable","name":"right","nameLocation":"58694:5:15","nodeType":"VariableDeclaration","scope":14465,"src":"58676:23:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":14458,"name":"string","nodeType":"ElementaryTypeName","src":"58676:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":14459,"nodeType":"ArrayTypeName","src":"58676:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":14462,"mutability":"mutable","name":"error","nameLocation":"58717:5:15","nodeType":"VariableDeclaration","scope":14465,"src":"58701:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14461,"name":"string","nodeType":"ElementaryTypeName","src":"58701:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"58651:72:15"},"returnParameters":{"id":14464,"nodeType":"ParameterList","parameters":[],"src":"58737:0:15"},"scope":15595,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14475,"nodeType":"FunctionDefinition","src":"58805:79:15","nodes":[],"documentation":{"id":14466,"nodeType":"StructuredDocumentation","src":"58744:56:15","text":"Asserts that two arrays of `bytes` values are equal."},"functionSelector":"e5fb9b4a","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"58814:8:15","parameters":{"id":14473,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14469,"mutability":"mutable","name":"left","nameLocation":"58840:4:15","nodeType":"VariableDeclaration","scope":14475,"src":"58823:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":14467,"name":"bytes","nodeType":"ElementaryTypeName","src":"58823:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":14468,"nodeType":"ArrayTypeName","src":"58823:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":14472,"mutability":"mutable","name":"right","nameLocation":"58863:5:15","nodeType":"VariableDeclaration","scope":14475,"src":"58846:22:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":14470,"name":"bytes","nodeType":"ElementaryTypeName","src":"58846:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":14471,"nodeType":"ArrayTypeName","src":"58846:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"58822:47:15"},"returnParameters":{"id":14474,"nodeType":"ParameterList","parameters":[],"src":"58883:0:15"},"scope":15595,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14487,"nodeType":"FunctionDefinition","src":"59008:102:15","nodes":[],"documentation":{"id":14476,"nodeType":"StructuredDocumentation","src":"58890:113:15","text":"Asserts that two arrays of `bytes` values are equal and includes error message into revert string on failure."},"functionSelector":"f413f0b6","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"59017:8:15","parameters":{"id":14485,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14479,"mutability":"mutable","name":"left","nameLocation":"59043:4:15","nodeType":"VariableDeclaration","scope":14487,"src":"59026:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":14477,"name":"bytes","nodeType":"ElementaryTypeName","src":"59026:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":14478,"nodeType":"ArrayTypeName","src":"59026:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":14482,"mutability":"mutable","name":"right","nameLocation":"59066:5:15","nodeType":"VariableDeclaration","scope":14487,"src":"59049:22:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":14480,"name":"bytes","nodeType":"ElementaryTypeName","src":"59049:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":14481,"nodeType":"ArrayTypeName","src":"59049:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":14484,"mutability":"mutable","name":"error","nameLocation":"59089:5:15","nodeType":"VariableDeclaration","scope":14487,"src":"59073:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14483,"name":"string","nodeType":"ElementaryTypeName","src":"59073:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"59025:70:15"},"returnParameters":{"id":14486,"nodeType":"ParameterList","parameters":[],"src":"59109:0:15"},"scope":15595,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14497,"nodeType":"FunctionDefinition","src":"59226:84:15","nodes":[],"documentation":{"id":14488,"nodeType":"StructuredDocumentation","src":"59116:105:15","text":"Asserts that two `uint256` values are equal and includes error message into revert string on failure."},"functionSelector":"88b44c85","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"59235:8:15","parameters":{"id":14495,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14490,"mutability":"mutable","name":"left","nameLocation":"59252:4:15","nodeType":"VariableDeclaration","scope":14497,"src":"59244:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14489,"name":"uint256","nodeType":"ElementaryTypeName","src":"59244:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14492,"mutability":"mutable","name":"right","nameLocation":"59266:5:15","nodeType":"VariableDeclaration","scope":14497,"src":"59258:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14491,"name":"uint256","nodeType":"ElementaryTypeName","src":"59258:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14494,"mutability":"mutable","name":"error","nameLocation":"59289:5:15","nodeType":"VariableDeclaration","scope":14497,"src":"59273:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14493,"name":"string","nodeType":"ElementaryTypeName","src":"59273:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"59243:52:15"},"returnParameters":{"id":14496,"nodeType":"ParameterList","parameters":[],"src":"59309:0:15"},"scope":15595,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14505,"nodeType":"FunctionDefinition","src":"59368:59:15","nodes":[],"documentation":{"id":14498,"nodeType":"StructuredDocumentation","src":"59316:47:15","text":"Asserts that two `int256` values are equal."},"functionSelector":"fe74f05b","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"59377:8:15","parameters":{"id":14503,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14500,"mutability":"mutable","name":"left","nameLocation":"59393:4:15","nodeType":"VariableDeclaration","scope":14505,"src":"59386:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14499,"name":"int256","nodeType":"ElementaryTypeName","src":"59386:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14502,"mutability":"mutable","name":"right","nameLocation":"59406:5:15","nodeType":"VariableDeclaration","scope":14505,"src":"59399:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14501,"name":"int256","nodeType":"ElementaryTypeName","src":"59399:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"59385:27:15"},"returnParameters":{"id":14504,"nodeType":"ParameterList","parameters":[],"src":"59426:0:15"},"scope":15595,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14515,"nodeType":"FunctionDefinition","src":"59542:82:15","nodes":[],"documentation":{"id":14506,"nodeType":"StructuredDocumentation","src":"59433:104:15","text":"Asserts that two `int256` values are equal and includes error message into revert string on failure."},"functionSelector":"714a2f13","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"59551:8:15","parameters":{"id":14513,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14508,"mutability":"mutable","name":"left","nameLocation":"59567:4:15","nodeType":"VariableDeclaration","scope":14515,"src":"59560:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14507,"name":"int256","nodeType":"ElementaryTypeName","src":"59560:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14510,"mutability":"mutable","name":"right","nameLocation":"59580:5:15","nodeType":"VariableDeclaration","scope":14515,"src":"59573:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14509,"name":"int256","nodeType":"ElementaryTypeName","src":"59573:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14512,"mutability":"mutable","name":"error","nameLocation":"59603:5:15","nodeType":"VariableDeclaration","scope":14515,"src":"59587:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14511,"name":"string","nodeType":"ElementaryTypeName","src":"59587:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"59559:50:15"},"returnParameters":{"id":14514,"nodeType":"ParameterList","parameters":[],"src":"59623:0:15"},"scope":15595,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14523,"nodeType":"FunctionDefinition","src":"59683:61:15","nodes":[],"documentation":{"id":14516,"nodeType":"StructuredDocumentation","src":"59630:48:15","text":"Asserts that two `address` values are equal."},"functionSelector":"515361f6","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"59692:8:15","parameters":{"id":14521,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14518,"mutability":"mutable","name":"left","nameLocation":"59709:4:15","nodeType":"VariableDeclaration","scope":14523,"src":"59701:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":14517,"name":"address","nodeType":"ElementaryTypeName","src":"59701:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":14520,"mutability":"mutable","name":"right","nameLocation":"59723:5:15","nodeType":"VariableDeclaration","scope":14523,"src":"59715:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":14519,"name":"address","nodeType":"ElementaryTypeName","src":"59715:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"59700:29:15"},"returnParameters":{"id":14522,"nodeType":"ParameterList","parameters":[],"src":"59743:0:15"},"scope":15595,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14533,"nodeType":"FunctionDefinition","src":"59860:84:15","nodes":[],"documentation":{"id":14524,"nodeType":"StructuredDocumentation","src":"59750:105:15","text":"Asserts that two `address` values are equal and includes error message into revert string on failure."},"functionSelector":"2f2769d1","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"59869:8:15","parameters":{"id":14531,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14526,"mutability":"mutable","name":"left","nameLocation":"59886:4:15","nodeType":"VariableDeclaration","scope":14533,"src":"59878:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":14525,"name":"address","nodeType":"ElementaryTypeName","src":"59878:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":14528,"mutability":"mutable","name":"right","nameLocation":"59900:5:15","nodeType":"VariableDeclaration","scope":14533,"src":"59892:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":14527,"name":"address","nodeType":"ElementaryTypeName","src":"59892:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":14530,"mutability":"mutable","name":"error","nameLocation":"59923:5:15","nodeType":"VariableDeclaration","scope":14533,"src":"59907:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14529,"name":"string","nodeType":"ElementaryTypeName","src":"59907:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"59877:52:15"},"returnParameters":{"id":14532,"nodeType":"ParameterList","parameters":[],"src":"59943:0:15"},"scope":15595,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14541,"nodeType":"FunctionDefinition","src":"60003:61:15","nodes":[],"documentation":{"id":14534,"nodeType":"StructuredDocumentation","src":"59950:48:15","text":"Asserts that two `bytes32` values are equal."},"functionSelector":"7c84c69b","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"60012:8:15","parameters":{"id":14539,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14536,"mutability":"mutable","name":"left","nameLocation":"60029:4:15","nodeType":"VariableDeclaration","scope":14541,"src":"60021:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":14535,"name":"bytes32","nodeType":"ElementaryTypeName","src":"60021:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":14538,"mutability":"mutable","name":"right","nameLocation":"60043:5:15","nodeType":"VariableDeclaration","scope":14541,"src":"60035:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":14537,"name":"bytes32","nodeType":"ElementaryTypeName","src":"60035:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"60020:29:15"},"returnParameters":{"id":14540,"nodeType":"ParameterList","parameters":[],"src":"60063:0:15"},"scope":15595,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14551,"nodeType":"FunctionDefinition","src":"60180:84:15","nodes":[],"documentation":{"id":14542,"nodeType":"StructuredDocumentation","src":"60070:105:15","text":"Asserts that two `bytes32` values are equal and includes error message into revert string on failure."},"functionSelector":"c1fa1ed0","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"60189:8:15","parameters":{"id":14549,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14544,"mutability":"mutable","name":"left","nameLocation":"60206:4:15","nodeType":"VariableDeclaration","scope":14551,"src":"60198:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":14543,"name":"bytes32","nodeType":"ElementaryTypeName","src":"60198:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":14546,"mutability":"mutable","name":"right","nameLocation":"60220:5:15","nodeType":"VariableDeclaration","scope":14551,"src":"60212:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":14545,"name":"bytes32","nodeType":"ElementaryTypeName","src":"60212:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":14548,"mutability":"mutable","name":"error","nameLocation":"60243:5:15","nodeType":"VariableDeclaration","scope":14551,"src":"60227:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14547,"name":"string","nodeType":"ElementaryTypeName","src":"60227:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"60197:52:15"},"returnParameters":{"id":14550,"nodeType":"ParameterList","parameters":[],"src":"60263:0:15"},"scope":15595,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14557,"nodeType":"FunctionDefinition","src":"60321:51:15","nodes":[],"documentation":{"id":14552,"nodeType":"StructuredDocumentation","src":"60270:46:15","text":"Asserts that the given condition is false."},"functionSelector":"a5982885","implemented":false,"kind":"function","modifiers":[],"name":"assertFalse","nameLocation":"60330:11:15","parameters":{"id":14555,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14554,"mutability":"mutable","name":"condition","nameLocation":"60347:9:15","nodeType":"VariableDeclaration","scope":14557,"src":"60342:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":14553,"name":"bool","nodeType":"ElementaryTypeName","src":"60342:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"60341:16:15"},"returnParameters":{"id":14556,"nodeType":"ParameterList","parameters":[],"src":"60371:0:15"},"scope":15595,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14565,"nodeType":"FunctionDefinition","src":"60486:74:15","nodes":[],"documentation":{"id":14558,"nodeType":"StructuredDocumentation","src":"60378:103:15","text":"Asserts that the given condition is false and includes error message into revert string on failure."},"functionSelector":"7ba04809","implemented":false,"kind":"function","modifiers":[],"name":"assertFalse","nameLocation":"60495:11:15","parameters":{"id":14563,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14560,"mutability":"mutable","name":"condition","nameLocation":"60512:9:15","nodeType":"VariableDeclaration","scope":14565,"src":"60507:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":14559,"name":"bool","nodeType":"ElementaryTypeName","src":"60507:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":14562,"mutability":"mutable","name":"error","nameLocation":"60539:5:15","nodeType":"VariableDeclaration","scope":14565,"src":"60523:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14561,"name":"string","nodeType":"ElementaryTypeName","src":"60523:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"60506:39:15"},"returnParameters":{"id":14564,"nodeType":"ParameterList","parameters":[],"src":"60559:0:15"},"scope":15595,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14575,"nodeType":"FunctionDefinition","src":"60721:86:15","nodes":[],"documentation":{"id":14566,"nodeType":"StructuredDocumentation","src":"60566:150:15","text":"Compares two `uint256` values. Expects first value to be greater than or equal to second.\n Formats values with decimals in failure message."},"functionSelector":"3d1fe08a","implemented":false,"kind":"function","modifiers":[],"name":"assertGeDecimal","nameLocation":"60730:15:15","parameters":{"id":14573,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14568,"mutability":"mutable","name":"left","nameLocation":"60754:4:15","nodeType":"VariableDeclaration","scope":14575,"src":"60746:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14567,"name":"uint256","nodeType":"ElementaryTypeName","src":"60746:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14570,"mutability":"mutable","name":"right","nameLocation":"60768:5:15","nodeType":"VariableDeclaration","scope":14575,"src":"60760:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14569,"name":"uint256","nodeType":"ElementaryTypeName","src":"60760:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14572,"mutability":"mutable","name":"decimals","nameLocation":"60783:8:15","nodeType":"VariableDeclaration","scope":14575,"src":"60775:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14571,"name":"uint256","nodeType":"ElementaryTypeName","src":"60775:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"60745:47:15"},"returnParameters":{"id":14574,"nodeType":"ParameterList","parameters":[],"src":"60806:0:15"},"scope":15595,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14587,"nodeType":"FunctionDefinition","src":"61022:109:15","nodes":[],"documentation":{"id":14576,"nodeType":"StructuredDocumentation","src":"60813:204:15","text":"Compares two `uint256` values. Expects first value to be greater than or equal to second.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"8bff9133","implemented":false,"kind":"function","modifiers":[],"name":"assertGeDecimal","nameLocation":"61031:15:15","parameters":{"id":14585,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14578,"mutability":"mutable","name":"left","nameLocation":"61055:4:15","nodeType":"VariableDeclaration","scope":14587,"src":"61047:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14577,"name":"uint256","nodeType":"ElementaryTypeName","src":"61047:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14580,"mutability":"mutable","name":"right","nameLocation":"61069:5:15","nodeType":"VariableDeclaration","scope":14587,"src":"61061:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14579,"name":"uint256","nodeType":"ElementaryTypeName","src":"61061:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14582,"mutability":"mutable","name":"decimals","nameLocation":"61084:8:15","nodeType":"VariableDeclaration","scope":14587,"src":"61076:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14581,"name":"uint256","nodeType":"ElementaryTypeName","src":"61076:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14584,"mutability":"mutable","name":"error","nameLocation":"61110:5:15","nodeType":"VariableDeclaration","scope":14587,"src":"61094:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14583,"name":"string","nodeType":"ElementaryTypeName","src":"61094:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"61046:70:15"},"returnParameters":{"id":14586,"nodeType":"ParameterList","parameters":[],"src":"61130:0:15"},"scope":15595,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14597,"nodeType":"FunctionDefinition","src":"61291:84:15","nodes":[],"documentation":{"id":14588,"nodeType":"StructuredDocumentation","src":"61137:149:15","text":"Compares two `int256` values. Expects first value to be greater than or equal to second.\n Formats values with decimals in failure message."},"functionSelector":"dc28c0f1","implemented":false,"kind":"function","modifiers":[],"name":"assertGeDecimal","nameLocation":"61300:15:15","parameters":{"id":14595,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14590,"mutability":"mutable","name":"left","nameLocation":"61323:4:15","nodeType":"VariableDeclaration","scope":14597,"src":"61316:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14589,"name":"int256","nodeType":"ElementaryTypeName","src":"61316:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14592,"mutability":"mutable","name":"right","nameLocation":"61336:5:15","nodeType":"VariableDeclaration","scope":14597,"src":"61329:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14591,"name":"int256","nodeType":"ElementaryTypeName","src":"61329:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14594,"mutability":"mutable","name":"decimals","nameLocation":"61351:8:15","nodeType":"VariableDeclaration","scope":14597,"src":"61343:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14593,"name":"uint256","nodeType":"ElementaryTypeName","src":"61343:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"61315:45:15"},"returnParameters":{"id":14596,"nodeType":"ParameterList","parameters":[],"src":"61374:0:15"},"scope":15595,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14609,"nodeType":"FunctionDefinition","src":"61589:107:15","nodes":[],"documentation":{"id":14598,"nodeType":"StructuredDocumentation","src":"61381:203:15","text":"Compares two `int256` values. Expects first value to be greater than or equal to second.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"5df93c9b","implemented":false,"kind":"function","modifiers":[],"name":"assertGeDecimal","nameLocation":"61598:15:15","parameters":{"id":14607,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14600,"mutability":"mutable","name":"left","nameLocation":"61621:4:15","nodeType":"VariableDeclaration","scope":14609,"src":"61614:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14599,"name":"int256","nodeType":"ElementaryTypeName","src":"61614:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14602,"mutability":"mutable","name":"right","nameLocation":"61634:5:15","nodeType":"VariableDeclaration","scope":14609,"src":"61627:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14601,"name":"int256","nodeType":"ElementaryTypeName","src":"61627:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14604,"mutability":"mutable","name":"decimals","nameLocation":"61649:8:15","nodeType":"VariableDeclaration","scope":14609,"src":"61641:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14603,"name":"uint256","nodeType":"ElementaryTypeName","src":"61641:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14606,"mutability":"mutable","name":"error","nameLocation":"61675:5:15","nodeType":"VariableDeclaration","scope":14609,"src":"61659:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14605,"name":"string","nodeType":"ElementaryTypeName","src":"61659:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"61613:68:15"},"returnParameters":{"id":14608,"nodeType":"ParameterList","parameters":[],"src":"61695:0:15"},"scope":15595,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14617,"nodeType":"FunctionDefinition","src":"61800:61:15","nodes":[],"documentation":{"id":14610,"nodeType":"StructuredDocumentation","src":"61702:93:15","text":"Compares two `uint256` values. Expects first value to be greater than or equal to second."},"functionSelector":"a8d4d1d9","implemented":false,"kind":"function","modifiers":[],"name":"assertGe","nameLocation":"61809:8:15","parameters":{"id":14615,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14612,"mutability":"mutable","name":"left","nameLocation":"61826:4:15","nodeType":"VariableDeclaration","scope":14617,"src":"61818:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14611,"name":"uint256","nodeType":"ElementaryTypeName","src":"61818:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14614,"mutability":"mutable","name":"right","nameLocation":"61840:5:15","nodeType":"VariableDeclaration","scope":14617,"src":"61832:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14613,"name":"uint256","nodeType":"ElementaryTypeName","src":"61832:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"61817:29:15"},"returnParameters":{"id":14616,"nodeType":"ParameterList","parameters":[],"src":"61860:0:15"},"scope":15595,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14627,"nodeType":"FunctionDefinition","src":"62027:84:15","nodes":[],"documentation":{"id":14618,"nodeType":"StructuredDocumentation","src":"61867:155:15","text":"Compares two `uint256` values. Expects first value to be greater than or equal to second.\n Includes error message into revert string on failure."},"functionSelector":"e25242c0","implemented":false,"kind":"function","modifiers":[],"name":"assertGe","nameLocation":"62036:8:15","parameters":{"id":14625,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14620,"mutability":"mutable","name":"left","nameLocation":"62053:4:15","nodeType":"VariableDeclaration","scope":14627,"src":"62045:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14619,"name":"uint256","nodeType":"ElementaryTypeName","src":"62045:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14622,"mutability":"mutable","name":"right","nameLocation":"62067:5:15","nodeType":"VariableDeclaration","scope":14627,"src":"62059:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14621,"name":"uint256","nodeType":"ElementaryTypeName","src":"62059:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14624,"mutability":"mutable","name":"error","nameLocation":"62090:5:15","nodeType":"VariableDeclaration","scope":14627,"src":"62074:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14623,"name":"string","nodeType":"ElementaryTypeName","src":"62074:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"62044:52:15"},"returnParameters":{"id":14626,"nodeType":"ParameterList","parameters":[],"src":"62110:0:15"},"scope":15595,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14635,"nodeType":"FunctionDefinition","src":"62214:59:15","nodes":[],"documentation":{"id":14628,"nodeType":"StructuredDocumentation","src":"62117:92:15","text":"Compares two `int256` values. Expects first value to be greater than or equal to second."},"functionSelector":"0a30b771","implemented":false,"kind":"function","modifiers":[],"name":"assertGe","nameLocation":"62223:8:15","parameters":{"id":14633,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14630,"mutability":"mutable","name":"left","nameLocation":"62239:4:15","nodeType":"VariableDeclaration","scope":14635,"src":"62232:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14629,"name":"int256","nodeType":"ElementaryTypeName","src":"62232:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14632,"mutability":"mutable","name":"right","nameLocation":"62252:5:15","nodeType":"VariableDeclaration","scope":14635,"src":"62245:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14631,"name":"int256","nodeType":"ElementaryTypeName","src":"62245:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"62231:27:15"},"returnParameters":{"id":14634,"nodeType":"ParameterList","parameters":[],"src":"62272:0:15"},"scope":15595,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14645,"nodeType":"FunctionDefinition","src":"62438:82:15","nodes":[],"documentation":{"id":14636,"nodeType":"StructuredDocumentation","src":"62279:154:15","text":"Compares two `int256` values. Expects first value to be greater than or equal to second.\n Includes error message into revert string on failure."},"functionSelector":"a84328dd","implemented":false,"kind":"function","modifiers":[],"name":"assertGe","nameLocation":"62447:8:15","parameters":{"id":14643,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14638,"mutability":"mutable","name":"left","nameLocation":"62463:4:15","nodeType":"VariableDeclaration","scope":14645,"src":"62456:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14637,"name":"int256","nodeType":"ElementaryTypeName","src":"62456:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14640,"mutability":"mutable","name":"right","nameLocation":"62476:5:15","nodeType":"VariableDeclaration","scope":14645,"src":"62469:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14639,"name":"int256","nodeType":"ElementaryTypeName","src":"62469:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14642,"mutability":"mutable","name":"error","nameLocation":"62499:5:15","nodeType":"VariableDeclaration","scope":14645,"src":"62483:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14641,"name":"string","nodeType":"ElementaryTypeName","src":"62483:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"62455:50:15"},"returnParameters":{"id":14644,"nodeType":"ParameterList","parameters":[],"src":"62519:0:15"},"scope":15595,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14655,"nodeType":"FunctionDefinition","src":"62669:86:15","nodes":[],"documentation":{"id":14646,"nodeType":"StructuredDocumentation","src":"62526:138:15","text":"Compares two `uint256` values. Expects first value to be greater than second.\n Formats values with decimals in failure message."},"functionSelector":"eccd2437","implemented":false,"kind":"function","modifiers":[],"name":"assertGtDecimal","nameLocation":"62678:15:15","parameters":{"id":14653,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14648,"mutability":"mutable","name":"left","nameLocation":"62702:4:15","nodeType":"VariableDeclaration","scope":14655,"src":"62694:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14647,"name":"uint256","nodeType":"ElementaryTypeName","src":"62694:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14650,"mutability":"mutable","name":"right","nameLocation":"62716:5:15","nodeType":"VariableDeclaration","scope":14655,"src":"62708:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14649,"name":"uint256","nodeType":"ElementaryTypeName","src":"62708:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14652,"mutability":"mutable","name":"decimals","nameLocation":"62731:8:15","nodeType":"VariableDeclaration","scope":14655,"src":"62723:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14651,"name":"uint256","nodeType":"ElementaryTypeName","src":"62723:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"62693:47:15"},"returnParameters":{"id":14654,"nodeType":"ParameterList","parameters":[],"src":"62754:0:15"},"scope":15595,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14667,"nodeType":"FunctionDefinition","src":"62958:109:15","nodes":[],"documentation":{"id":14656,"nodeType":"StructuredDocumentation","src":"62761:192:15","text":"Compares two `uint256` values. Expects first value to be greater than second.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"64949a8d","implemented":false,"kind":"function","modifiers":[],"name":"assertGtDecimal","nameLocation":"62967:15:15","parameters":{"id":14665,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14658,"mutability":"mutable","name":"left","nameLocation":"62991:4:15","nodeType":"VariableDeclaration","scope":14667,"src":"62983:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14657,"name":"uint256","nodeType":"ElementaryTypeName","src":"62983:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14660,"mutability":"mutable","name":"right","nameLocation":"63005:5:15","nodeType":"VariableDeclaration","scope":14667,"src":"62997:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14659,"name":"uint256","nodeType":"ElementaryTypeName","src":"62997:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14662,"mutability":"mutable","name":"decimals","nameLocation":"63020:8:15","nodeType":"VariableDeclaration","scope":14667,"src":"63012:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14661,"name":"uint256","nodeType":"ElementaryTypeName","src":"63012:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14664,"mutability":"mutable","name":"error","nameLocation":"63046:5:15","nodeType":"VariableDeclaration","scope":14667,"src":"63030:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14663,"name":"string","nodeType":"ElementaryTypeName","src":"63030:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"62982:70:15"},"returnParameters":{"id":14666,"nodeType":"ParameterList","parameters":[],"src":"63066:0:15"},"scope":15595,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14677,"nodeType":"FunctionDefinition","src":"63215:84:15","nodes":[],"documentation":{"id":14668,"nodeType":"StructuredDocumentation","src":"63073:137:15","text":"Compares two `int256` values. Expects first value to be greater than second.\n Formats values with decimals in failure message."},"functionSelector":"78611f0e","implemented":false,"kind":"function","modifiers":[],"name":"assertGtDecimal","nameLocation":"63224:15:15","parameters":{"id":14675,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14670,"mutability":"mutable","name":"left","nameLocation":"63247:4:15","nodeType":"VariableDeclaration","scope":14677,"src":"63240:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14669,"name":"int256","nodeType":"ElementaryTypeName","src":"63240:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14672,"mutability":"mutable","name":"right","nameLocation":"63260:5:15","nodeType":"VariableDeclaration","scope":14677,"src":"63253:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14671,"name":"int256","nodeType":"ElementaryTypeName","src":"63253:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14674,"mutability":"mutable","name":"decimals","nameLocation":"63275:8:15","nodeType":"VariableDeclaration","scope":14677,"src":"63267:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14673,"name":"uint256","nodeType":"ElementaryTypeName","src":"63267:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"63239:45:15"},"returnParameters":{"id":14676,"nodeType":"ParameterList","parameters":[],"src":"63298:0:15"},"scope":15595,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14689,"nodeType":"FunctionDefinition","src":"63501:107:15","nodes":[],"documentation":{"id":14678,"nodeType":"StructuredDocumentation","src":"63305:191:15","text":"Compares two `int256` values. Expects first value to be greater than second.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"04a5c7ab","implemented":false,"kind":"function","modifiers":[],"name":"assertGtDecimal","nameLocation":"63510:15:15","parameters":{"id":14687,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14680,"mutability":"mutable","name":"left","nameLocation":"63533:4:15","nodeType":"VariableDeclaration","scope":14689,"src":"63526:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14679,"name":"int256","nodeType":"ElementaryTypeName","src":"63526:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14682,"mutability":"mutable","name":"right","nameLocation":"63546:5:15","nodeType":"VariableDeclaration","scope":14689,"src":"63539:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14681,"name":"int256","nodeType":"ElementaryTypeName","src":"63539:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14684,"mutability":"mutable","name":"decimals","nameLocation":"63561:8:15","nodeType":"VariableDeclaration","scope":14689,"src":"63553:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14683,"name":"uint256","nodeType":"ElementaryTypeName","src":"63553:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14686,"mutability":"mutable","name":"error","nameLocation":"63587:5:15","nodeType":"VariableDeclaration","scope":14689,"src":"63571:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14685,"name":"string","nodeType":"ElementaryTypeName","src":"63571:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"63525:68:15"},"returnParameters":{"id":14688,"nodeType":"ParameterList","parameters":[],"src":"63607:0:15"},"scope":15595,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14697,"nodeType":"FunctionDefinition","src":"63700:61:15","nodes":[],"documentation":{"id":14690,"nodeType":"StructuredDocumentation","src":"63614:81:15","text":"Compares two `uint256` values. Expects first value to be greater than second."},"functionSelector":"db07fcd2","implemented":false,"kind":"function","modifiers":[],"name":"assertGt","nameLocation":"63709:8:15","parameters":{"id":14695,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14692,"mutability":"mutable","name":"left","nameLocation":"63726:4:15","nodeType":"VariableDeclaration","scope":14697,"src":"63718:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14691,"name":"uint256","nodeType":"ElementaryTypeName","src":"63718:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14694,"mutability":"mutable","name":"right","nameLocation":"63740:5:15","nodeType":"VariableDeclaration","scope":14697,"src":"63732:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14693,"name":"uint256","nodeType":"ElementaryTypeName","src":"63732:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"63717:29:15"},"returnParameters":{"id":14696,"nodeType":"ParameterList","parameters":[],"src":"63760:0:15"},"scope":15595,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14707,"nodeType":"FunctionDefinition","src":"63915:84:15","nodes":[],"documentation":{"id":14698,"nodeType":"StructuredDocumentation","src":"63767:143:15","text":"Compares two `uint256` values. Expects first value to be greater than second.\n Includes error message into revert string on failure."},"functionSelector":"d9a3c4d2","implemented":false,"kind":"function","modifiers":[],"name":"assertGt","nameLocation":"63924:8:15","parameters":{"id":14705,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14700,"mutability":"mutable","name":"left","nameLocation":"63941:4:15","nodeType":"VariableDeclaration","scope":14707,"src":"63933:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14699,"name":"uint256","nodeType":"ElementaryTypeName","src":"63933:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14702,"mutability":"mutable","name":"right","nameLocation":"63955:5:15","nodeType":"VariableDeclaration","scope":14707,"src":"63947:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14701,"name":"uint256","nodeType":"ElementaryTypeName","src":"63947:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14704,"mutability":"mutable","name":"error","nameLocation":"63978:5:15","nodeType":"VariableDeclaration","scope":14707,"src":"63962:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14703,"name":"string","nodeType":"ElementaryTypeName","src":"63962:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"63932:52:15"},"returnParameters":{"id":14706,"nodeType":"ParameterList","parameters":[],"src":"63998:0:15"},"scope":15595,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14715,"nodeType":"FunctionDefinition","src":"64090:59:15","nodes":[],"documentation":{"id":14708,"nodeType":"StructuredDocumentation","src":"64005:80:15","text":"Compares two `int256` values. Expects first value to be greater than second."},"functionSelector":"5a362d45","implemented":false,"kind":"function","modifiers":[],"name":"assertGt","nameLocation":"64099:8:15","parameters":{"id":14713,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14710,"mutability":"mutable","name":"left","nameLocation":"64115:4:15","nodeType":"VariableDeclaration","scope":14715,"src":"64108:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14709,"name":"int256","nodeType":"ElementaryTypeName","src":"64108:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14712,"mutability":"mutable","name":"right","nameLocation":"64128:5:15","nodeType":"VariableDeclaration","scope":14715,"src":"64121:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14711,"name":"int256","nodeType":"ElementaryTypeName","src":"64121:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"64107:27:15"},"returnParameters":{"id":14714,"nodeType":"ParameterList","parameters":[],"src":"64148:0:15"},"scope":15595,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14725,"nodeType":"FunctionDefinition","src":"64302:82:15","nodes":[],"documentation":{"id":14716,"nodeType":"StructuredDocumentation","src":"64155:142:15","text":"Compares two `int256` values. Expects first value to be greater than second.\n Includes error message into revert string on failure."},"functionSelector":"f8d33b9b","implemented":false,"kind":"function","modifiers":[],"name":"assertGt","nameLocation":"64311:8:15","parameters":{"id":14723,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14718,"mutability":"mutable","name":"left","nameLocation":"64327:4:15","nodeType":"VariableDeclaration","scope":14725,"src":"64320:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14717,"name":"int256","nodeType":"ElementaryTypeName","src":"64320:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14720,"mutability":"mutable","name":"right","nameLocation":"64340:5:15","nodeType":"VariableDeclaration","scope":14725,"src":"64333:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14719,"name":"int256","nodeType":"ElementaryTypeName","src":"64333:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14722,"mutability":"mutable","name":"error","nameLocation":"64363:5:15","nodeType":"VariableDeclaration","scope":14725,"src":"64347:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14721,"name":"string","nodeType":"ElementaryTypeName","src":"64347:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"64319:50:15"},"returnParameters":{"id":14724,"nodeType":"ParameterList","parameters":[],"src":"64383:0:15"},"scope":15595,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14735,"nodeType":"FunctionDefinition","src":"64542:86:15","nodes":[],"documentation":{"id":14726,"nodeType":"StructuredDocumentation","src":"64390:147:15","text":"Compares two `uint256` values. Expects first value to be less than or equal to second.\n Formats values with decimals in failure message."},"functionSelector":"c304aab7","implemented":false,"kind":"function","modifiers":[],"name":"assertLeDecimal","nameLocation":"64551:15:15","parameters":{"id":14733,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14728,"mutability":"mutable","name":"left","nameLocation":"64575:4:15","nodeType":"VariableDeclaration","scope":14735,"src":"64567:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14727,"name":"uint256","nodeType":"ElementaryTypeName","src":"64567:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14730,"mutability":"mutable","name":"right","nameLocation":"64589:5:15","nodeType":"VariableDeclaration","scope":14735,"src":"64581:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14729,"name":"uint256","nodeType":"ElementaryTypeName","src":"64581:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14732,"mutability":"mutable","name":"decimals","nameLocation":"64604:8:15","nodeType":"VariableDeclaration","scope":14735,"src":"64596:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14731,"name":"uint256","nodeType":"ElementaryTypeName","src":"64596:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"64566:47:15"},"returnParameters":{"id":14734,"nodeType":"ParameterList","parameters":[],"src":"64627:0:15"},"scope":15595,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14747,"nodeType":"FunctionDefinition","src":"64840:109:15","nodes":[],"documentation":{"id":14736,"nodeType":"StructuredDocumentation","src":"64634:201:15","text":"Compares two `uint256` values. Expects first value to be less than or equal to second.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"7fefbbe0","implemented":false,"kind":"function","modifiers":[],"name":"assertLeDecimal","nameLocation":"64849:15:15","parameters":{"id":14745,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14738,"mutability":"mutable","name":"left","nameLocation":"64873:4:15","nodeType":"VariableDeclaration","scope":14747,"src":"64865:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14737,"name":"uint256","nodeType":"ElementaryTypeName","src":"64865:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14740,"mutability":"mutable","name":"right","nameLocation":"64887:5:15","nodeType":"VariableDeclaration","scope":14747,"src":"64879:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14739,"name":"uint256","nodeType":"ElementaryTypeName","src":"64879:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14742,"mutability":"mutable","name":"decimals","nameLocation":"64902:8:15","nodeType":"VariableDeclaration","scope":14747,"src":"64894:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14741,"name":"uint256","nodeType":"ElementaryTypeName","src":"64894:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14744,"mutability":"mutable","name":"error","nameLocation":"64928:5:15","nodeType":"VariableDeclaration","scope":14747,"src":"64912:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14743,"name":"string","nodeType":"ElementaryTypeName","src":"64912:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"64864:70:15"},"returnParameters":{"id":14746,"nodeType":"ParameterList","parameters":[],"src":"64948:0:15"},"scope":15595,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14757,"nodeType":"FunctionDefinition","src":"65106:84:15","nodes":[],"documentation":{"id":14748,"nodeType":"StructuredDocumentation","src":"64955:146:15","text":"Compares two `int256` values. Expects first value to be less than or equal to second.\n Formats values with decimals in failure message."},"functionSelector":"11d1364a","implemented":false,"kind":"function","modifiers":[],"name":"assertLeDecimal","nameLocation":"65115:15:15","parameters":{"id":14755,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14750,"mutability":"mutable","name":"left","nameLocation":"65138:4:15","nodeType":"VariableDeclaration","scope":14757,"src":"65131:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14749,"name":"int256","nodeType":"ElementaryTypeName","src":"65131:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14752,"mutability":"mutable","name":"right","nameLocation":"65151:5:15","nodeType":"VariableDeclaration","scope":14757,"src":"65144:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14751,"name":"int256","nodeType":"ElementaryTypeName","src":"65144:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14754,"mutability":"mutable","name":"decimals","nameLocation":"65166:8:15","nodeType":"VariableDeclaration","scope":14757,"src":"65158:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14753,"name":"uint256","nodeType":"ElementaryTypeName","src":"65158:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"65130:45:15"},"returnParameters":{"id":14756,"nodeType":"ParameterList","parameters":[],"src":"65189:0:15"},"scope":15595,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14769,"nodeType":"FunctionDefinition","src":"65401:107:15","nodes":[],"documentation":{"id":14758,"nodeType":"StructuredDocumentation","src":"65196:200:15","text":"Compares two `int256` values. Expects first value to be less than or equal to second.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"aa5cf788","implemented":false,"kind":"function","modifiers":[],"name":"assertLeDecimal","nameLocation":"65410:15:15","parameters":{"id":14767,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14760,"mutability":"mutable","name":"left","nameLocation":"65433:4:15","nodeType":"VariableDeclaration","scope":14769,"src":"65426:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14759,"name":"int256","nodeType":"ElementaryTypeName","src":"65426:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14762,"mutability":"mutable","name":"right","nameLocation":"65446:5:15","nodeType":"VariableDeclaration","scope":14769,"src":"65439:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14761,"name":"int256","nodeType":"ElementaryTypeName","src":"65439:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14764,"mutability":"mutable","name":"decimals","nameLocation":"65461:8:15","nodeType":"VariableDeclaration","scope":14769,"src":"65453:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14763,"name":"uint256","nodeType":"ElementaryTypeName","src":"65453:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14766,"mutability":"mutable","name":"error","nameLocation":"65487:5:15","nodeType":"VariableDeclaration","scope":14769,"src":"65471:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14765,"name":"string","nodeType":"ElementaryTypeName","src":"65471:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"65425:68:15"},"returnParameters":{"id":14768,"nodeType":"ParameterList","parameters":[],"src":"65507:0:15"},"scope":15595,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14777,"nodeType":"FunctionDefinition","src":"65609:61:15","nodes":[],"documentation":{"id":14770,"nodeType":"StructuredDocumentation","src":"65514:90:15","text":"Compares two `uint256` values. Expects first value to be less than or equal to second."},"functionSelector":"8466f415","implemented":false,"kind":"function","modifiers":[],"name":"assertLe","nameLocation":"65618:8:15","parameters":{"id":14775,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14772,"mutability":"mutable","name":"left","nameLocation":"65635:4:15","nodeType":"VariableDeclaration","scope":14777,"src":"65627:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14771,"name":"uint256","nodeType":"ElementaryTypeName","src":"65627:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14774,"mutability":"mutable","name":"right","nameLocation":"65649:5:15","nodeType":"VariableDeclaration","scope":14777,"src":"65641:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14773,"name":"uint256","nodeType":"ElementaryTypeName","src":"65641:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"65626:29:15"},"returnParameters":{"id":14776,"nodeType":"ParameterList","parameters":[],"src":"65669:0:15"},"scope":15595,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14787,"nodeType":"FunctionDefinition","src":"65833:84:15","nodes":[],"documentation":{"id":14778,"nodeType":"StructuredDocumentation","src":"65676:152:15","text":"Compares two `uint256` values. Expects first value to be less than or equal to second.\n Includes error message into revert string on failure."},"functionSelector":"d17d4b0d","implemented":false,"kind":"function","modifiers":[],"name":"assertLe","nameLocation":"65842:8:15","parameters":{"id":14785,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14780,"mutability":"mutable","name":"left","nameLocation":"65859:4:15","nodeType":"VariableDeclaration","scope":14787,"src":"65851:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14779,"name":"uint256","nodeType":"ElementaryTypeName","src":"65851:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14782,"mutability":"mutable","name":"right","nameLocation":"65873:5:15","nodeType":"VariableDeclaration","scope":14787,"src":"65865:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14781,"name":"uint256","nodeType":"ElementaryTypeName","src":"65865:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14784,"mutability":"mutable","name":"error","nameLocation":"65896:5:15","nodeType":"VariableDeclaration","scope":14787,"src":"65880:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14783,"name":"string","nodeType":"ElementaryTypeName","src":"65880:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"65850:52:15"},"returnParameters":{"id":14786,"nodeType":"ParameterList","parameters":[],"src":"65916:0:15"},"scope":15595,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14795,"nodeType":"FunctionDefinition","src":"66017:59:15","nodes":[],"documentation":{"id":14788,"nodeType":"StructuredDocumentation","src":"65923:89:15","text":"Compares two `int256` values. Expects first value to be less than or equal to second."},"functionSelector":"95fd154e","implemented":false,"kind":"function","modifiers":[],"name":"assertLe","nameLocation":"66026:8:15","parameters":{"id":14793,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14790,"mutability":"mutable","name":"left","nameLocation":"66042:4:15","nodeType":"VariableDeclaration","scope":14795,"src":"66035:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14789,"name":"int256","nodeType":"ElementaryTypeName","src":"66035:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14792,"mutability":"mutable","name":"right","nameLocation":"66055:5:15","nodeType":"VariableDeclaration","scope":14795,"src":"66048:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14791,"name":"int256","nodeType":"ElementaryTypeName","src":"66048:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"66034:27:15"},"returnParameters":{"id":14794,"nodeType":"ParameterList","parameters":[],"src":"66075:0:15"},"scope":15595,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14805,"nodeType":"FunctionDefinition","src":"66238:82:15","nodes":[],"documentation":{"id":14796,"nodeType":"StructuredDocumentation","src":"66082:151:15","text":"Compares two `int256` values. Expects first value to be less than or equal to second.\n Includes error message into revert string on failure."},"functionSelector":"4dfe692c","implemented":false,"kind":"function","modifiers":[],"name":"assertLe","nameLocation":"66247:8:15","parameters":{"id":14803,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14798,"mutability":"mutable","name":"left","nameLocation":"66263:4:15","nodeType":"VariableDeclaration","scope":14805,"src":"66256:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14797,"name":"int256","nodeType":"ElementaryTypeName","src":"66256:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14800,"mutability":"mutable","name":"right","nameLocation":"66276:5:15","nodeType":"VariableDeclaration","scope":14805,"src":"66269:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14799,"name":"int256","nodeType":"ElementaryTypeName","src":"66269:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14802,"mutability":"mutable","name":"error","nameLocation":"66299:5:15","nodeType":"VariableDeclaration","scope":14805,"src":"66283:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14801,"name":"string","nodeType":"ElementaryTypeName","src":"66283:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"66255:50:15"},"returnParameters":{"id":14804,"nodeType":"ParameterList","parameters":[],"src":"66319:0:15"},"scope":15595,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14815,"nodeType":"FunctionDefinition","src":"66466:86:15","nodes":[],"documentation":{"id":14806,"nodeType":"StructuredDocumentation","src":"66326:135:15","text":"Compares two `uint256` values. Expects first value to be less than second.\n Formats values with decimals in failure message."},"functionSelector":"2077337e","implemented":false,"kind":"function","modifiers":[],"name":"assertLtDecimal","nameLocation":"66475:15:15","parameters":{"id":14813,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14808,"mutability":"mutable","name":"left","nameLocation":"66499:4:15","nodeType":"VariableDeclaration","scope":14815,"src":"66491:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14807,"name":"uint256","nodeType":"ElementaryTypeName","src":"66491:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14810,"mutability":"mutable","name":"right","nameLocation":"66513:5:15","nodeType":"VariableDeclaration","scope":14815,"src":"66505:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14809,"name":"uint256","nodeType":"ElementaryTypeName","src":"66505:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14812,"mutability":"mutable","name":"decimals","nameLocation":"66528:8:15","nodeType":"VariableDeclaration","scope":14815,"src":"66520:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14811,"name":"uint256","nodeType":"ElementaryTypeName","src":"66520:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"66490:47:15"},"returnParameters":{"id":14814,"nodeType":"ParameterList","parameters":[],"src":"66551:0:15"},"scope":15595,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14827,"nodeType":"FunctionDefinition","src":"66752:109:15","nodes":[],"documentation":{"id":14816,"nodeType":"StructuredDocumentation","src":"66558:189:15","text":"Compares two `uint256` values. Expects first value to be less than second.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"a972d037","implemented":false,"kind":"function","modifiers":[],"name":"assertLtDecimal","nameLocation":"66761:15:15","parameters":{"id":14825,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14818,"mutability":"mutable","name":"left","nameLocation":"66785:4:15","nodeType":"VariableDeclaration","scope":14827,"src":"66777:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14817,"name":"uint256","nodeType":"ElementaryTypeName","src":"66777:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14820,"mutability":"mutable","name":"right","nameLocation":"66799:5:15","nodeType":"VariableDeclaration","scope":14827,"src":"66791:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14819,"name":"uint256","nodeType":"ElementaryTypeName","src":"66791:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14822,"mutability":"mutable","name":"decimals","nameLocation":"66814:8:15","nodeType":"VariableDeclaration","scope":14827,"src":"66806:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14821,"name":"uint256","nodeType":"ElementaryTypeName","src":"66806:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14824,"mutability":"mutable","name":"error","nameLocation":"66840:5:15","nodeType":"VariableDeclaration","scope":14827,"src":"66824:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14823,"name":"string","nodeType":"ElementaryTypeName","src":"66824:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"66776:70:15"},"returnParameters":{"id":14826,"nodeType":"ParameterList","parameters":[],"src":"66860:0:15"},"scope":15595,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14837,"nodeType":"FunctionDefinition","src":"67006:84:15","nodes":[],"documentation":{"id":14828,"nodeType":"StructuredDocumentation","src":"66867:134:15","text":"Compares two `int256` values. Expects first value to be less than second.\n Formats values with decimals in failure message."},"functionSelector":"dbe8d88b","implemented":false,"kind":"function","modifiers":[],"name":"assertLtDecimal","nameLocation":"67015:15:15","parameters":{"id":14835,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14830,"mutability":"mutable","name":"left","nameLocation":"67038:4:15","nodeType":"VariableDeclaration","scope":14837,"src":"67031:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14829,"name":"int256","nodeType":"ElementaryTypeName","src":"67031:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14832,"mutability":"mutable","name":"right","nameLocation":"67051:5:15","nodeType":"VariableDeclaration","scope":14837,"src":"67044:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14831,"name":"int256","nodeType":"ElementaryTypeName","src":"67044:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14834,"mutability":"mutable","name":"decimals","nameLocation":"67066:8:15","nodeType":"VariableDeclaration","scope":14837,"src":"67058:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14833,"name":"uint256","nodeType":"ElementaryTypeName","src":"67058:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"67030:45:15"},"returnParameters":{"id":14836,"nodeType":"ParameterList","parameters":[],"src":"67089:0:15"},"scope":15595,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14849,"nodeType":"FunctionDefinition","src":"67289:107:15","nodes":[],"documentation":{"id":14838,"nodeType":"StructuredDocumentation","src":"67096:188:15","text":"Compares two `int256` values. Expects first value to be less than second.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"40f0b4e0","implemented":false,"kind":"function","modifiers":[],"name":"assertLtDecimal","nameLocation":"67298:15:15","parameters":{"id":14847,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14840,"mutability":"mutable","name":"left","nameLocation":"67321:4:15","nodeType":"VariableDeclaration","scope":14849,"src":"67314:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14839,"name":"int256","nodeType":"ElementaryTypeName","src":"67314:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14842,"mutability":"mutable","name":"right","nameLocation":"67334:5:15","nodeType":"VariableDeclaration","scope":14849,"src":"67327:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14841,"name":"int256","nodeType":"ElementaryTypeName","src":"67327:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14844,"mutability":"mutable","name":"decimals","nameLocation":"67349:8:15","nodeType":"VariableDeclaration","scope":14849,"src":"67341:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14843,"name":"uint256","nodeType":"ElementaryTypeName","src":"67341:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14846,"mutability":"mutable","name":"error","nameLocation":"67375:5:15","nodeType":"VariableDeclaration","scope":14849,"src":"67359:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14845,"name":"string","nodeType":"ElementaryTypeName","src":"67359:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"67313:68:15"},"returnParameters":{"id":14848,"nodeType":"ParameterList","parameters":[],"src":"67395:0:15"},"scope":15595,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14857,"nodeType":"FunctionDefinition","src":"67485:61:15","nodes":[],"documentation":{"id":14850,"nodeType":"StructuredDocumentation","src":"67402:78:15","text":"Compares two `uint256` values. Expects first value to be less than second."},"functionSelector":"b12fc005","implemented":false,"kind":"function","modifiers":[],"name":"assertLt","nameLocation":"67494:8:15","parameters":{"id":14855,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14852,"mutability":"mutable","name":"left","nameLocation":"67511:4:15","nodeType":"VariableDeclaration","scope":14857,"src":"67503:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14851,"name":"uint256","nodeType":"ElementaryTypeName","src":"67503:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14854,"mutability":"mutable","name":"right","nameLocation":"67525:5:15","nodeType":"VariableDeclaration","scope":14857,"src":"67517:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14853,"name":"uint256","nodeType":"ElementaryTypeName","src":"67517:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"67502:29:15"},"returnParameters":{"id":14856,"nodeType":"ParameterList","parameters":[],"src":"67545:0:15"},"scope":15595,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14867,"nodeType":"FunctionDefinition","src":"67697:84:15","nodes":[],"documentation":{"id":14858,"nodeType":"StructuredDocumentation","src":"67552:140:15","text":"Compares two `uint256` values. Expects first value to be less than second.\n Includes error message into revert string on failure."},"functionSelector":"65d5c135","implemented":false,"kind":"function","modifiers":[],"name":"assertLt","nameLocation":"67706:8:15","parameters":{"id":14865,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14860,"mutability":"mutable","name":"left","nameLocation":"67723:4:15","nodeType":"VariableDeclaration","scope":14867,"src":"67715:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14859,"name":"uint256","nodeType":"ElementaryTypeName","src":"67715:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14862,"mutability":"mutable","name":"right","nameLocation":"67737:5:15","nodeType":"VariableDeclaration","scope":14867,"src":"67729:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14861,"name":"uint256","nodeType":"ElementaryTypeName","src":"67729:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14864,"mutability":"mutable","name":"error","nameLocation":"67760:5:15","nodeType":"VariableDeclaration","scope":14867,"src":"67744:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14863,"name":"string","nodeType":"ElementaryTypeName","src":"67744:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"67714:52:15"},"returnParameters":{"id":14866,"nodeType":"ParameterList","parameters":[],"src":"67780:0:15"},"scope":15595,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14875,"nodeType":"FunctionDefinition","src":"67869:59:15","nodes":[],"documentation":{"id":14868,"nodeType":"StructuredDocumentation","src":"67787:77:15","text":"Compares two `int256` values. Expects first value to be less than second."},"functionSelector":"3e914080","implemented":false,"kind":"function","modifiers":[],"name":"assertLt","nameLocation":"67878:8:15","parameters":{"id":14873,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14870,"mutability":"mutable","name":"left","nameLocation":"67894:4:15","nodeType":"VariableDeclaration","scope":14875,"src":"67887:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14869,"name":"int256","nodeType":"ElementaryTypeName","src":"67887:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14872,"mutability":"mutable","name":"right","nameLocation":"67907:5:15","nodeType":"VariableDeclaration","scope":14875,"src":"67900:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14871,"name":"int256","nodeType":"ElementaryTypeName","src":"67900:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"67886:27:15"},"returnParameters":{"id":14874,"nodeType":"ParameterList","parameters":[],"src":"67927:0:15"},"scope":15595,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14885,"nodeType":"FunctionDefinition","src":"68078:82:15","nodes":[],"documentation":{"id":14876,"nodeType":"StructuredDocumentation","src":"67934:139:15","text":"Compares two `int256` values. Expects first value to be less than second.\n Includes error message into revert string on failure."},"functionSelector":"9ff531e3","implemented":false,"kind":"function","modifiers":[],"name":"assertLt","nameLocation":"68087:8:15","parameters":{"id":14883,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14878,"mutability":"mutable","name":"left","nameLocation":"68103:4:15","nodeType":"VariableDeclaration","scope":14885,"src":"68096:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14877,"name":"int256","nodeType":"ElementaryTypeName","src":"68096:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14880,"mutability":"mutable","name":"right","nameLocation":"68116:5:15","nodeType":"VariableDeclaration","scope":14885,"src":"68109:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14879,"name":"int256","nodeType":"ElementaryTypeName","src":"68109:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14882,"mutability":"mutable","name":"error","nameLocation":"68139:5:15","nodeType":"VariableDeclaration","scope":14885,"src":"68123:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14881,"name":"string","nodeType":"ElementaryTypeName","src":"68123:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"68095:50:15"},"returnParameters":{"id":14884,"nodeType":"ParameterList","parameters":[],"src":"68159:0:15"},"scope":15595,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14895,"nodeType":"FunctionDefinition","src":"68273:89:15","nodes":[],"documentation":{"id":14886,"nodeType":"StructuredDocumentation","src":"68166:102:15","text":"Asserts that two `uint256` values are not equal, formatting them with decimals in failure message."},"functionSelector":"669efca7","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEqDecimal","nameLocation":"68282:18:15","parameters":{"id":14893,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14888,"mutability":"mutable","name":"left","nameLocation":"68309:4:15","nodeType":"VariableDeclaration","scope":14895,"src":"68301:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14887,"name":"uint256","nodeType":"ElementaryTypeName","src":"68301:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14890,"mutability":"mutable","name":"right","nameLocation":"68323:5:15","nodeType":"VariableDeclaration","scope":14895,"src":"68315:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14889,"name":"uint256","nodeType":"ElementaryTypeName","src":"68315:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14892,"mutability":"mutable","name":"decimals","nameLocation":"68338:8:15","nodeType":"VariableDeclaration","scope":14895,"src":"68330:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14891,"name":"uint256","nodeType":"ElementaryTypeName","src":"68330:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"68300:47:15"},"returnParameters":{"id":14894,"nodeType":"ParameterList","parameters":[],"src":"68361:0:15"},"scope":15595,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14907,"nodeType":"FunctionDefinition","src":"68537:112:15","nodes":[],"documentation":{"id":14896,"nodeType":"StructuredDocumentation","src":"68368:164:15","text":"Asserts that two `uint256` values are not equal, formatting them with decimals in failure message.\n Includes error message into revert string on failure."},"functionSelector":"f5a55558","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEqDecimal","nameLocation":"68546:18:15","parameters":{"id":14905,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14898,"mutability":"mutable","name":"left","nameLocation":"68573:4:15","nodeType":"VariableDeclaration","scope":14907,"src":"68565:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14897,"name":"uint256","nodeType":"ElementaryTypeName","src":"68565:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14900,"mutability":"mutable","name":"right","nameLocation":"68587:5:15","nodeType":"VariableDeclaration","scope":14907,"src":"68579:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14899,"name":"uint256","nodeType":"ElementaryTypeName","src":"68579:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14902,"mutability":"mutable","name":"decimals","nameLocation":"68602:8:15","nodeType":"VariableDeclaration","scope":14907,"src":"68594:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14901,"name":"uint256","nodeType":"ElementaryTypeName","src":"68594:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14904,"mutability":"mutable","name":"error","nameLocation":"68628:5:15","nodeType":"VariableDeclaration","scope":14907,"src":"68612:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14903,"name":"string","nodeType":"ElementaryTypeName","src":"68612:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"68564:70:15"},"returnParameters":{"id":14906,"nodeType":"ParameterList","parameters":[],"src":"68648:0:15"},"scope":15595,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14917,"nodeType":"FunctionDefinition","src":"68761:87:15","nodes":[],"documentation":{"id":14908,"nodeType":"StructuredDocumentation","src":"68655:101:15","text":"Asserts that two `int256` values are not equal, formatting them with decimals in failure message."},"functionSelector":"14e75680","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEqDecimal","nameLocation":"68770:18:15","parameters":{"id":14915,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14910,"mutability":"mutable","name":"left","nameLocation":"68796:4:15","nodeType":"VariableDeclaration","scope":14917,"src":"68789:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14909,"name":"int256","nodeType":"ElementaryTypeName","src":"68789:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14912,"mutability":"mutable","name":"right","nameLocation":"68809:5:15","nodeType":"VariableDeclaration","scope":14917,"src":"68802:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14911,"name":"int256","nodeType":"ElementaryTypeName","src":"68802:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14914,"mutability":"mutable","name":"decimals","nameLocation":"68824:8:15","nodeType":"VariableDeclaration","scope":14917,"src":"68816:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14913,"name":"uint256","nodeType":"ElementaryTypeName","src":"68816:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"68788:45:15"},"returnParameters":{"id":14916,"nodeType":"ParameterList","parameters":[],"src":"68847:0:15"},"scope":15595,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14929,"nodeType":"FunctionDefinition","src":"69022:110:15","nodes":[],"documentation":{"id":14918,"nodeType":"StructuredDocumentation","src":"68854:163:15","text":"Asserts that two `int256` values are not equal, formatting them with decimals in failure message.\n Includes error message into revert string on failure."},"functionSelector":"33949f0b","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEqDecimal","nameLocation":"69031:18:15","parameters":{"id":14927,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14920,"mutability":"mutable","name":"left","nameLocation":"69057:4:15","nodeType":"VariableDeclaration","scope":14929,"src":"69050:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14919,"name":"int256","nodeType":"ElementaryTypeName","src":"69050:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14922,"mutability":"mutable","name":"right","nameLocation":"69070:5:15","nodeType":"VariableDeclaration","scope":14929,"src":"69063:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14921,"name":"int256","nodeType":"ElementaryTypeName","src":"69063:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14924,"mutability":"mutable","name":"decimals","nameLocation":"69085:8:15","nodeType":"VariableDeclaration","scope":14929,"src":"69077:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14923,"name":"uint256","nodeType":"ElementaryTypeName","src":"69077:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14926,"mutability":"mutable","name":"error","nameLocation":"69111:5:15","nodeType":"VariableDeclaration","scope":14929,"src":"69095:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14925,"name":"string","nodeType":"ElementaryTypeName","src":"69095:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"69049:68:15"},"returnParameters":{"id":14928,"nodeType":"ParameterList","parameters":[],"src":"69131:0:15"},"scope":15595,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14937,"nodeType":"FunctionDefinition","src":"69192:58:15","nodes":[],"documentation":{"id":14930,"nodeType":"StructuredDocumentation","src":"69138:49:15","text":"Asserts that two `bool` values are not equal."},"functionSelector":"236e4d66","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"69201:11:15","parameters":{"id":14935,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14932,"mutability":"mutable","name":"left","nameLocation":"69218:4:15","nodeType":"VariableDeclaration","scope":14937,"src":"69213:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":14931,"name":"bool","nodeType":"ElementaryTypeName","src":"69213:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":14934,"mutability":"mutable","name":"right","nameLocation":"69229:5:15","nodeType":"VariableDeclaration","scope":14937,"src":"69224:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":14933,"name":"bool","nodeType":"ElementaryTypeName","src":"69224:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"69212:23:15"},"returnParameters":{"id":14936,"nodeType":"ParameterList","parameters":[],"src":"69249:0:15"},"scope":15595,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14947,"nodeType":"FunctionDefinition","src":"69367:81:15","nodes":[],"documentation":{"id":14938,"nodeType":"StructuredDocumentation","src":"69256:106:15","text":"Asserts that two `bool` values are not equal and includes error message into revert string on failure."},"functionSelector":"1091a261","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"69376:11:15","parameters":{"id":14945,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14940,"mutability":"mutable","name":"left","nameLocation":"69393:4:15","nodeType":"VariableDeclaration","scope":14947,"src":"69388:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":14939,"name":"bool","nodeType":"ElementaryTypeName","src":"69388:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":14942,"mutability":"mutable","name":"right","nameLocation":"69404:5:15","nodeType":"VariableDeclaration","scope":14947,"src":"69399:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":14941,"name":"bool","nodeType":"ElementaryTypeName","src":"69399:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":14944,"mutability":"mutable","name":"error","nameLocation":"69427:5:15","nodeType":"VariableDeclaration","scope":14947,"src":"69411:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14943,"name":"string","nodeType":"ElementaryTypeName","src":"69411:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"69387:46:15"},"returnParameters":{"id":14946,"nodeType":"ParameterList","parameters":[],"src":"69447:0:15"},"scope":15595,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14955,"nodeType":"FunctionDefinition","src":"69510:80:15","nodes":[],"documentation":{"id":14948,"nodeType":"StructuredDocumentation","src":"69454:51:15","text":"Asserts that two `string` values are not equal."},"functionSelector":"6a8237b3","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"69519:11:15","parameters":{"id":14953,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14950,"mutability":"mutable","name":"left","nameLocation":"69547:4:15","nodeType":"VariableDeclaration","scope":14955,"src":"69531:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14949,"name":"string","nodeType":"ElementaryTypeName","src":"69531:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14952,"mutability":"mutable","name":"right","nameLocation":"69569:5:15","nodeType":"VariableDeclaration","scope":14955,"src":"69553:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14951,"name":"string","nodeType":"ElementaryTypeName","src":"69553:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"69530:45:15"},"returnParameters":{"id":14954,"nodeType":"ParameterList","parameters":[],"src":"69589:0:15"},"scope":15595,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14965,"nodeType":"FunctionDefinition","src":"69709:103:15","nodes":[],"documentation":{"id":14956,"nodeType":"StructuredDocumentation","src":"69596:108:15","text":"Asserts that two `string` values are not equal and includes error message into revert string on failure."},"functionSelector":"78bdcea7","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"69718:11:15","parameters":{"id":14963,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14958,"mutability":"mutable","name":"left","nameLocation":"69746:4:15","nodeType":"VariableDeclaration","scope":14965,"src":"69730:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14957,"name":"string","nodeType":"ElementaryTypeName","src":"69730:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14960,"mutability":"mutable","name":"right","nameLocation":"69768:5:15","nodeType":"VariableDeclaration","scope":14965,"src":"69752:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14959,"name":"string","nodeType":"ElementaryTypeName","src":"69752:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14962,"mutability":"mutable","name":"error","nameLocation":"69791:5:15","nodeType":"VariableDeclaration","scope":14965,"src":"69775:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14961,"name":"string","nodeType":"ElementaryTypeName","src":"69775:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"69729:68:15"},"returnParameters":{"id":14964,"nodeType":"ParameterList","parameters":[],"src":"69811:0:15"},"scope":15595,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14973,"nodeType":"FunctionDefinition","src":"69873:78:15","nodes":[],"documentation":{"id":14966,"nodeType":"StructuredDocumentation","src":"69818:50:15","text":"Asserts that two `bytes` values are not equal."},"functionSelector":"3cf78e28","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"69882:11:15","parameters":{"id":14971,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14968,"mutability":"mutable","name":"left","nameLocation":"69909:4:15","nodeType":"VariableDeclaration","scope":14973,"src":"69894:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":14967,"name":"bytes","nodeType":"ElementaryTypeName","src":"69894:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":14970,"mutability":"mutable","name":"right","nameLocation":"69930:5:15","nodeType":"VariableDeclaration","scope":14973,"src":"69915:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":14969,"name":"bytes","nodeType":"ElementaryTypeName","src":"69915:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"69893:43:15"},"returnParameters":{"id":14972,"nodeType":"ParameterList","parameters":[],"src":"69950:0:15"},"scope":15595,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14983,"nodeType":"FunctionDefinition","src":"70069:101:15","nodes":[],"documentation":{"id":14974,"nodeType":"StructuredDocumentation","src":"69957:107:15","text":"Asserts that two `bytes` values are not equal and includes error message into revert string on failure."},"functionSelector":"9507540e","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"70078:11:15","parameters":{"id":14981,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14976,"mutability":"mutable","name":"left","nameLocation":"70105:4:15","nodeType":"VariableDeclaration","scope":14983,"src":"70090:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":14975,"name":"bytes","nodeType":"ElementaryTypeName","src":"70090:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":14978,"mutability":"mutable","name":"right","nameLocation":"70126:5:15","nodeType":"VariableDeclaration","scope":14983,"src":"70111:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":14977,"name":"bytes","nodeType":"ElementaryTypeName","src":"70111:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":14980,"mutability":"mutable","name":"error","nameLocation":"70149:5:15","nodeType":"VariableDeclaration","scope":14983,"src":"70133:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14979,"name":"string","nodeType":"ElementaryTypeName","src":"70133:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"70089:66:15"},"returnParameters":{"id":14982,"nodeType":"ParameterList","parameters":[],"src":"70169:0:15"},"scope":15595,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14993,"nodeType":"FunctionDefinition","src":"70240:80:15","nodes":[],"documentation":{"id":14984,"nodeType":"StructuredDocumentation","src":"70176:59:15","text":"Asserts that two arrays of `bool` values are not equal."},"functionSelector":"286fafea","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"70249:11:15","parameters":{"id":14991,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14987,"mutability":"mutable","name":"left","nameLocation":"70277:4:15","nodeType":"VariableDeclaration","scope":14993,"src":"70261:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":14985,"name":"bool","nodeType":"ElementaryTypeName","src":"70261:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":14986,"nodeType":"ArrayTypeName","src":"70261:6:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":14990,"mutability":"mutable","name":"right","nameLocation":"70299:5:15","nodeType":"VariableDeclaration","scope":14993,"src":"70283:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":14988,"name":"bool","nodeType":"ElementaryTypeName","src":"70283:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":14989,"nodeType":"ArrayTypeName","src":"70283:6:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"src":"70260:45:15"},"returnParameters":{"id":14992,"nodeType":"ParameterList","parameters":[],"src":"70319:0:15"},"scope":15595,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15005,"nodeType":"FunctionDefinition","src":"70447:103:15","nodes":[],"documentation":{"id":14994,"nodeType":"StructuredDocumentation","src":"70326:116:15","text":"Asserts that two arrays of `bool` values are not equal and includes error message into revert string on failure."},"functionSelector":"62c6f9fb","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"70456:11:15","parameters":{"id":15003,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14997,"mutability":"mutable","name":"left","nameLocation":"70484:4:15","nodeType":"VariableDeclaration","scope":15005,"src":"70468:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":14995,"name":"bool","nodeType":"ElementaryTypeName","src":"70468:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":14996,"nodeType":"ArrayTypeName","src":"70468:6:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":15000,"mutability":"mutable","name":"right","nameLocation":"70506:5:15","nodeType":"VariableDeclaration","scope":15005,"src":"70490:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":14998,"name":"bool","nodeType":"ElementaryTypeName","src":"70490:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":14999,"nodeType":"ArrayTypeName","src":"70490:6:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":15002,"mutability":"mutable","name":"error","nameLocation":"70529:5:15","nodeType":"VariableDeclaration","scope":15005,"src":"70513:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15001,"name":"string","nodeType":"ElementaryTypeName","src":"70513:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"70467:68:15"},"returnParameters":{"id":15004,"nodeType":"ParameterList","parameters":[],"src":"70549:0:15"},"scope":15595,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15015,"nodeType":"FunctionDefinition","src":"70623:86:15","nodes":[],"documentation":{"id":15006,"nodeType":"StructuredDocumentation","src":"70556:62:15","text":"Asserts that two arrays of `uint256` values are not equal."},"functionSelector":"56f29cba","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"70632:11:15","parameters":{"id":15013,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15009,"mutability":"mutable","name":"left","nameLocation":"70663:4:15","nodeType":"VariableDeclaration","scope":15015,"src":"70644:23:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":15007,"name":"uint256","nodeType":"ElementaryTypeName","src":"70644:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":15008,"nodeType":"ArrayTypeName","src":"70644:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":15012,"mutability":"mutable","name":"right","nameLocation":"70688:5:15","nodeType":"VariableDeclaration","scope":15015,"src":"70669:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":15010,"name":"uint256","nodeType":"ElementaryTypeName","src":"70669:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":15011,"nodeType":"ArrayTypeName","src":"70669:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"70643:51:15"},"returnParameters":{"id":15014,"nodeType":"ParameterList","parameters":[],"src":"70708:0:15"},"scope":15595,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15027,"nodeType":"FunctionDefinition","src":"70839:109:15","nodes":[],"documentation":{"id":15016,"nodeType":"StructuredDocumentation","src":"70715:119:15","text":"Asserts that two arrays of `uint256` values are not equal and includes error message into revert string on failure."},"functionSelector":"9a7fbd8f","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"70848:11:15","parameters":{"id":15025,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15019,"mutability":"mutable","name":"left","nameLocation":"70879:4:15","nodeType":"VariableDeclaration","scope":15027,"src":"70860:23:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":15017,"name":"uint256","nodeType":"ElementaryTypeName","src":"70860:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":15018,"nodeType":"ArrayTypeName","src":"70860:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":15022,"mutability":"mutable","name":"right","nameLocation":"70904:5:15","nodeType":"VariableDeclaration","scope":15027,"src":"70885:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":15020,"name":"uint256","nodeType":"ElementaryTypeName","src":"70885:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":15021,"nodeType":"ArrayTypeName","src":"70885:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":15024,"mutability":"mutable","name":"error","nameLocation":"70927:5:15","nodeType":"VariableDeclaration","scope":15027,"src":"70911:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15023,"name":"string","nodeType":"ElementaryTypeName","src":"70911:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"70859:74:15"},"returnParameters":{"id":15026,"nodeType":"ParameterList","parameters":[],"src":"70947:0:15"},"scope":15595,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15037,"nodeType":"FunctionDefinition","src":"71020:84:15","nodes":[],"documentation":{"id":15028,"nodeType":"StructuredDocumentation","src":"70954:61:15","text":"Asserts that two arrays of `int256` values are not equal."},"functionSelector":"0b72f4ef","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"71029:11:15","parameters":{"id":15035,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15031,"mutability":"mutable","name":"left","nameLocation":"71059:4:15","nodeType":"VariableDeclaration","scope":15037,"src":"71041:22:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":15029,"name":"int256","nodeType":"ElementaryTypeName","src":"71041:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":15030,"nodeType":"ArrayTypeName","src":"71041:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"},{"constant":false,"id":15034,"mutability":"mutable","name":"right","nameLocation":"71083:5:15","nodeType":"VariableDeclaration","scope":15037,"src":"71065:23:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":15032,"name":"int256","nodeType":"ElementaryTypeName","src":"71065:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":15033,"nodeType":"ArrayTypeName","src":"71065:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"}],"src":"71040:49:15"},"returnParameters":{"id":15036,"nodeType":"ParameterList","parameters":[],"src":"71103:0:15"},"scope":15595,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15049,"nodeType":"FunctionDefinition","src":"71233:107:15","nodes":[],"documentation":{"id":15038,"nodeType":"StructuredDocumentation","src":"71110:118:15","text":"Asserts that two arrays of `int256` values are not equal and includes error message into revert string on failure."},"functionSelector":"d3977322","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"71242:11:15","parameters":{"id":15047,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15041,"mutability":"mutable","name":"left","nameLocation":"71272:4:15","nodeType":"VariableDeclaration","scope":15049,"src":"71254:22:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":15039,"name":"int256","nodeType":"ElementaryTypeName","src":"71254:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":15040,"nodeType":"ArrayTypeName","src":"71254:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"},{"constant":false,"id":15044,"mutability":"mutable","name":"right","nameLocation":"71296:5:15","nodeType":"VariableDeclaration","scope":15049,"src":"71278:23:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":15042,"name":"int256","nodeType":"ElementaryTypeName","src":"71278:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":15043,"nodeType":"ArrayTypeName","src":"71278:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"},{"constant":false,"id":15046,"mutability":"mutable","name":"error","nameLocation":"71319:5:15","nodeType":"VariableDeclaration","scope":15049,"src":"71303:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15045,"name":"string","nodeType":"ElementaryTypeName","src":"71303:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"71253:72:15"},"returnParameters":{"id":15048,"nodeType":"ParameterList","parameters":[],"src":"71339:0:15"},"scope":15595,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15057,"nodeType":"FunctionDefinition","src":"71403:64:15","nodes":[],"documentation":{"id":15050,"nodeType":"StructuredDocumentation","src":"71346:52:15","text":"Asserts that two `uint256` values are not equal."},"functionSelector":"b7909320","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"71412:11:15","parameters":{"id":15055,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15052,"mutability":"mutable","name":"left","nameLocation":"71432:4:15","nodeType":"VariableDeclaration","scope":15057,"src":"71424:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15051,"name":"uint256","nodeType":"ElementaryTypeName","src":"71424:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15054,"mutability":"mutable","name":"right","nameLocation":"71446:5:15","nodeType":"VariableDeclaration","scope":15057,"src":"71438:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15053,"name":"uint256","nodeType":"ElementaryTypeName","src":"71438:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"71423:29:15"},"returnParameters":{"id":15056,"nodeType":"ParameterList","parameters":[],"src":"71466:0:15"},"scope":15595,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15067,"nodeType":"FunctionDefinition","src":"71540:86:15","nodes":[],"documentation":{"id":15058,"nodeType":"StructuredDocumentation","src":"71473:62:15","text":"Asserts that two arrays of `address` values are not equal."},"functionSelector":"46d0b252","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"71549:11:15","parameters":{"id":15065,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15061,"mutability":"mutable","name":"left","nameLocation":"71580:4:15","nodeType":"VariableDeclaration","scope":15067,"src":"71561:23:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":15059,"name":"address","nodeType":"ElementaryTypeName","src":"71561:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":15060,"nodeType":"ArrayTypeName","src":"71561:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":15064,"mutability":"mutable","name":"right","nameLocation":"71605:5:15","nodeType":"VariableDeclaration","scope":15067,"src":"71586:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":15062,"name":"address","nodeType":"ElementaryTypeName","src":"71586:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":15063,"nodeType":"ArrayTypeName","src":"71586:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"71560:51:15"},"returnParameters":{"id":15066,"nodeType":"ParameterList","parameters":[],"src":"71625:0:15"},"scope":15595,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15079,"nodeType":"FunctionDefinition","src":"71756:109:15","nodes":[],"documentation":{"id":15068,"nodeType":"StructuredDocumentation","src":"71632:119:15","text":"Asserts that two arrays of `address` values are not equal and includes error message into revert string on failure."},"functionSelector":"72c7e0b5","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"71765:11:15","parameters":{"id":15077,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15071,"mutability":"mutable","name":"left","nameLocation":"71796:4:15","nodeType":"VariableDeclaration","scope":15079,"src":"71777:23:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":15069,"name":"address","nodeType":"ElementaryTypeName","src":"71777:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":15070,"nodeType":"ArrayTypeName","src":"71777:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":15074,"mutability":"mutable","name":"right","nameLocation":"71821:5:15","nodeType":"VariableDeclaration","scope":15079,"src":"71802:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":15072,"name":"address","nodeType":"ElementaryTypeName","src":"71802:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":15073,"nodeType":"ArrayTypeName","src":"71802:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":15076,"mutability":"mutable","name":"error","nameLocation":"71844:5:15","nodeType":"VariableDeclaration","scope":15079,"src":"71828:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15075,"name":"string","nodeType":"ElementaryTypeName","src":"71828:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"71776:74:15"},"returnParameters":{"id":15078,"nodeType":"ParameterList","parameters":[],"src":"71864:0:15"},"scope":15595,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15089,"nodeType":"FunctionDefinition","src":"71938:86:15","nodes":[],"documentation":{"id":15080,"nodeType":"StructuredDocumentation","src":"71871:62:15","text":"Asserts that two arrays of `bytes32` values are not equal."},"functionSelector":"0603ea68","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"71947:11:15","parameters":{"id":15087,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15083,"mutability":"mutable","name":"left","nameLocation":"71978:4:15","nodeType":"VariableDeclaration","scope":15089,"src":"71959:23:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":15081,"name":"bytes32","nodeType":"ElementaryTypeName","src":"71959:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":15082,"nodeType":"ArrayTypeName","src":"71959:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":15086,"mutability":"mutable","name":"right","nameLocation":"72003:5:15","nodeType":"VariableDeclaration","scope":15089,"src":"71984:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":15084,"name":"bytes32","nodeType":"ElementaryTypeName","src":"71984:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":15085,"nodeType":"ArrayTypeName","src":"71984:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"71958:51:15"},"returnParameters":{"id":15088,"nodeType":"ParameterList","parameters":[],"src":"72023:0:15"},"scope":15595,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15101,"nodeType":"FunctionDefinition","src":"72154:109:15","nodes":[],"documentation":{"id":15090,"nodeType":"StructuredDocumentation","src":"72030:119:15","text":"Asserts that two arrays of `bytes32` values are not equal and includes error message into revert string on failure."},"functionSelector":"b873634c","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"72163:11:15","parameters":{"id":15099,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15093,"mutability":"mutable","name":"left","nameLocation":"72194:4:15","nodeType":"VariableDeclaration","scope":15101,"src":"72175:23:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":15091,"name":"bytes32","nodeType":"ElementaryTypeName","src":"72175:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":15092,"nodeType":"ArrayTypeName","src":"72175:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":15096,"mutability":"mutable","name":"right","nameLocation":"72219:5:15","nodeType":"VariableDeclaration","scope":15101,"src":"72200:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":15094,"name":"bytes32","nodeType":"ElementaryTypeName","src":"72200:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":15095,"nodeType":"ArrayTypeName","src":"72200:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":15098,"mutability":"mutable","name":"error","nameLocation":"72242:5:15","nodeType":"VariableDeclaration","scope":15101,"src":"72226:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15097,"name":"string","nodeType":"ElementaryTypeName","src":"72226:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"72174:74:15"},"returnParameters":{"id":15100,"nodeType":"ParameterList","parameters":[],"src":"72262:0:15"},"scope":15595,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15111,"nodeType":"FunctionDefinition","src":"72335:84:15","nodes":[],"documentation":{"id":15102,"nodeType":"StructuredDocumentation","src":"72269:61:15","text":"Asserts that two arrays of `string` values are not equal."},"functionSelector":"bdfacbe8","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"72344:11:15","parameters":{"id":15109,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15105,"mutability":"mutable","name":"left","nameLocation":"72374:4:15","nodeType":"VariableDeclaration","scope":15111,"src":"72356:22:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":15103,"name":"string","nodeType":"ElementaryTypeName","src":"72356:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":15104,"nodeType":"ArrayTypeName","src":"72356:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":15108,"mutability":"mutable","name":"right","nameLocation":"72398:5:15","nodeType":"VariableDeclaration","scope":15111,"src":"72380:23:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":15106,"name":"string","nodeType":"ElementaryTypeName","src":"72380:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":15107,"nodeType":"ArrayTypeName","src":"72380:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"72355:49:15"},"returnParameters":{"id":15110,"nodeType":"ParameterList","parameters":[],"src":"72418:0:15"},"scope":15595,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15123,"nodeType":"FunctionDefinition","src":"72548:107:15","nodes":[],"documentation":{"id":15112,"nodeType":"StructuredDocumentation","src":"72425:118:15","text":"Asserts that two arrays of `string` values are not equal and includes error message into revert string on failure."},"functionSelector":"b67187f3","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"72557:11:15","parameters":{"id":15121,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15115,"mutability":"mutable","name":"left","nameLocation":"72587:4:15","nodeType":"VariableDeclaration","scope":15123,"src":"72569:22:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":15113,"name":"string","nodeType":"ElementaryTypeName","src":"72569:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":15114,"nodeType":"ArrayTypeName","src":"72569:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":15118,"mutability":"mutable","name":"right","nameLocation":"72611:5:15","nodeType":"VariableDeclaration","scope":15123,"src":"72593:23:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":15116,"name":"string","nodeType":"ElementaryTypeName","src":"72593:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":15117,"nodeType":"ArrayTypeName","src":"72593:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":15120,"mutability":"mutable","name":"error","nameLocation":"72634:5:15","nodeType":"VariableDeclaration","scope":15123,"src":"72618:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15119,"name":"string","nodeType":"ElementaryTypeName","src":"72618:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"72568:72:15"},"returnParameters":{"id":15122,"nodeType":"ParameterList","parameters":[],"src":"72654:0:15"},"scope":15595,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15133,"nodeType":"FunctionDefinition","src":"72726:82:15","nodes":[],"documentation":{"id":15124,"nodeType":"StructuredDocumentation","src":"72661:60:15","text":"Asserts that two arrays of `bytes` values are not equal."},"functionSelector":"edecd035","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"72735:11:15","parameters":{"id":15131,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15127,"mutability":"mutable","name":"left","nameLocation":"72764:4:15","nodeType":"VariableDeclaration","scope":15133,"src":"72747:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":15125,"name":"bytes","nodeType":"ElementaryTypeName","src":"72747:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":15126,"nodeType":"ArrayTypeName","src":"72747:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":15130,"mutability":"mutable","name":"right","nameLocation":"72787:5:15","nodeType":"VariableDeclaration","scope":15133,"src":"72770:22:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":15128,"name":"bytes","nodeType":"ElementaryTypeName","src":"72770:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":15129,"nodeType":"ArrayTypeName","src":"72770:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"72746:47:15"},"returnParameters":{"id":15132,"nodeType":"ParameterList","parameters":[],"src":"72807:0:15"},"scope":15595,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15145,"nodeType":"FunctionDefinition","src":"72936:105:15","nodes":[],"documentation":{"id":15134,"nodeType":"StructuredDocumentation","src":"72814:117:15","text":"Asserts that two arrays of `bytes` values are not equal and includes error message into revert string on failure."},"functionSelector":"1dcd1f68","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"72945:11:15","parameters":{"id":15143,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15137,"mutability":"mutable","name":"left","nameLocation":"72974:4:15","nodeType":"VariableDeclaration","scope":15145,"src":"72957:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":15135,"name":"bytes","nodeType":"ElementaryTypeName","src":"72957:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":15136,"nodeType":"ArrayTypeName","src":"72957:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":15140,"mutability":"mutable","name":"right","nameLocation":"72997:5:15","nodeType":"VariableDeclaration","scope":15145,"src":"72980:22:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":15138,"name":"bytes","nodeType":"ElementaryTypeName","src":"72980:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":15139,"nodeType":"ArrayTypeName","src":"72980:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":15142,"mutability":"mutable","name":"error","nameLocation":"73020:5:15","nodeType":"VariableDeclaration","scope":15145,"src":"73004:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15141,"name":"string","nodeType":"ElementaryTypeName","src":"73004:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"72956:70:15"},"returnParameters":{"id":15144,"nodeType":"ParameterList","parameters":[],"src":"73040:0:15"},"scope":15595,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15155,"nodeType":"FunctionDefinition","src":"73161:87:15","nodes":[],"documentation":{"id":15146,"nodeType":"StructuredDocumentation","src":"73047:109:15","text":"Asserts that two `uint256` values are not equal and includes error message into revert string on failure."},"functionSelector":"98f9bdbd","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"73170:11:15","parameters":{"id":15153,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15148,"mutability":"mutable","name":"left","nameLocation":"73190:4:15","nodeType":"VariableDeclaration","scope":15155,"src":"73182:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15147,"name":"uint256","nodeType":"ElementaryTypeName","src":"73182:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15150,"mutability":"mutable","name":"right","nameLocation":"73204:5:15","nodeType":"VariableDeclaration","scope":15155,"src":"73196:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15149,"name":"uint256","nodeType":"ElementaryTypeName","src":"73196:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15152,"mutability":"mutable","name":"error","nameLocation":"73227:5:15","nodeType":"VariableDeclaration","scope":15155,"src":"73211:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15151,"name":"string","nodeType":"ElementaryTypeName","src":"73211:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"73181:52:15"},"returnParameters":{"id":15154,"nodeType":"ParameterList","parameters":[],"src":"73247:0:15"},"scope":15595,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15163,"nodeType":"FunctionDefinition","src":"73310:62:15","nodes":[],"documentation":{"id":15156,"nodeType":"StructuredDocumentation","src":"73254:51:15","text":"Asserts that two `int256` values are not equal."},"functionSelector":"f4c004e3","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"73319:11:15","parameters":{"id":15161,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15158,"mutability":"mutable","name":"left","nameLocation":"73338:4:15","nodeType":"VariableDeclaration","scope":15163,"src":"73331:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15157,"name":"int256","nodeType":"ElementaryTypeName","src":"73331:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":15160,"mutability":"mutable","name":"right","nameLocation":"73351:5:15","nodeType":"VariableDeclaration","scope":15163,"src":"73344:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15159,"name":"int256","nodeType":"ElementaryTypeName","src":"73344:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"73330:27:15"},"returnParameters":{"id":15162,"nodeType":"ParameterList","parameters":[],"src":"73371:0:15"},"scope":15595,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15173,"nodeType":"FunctionDefinition","src":"73491:85:15","nodes":[],"documentation":{"id":15164,"nodeType":"StructuredDocumentation","src":"73378:108:15","text":"Asserts that two `int256` values are not equal and includes error message into revert string on failure."},"functionSelector":"4724c5b9","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"73500:11:15","parameters":{"id":15171,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15166,"mutability":"mutable","name":"left","nameLocation":"73519:4:15","nodeType":"VariableDeclaration","scope":15173,"src":"73512:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15165,"name":"int256","nodeType":"ElementaryTypeName","src":"73512:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":15168,"mutability":"mutable","name":"right","nameLocation":"73532:5:15","nodeType":"VariableDeclaration","scope":15173,"src":"73525:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15167,"name":"int256","nodeType":"ElementaryTypeName","src":"73525:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":15170,"mutability":"mutable","name":"error","nameLocation":"73555:5:15","nodeType":"VariableDeclaration","scope":15173,"src":"73539:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15169,"name":"string","nodeType":"ElementaryTypeName","src":"73539:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"73511:50:15"},"returnParameters":{"id":15172,"nodeType":"ParameterList","parameters":[],"src":"73575:0:15"},"scope":15595,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15181,"nodeType":"FunctionDefinition","src":"73639:64:15","nodes":[],"documentation":{"id":15174,"nodeType":"StructuredDocumentation","src":"73582:52:15","text":"Asserts that two `address` values are not equal."},"functionSelector":"b12e1694","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"73648:11:15","parameters":{"id":15179,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15176,"mutability":"mutable","name":"left","nameLocation":"73668:4:15","nodeType":"VariableDeclaration","scope":15181,"src":"73660:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15175,"name":"address","nodeType":"ElementaryTypeName","src":"73660:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":15178,"mutability":"mutable","name":"right","nameLocation":"73682:5:15","nodeType":"VariableDeclaration","scope":15181,"src":"73674:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15177,"name":"address","nodeType":"ElementaryTypeName","src":"73674:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"73659:29:15"},"returnParameters":{"id":15180,"nodeType":"ParameterList","parameters":[],"src":"73702:0:15"},"scope":15595,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15191,"nodeType":"FunctionDefinition","src":"73823:87:15","nodes":[],"documentation":{"id":15182,"nodeType":"StructuredDocumentation","src":"73709:109:15","text":"Asserts that two `address` values are not equal and includes error message into revert string on failure."},"functionSelector":"8775a591","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"73832:11:15","parameters":{"id":15189,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15184,"mutability":"mutable","name":"left","nameLocation":"73852:4:15","nodeType":"VariableDeclaration","scope":15191,"src":"73844:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15183,"name":"address","nodeType":"ElementaryTypeName","src":"73844:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":15186,"mutability":"mutable","name":"right","nameLocation":"73866:5:15","nodeType":"VariableDeclaration","scope":15191,"src":"73858:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15185,"name":"address","nodeType":"ElementaryTypeName","src":"73858:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":15188,"mutability":"mutable","name":"error","nameLocation":"73889:5:15","nodeType":"VariableDeclaration","scope":15191,"src":"73873:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15187,"name":"string","nodeType":"ElementaryTypeName","src":"73873:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"73843:52:15"},"returnParameters":{"id":15190,"nodeType":"ParameterList","parameters":[],"src":"73909:0:15"},"scope":15595,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15199,"nodeType":"FunctionDefinition","src":"73973:64:15","nodes":[],"documentation":{"id":15192,"nodeType":"StructuredDocumentation","src":"73916:52:15","text":"Asserts that two `bytes32` values are not equal."},"functionSelector":"898e83fc","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"73982:11:15","parameters":{"id":15197,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15194,"mutability":"mutable","name":"left","nameLocation":"74002:4:15","nodeType":"VariableDeclaration","scope":15199,"src":"73994:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15193,"name":"bytes32","nodeType":"ElementaryTypeName","src":"73994:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":15196,"mutability":"mutable","name":"right","nameLocation":"74016:5:15","nodeType":"VariableDeclaration","scope":15199,"src":"74008:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15195,"name":"bytes32","nodeType":"ElementaryTypeName","src":"74008:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"73993:29:15"},"returnParameters":{"id":15198,"nodeType":"ParameterList","parameters":[],"src":"74036:0:15"},"scope":15595,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15209,"nodeType":"FunctionDefinition","src":"74157:87:15","nodes":[],"documentation":{"id":15200,"nodeType":"StructuredDocumentation","src":"74043:109:15","text":"Asserts that two `bytes32` values are not equal and includes error message into revert string on failure."},"functionSelector":"b2332f51","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"74166:11:15","parameters":{"id":15207,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15202,"mutability":"mutable","name":"left","nameLocation":"74186:4:15","nodeType":"VariableDeclaration","scope":15209,"src":"74178:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15201,"name":"bytes32","nodeType":"ElementaryTypeName","src":"74178:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":15204,"mutability":"mutable","name":"right","nameLocation":"74200:5:15","nodeType":"VariableDeclaration","scope":15209,"src":"74192:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15203,"name":"bytes32","nodeType":"ElementaryTypeName","src":"74192:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":15206,"mutability":"mutable","name":"error","nameLocation":"74223:5:15","nodeType":"VariableDeclaration","scope":15209,"src":"74207:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15205,"name":"string","nodeType":"ElementaryTypeName","src":"74207:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"74177:52:15"},"returnParameters":{"id":15208,"nodeType":"ParameterList","parameters":[],"src":"74243:0:15"},"scope":15595,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15215,"nodeType":"FunctionDefinition","src":"74300:50:15","nodes":[],"documentation":{"id":15210,"nodeType":"StructuredDocumentation","src":"74250:45:15","text":"Asserts that the given condition is true."},"functionSelector":"0c9fd581","implemented":false,"kind":"function","modifiers":[],"name":"assertTrue","nameLocation":"74309:10:15","parameters":{"id":15213,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15212,"mutability":"mutable","name":"condition","nameLocation":"74325:9:15","nodeType":"VariableDeclaration","scope":15215,"src":"74320:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":15211,"name":"bool","nodeType":"ElementaryTypeName","src":"74320:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"74319:16:15"},"returnParameters":{"id":15214,"nodeType":"ParameterList","parameters":[],"src":"74349:0:15"},"scope":15595,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15223,"nodeType":"FunctionDefinition","src":"74463:73:15","nodes":[],"documentation":{"id":15216,"nodeType":"StructuredDocumentation","src":"74356:102:15","text":"Asserts that the given condition is true and includes error message into revert string on failure."},"functionSelector":"a34edc03","implemented":false,"kind":"function","modifiers":[],"name":"assertTrue","nameLocation":"74472:10:15","parameters":{"id":15221,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15218,"mutability":"mutable","name":"condition","nameLocation":"74488:9:15","nodeType":"VariableDeclaration","scope":15223,"src":"74483:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":15217,"name":"bool","nodeType":"ElementaryTypeName","src":"74483:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":15220,"mutability":"mutable","name":"error","nameLocation":"74515:5:15","nodeType":"VariableDeclaration","scope":15223,"src":"74499:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15219,"name":"string","nodeType":"ElementaryTypeName","src":"74499:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"74482:39:15"},"returnParameters":{"id":15222,"nodeType":"ParameterList","parameters":[],"src":"74535:0:15"},"scope":15595,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15229,"nodeType":"FunctionDefinition","src":"74631:46:15","nodes":[],"documentation":{"id":15224,"nodeType":"StructuredDocumentation","src":"74542:84:15","text":"If the condition is false, discard this run's fuzz inputs and generate new ones."},"functionSelector":"4c63e562","implemented":false,"kind":"function","modifiers":[],"name":"assume","nameLocation":"74640:6:15","parameters":{"id":15227,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15226,"mutability":"mutable","name":"condition","nameLocation":"74652:9:15","nodeType":"VariableDeclaration","scope":15229,"src":"74647:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":15225,"name":"bool","nodeType":"ElementaryTypeName","src":"74647:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"74646:16:15"},"returnParameters":{"id":15228,"nodeType":"ParameterList","parameters":[],"src":"74676:0:15"},"scope":15595,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15235,"nodeType":"FunctionDefinition","src":"74739:51:15","nodes":[],"documentation":{"id":15230,"nodeType":"StructuredDocumentation","src":"74683:51:15","text":"Writes a breakpoint to jump to in the debugger."},"functionSelector":"f0259e92","implemented":false,"kind":"function","modifiers":[],"name":"breakpoint","nameLocation":"74748:10:15","parameters":{"id":15233,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15232,"mutability":"mutable","name":"char","nameLocation":"74775:4:15","nodeType":"VariableDeclaration","scope":15235,"src":"74759:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15231,"name":"string","nodeType":"ElementaryTypeName","src":"74759:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"74758:22:15"},"returnParameters":{"id":15234,"nodeType":"ParameterList","parameters":[],"src":"74789:0:15"},"scope":15595,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15243,"nodeType":"FunctionDefinition","src":"74864:63:15","nodes":[],"documentation":{"id":15236,"nodeType":"StructuredDocumentation","src":"74796:63:15","text":"Writes a conditional breakpoint to jump to in the debugger."},"functionSelector":"f7d39a8d","implemented":false,"kind":"function","modifiers":[],"name":"breakpoint","nameLocation":"74873:10:15","parameters":{"id":15241,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15238,"mutability":"mutable","name":"char","nameLocation":"74900:4:15","nodeType":"VariableDeclaration","scope":15243,"src":"74884:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15237,"name":"string","nodeType":"ElementaryTypeName","src":"74884:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15240,"mutability":"mutable","name":"value","nameLocation":"74911:5:15","nodeType":"VariableDeclaration","scope":15243,"src":"74906:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":15239,"name":"bool","nodeType":"ElementaryTypeName","src":"74906:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"74883:34:15"},"returnParameters":{"id":15242,"nodeType":"ParameterList","parameters":[],"src":"74926:0:15"},"scope":15595,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15249,"nodeType":"FunctionDefinition","src":"75332:75:15","nodes":[],"documentation":{"id":15244,"nodeType":"StructuredDocumentation","src":"74933:394:15","text":"Returns the Foundry version.\n Format: <cargo_version>+<git_sha>+<build_timestamp>\n Sample output: 0.2.0+faa94c384+202407110019\n Note: Build timestamps may vary slightly across platforms due to separate CI jobs.\n For reliable version comparisons, use YYYYMMDD0000 format (e.g., >= 202407110000)\n to compare timestamps while ignoring minor time differences."},"functionSelector":"ea991bb5","implemented":false,"kind":"function","modifiers":[],"name":"getFoundryVersion","nameLocation":"75341:17:15","parameters":{"id":15245,"nodeType":"ParameterList","parameters":[],"src":"75358:2:15"},"returnParameters":{"id":15248,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15247,"mutability":"mutable","name":"version","nameLocation":"75398:7:15","nodeType":"VariableDeclaration","scope":15249,"src":"75384:21:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":15246,"name":"string","nodeType":"ElementaryTypeName","src":"75384:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"75383:23:15"},"scope":15595,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":15257,"nodeType":"FunctionDefinition","src":"75462:85:15","nodes":[],"documentation":{"id":15250,"nodeType":"StructuredDocumentation","src":"75413:44:15","text":"Returns the RPC url for the given alias."},"functionSelector":"975a6ce9","implemented":false,"kind":"function","modifiers":[],"name":"rpcUrl","nameLocation":"75471:6:15","parameters":{"id":15253,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15252,"mutability":"mutable","name":"rpcAlias","nameLocation":"75494:8:15","nodeType":"VariableDeclaration","scope":15257,"src":"75478:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15251,"name":"string","nodeType":"ElementaryTypeName","src":"75478:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"75477:26:15"},"returnParameters":{"id":15256,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15255,"mutability":"mutable","name":"json","nameLocation":"75541:4:15","nodeType":"VariableDeclaration","scope":15257,"src":"75527:18:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":15254,"name":"string","nodeType":"ElementaryTypeName","src":"75527:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"75526:20:15"},"scope":15595,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":15265,"nodeType":"FunctionDefinition","src":"75612:67:15","nodes":[],"documentation":{"id":15258,"nodeType":"StructuredDocumentation","src":"75553:54:15","text":"Returns all rpc urls and their aliases as structs."},"functionSelector":"9d2ad72a","implemented":false,"kind":"function","modifiers":[],"name":"rpcUrlStructs","nameLocation":"75621:13:15","parameters":{"id":15259,"nodeType":"ParameterList","parameters":[],"src":"75634:2:15"},"returnParameters":{"id":15264,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15263,"mutability":"mutable","name":"urls","nameLocation":"75673:4:15","nodeType":"VariableDeclaration","scope":15265,"src":"75660:17:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Rpc_$12256_memory_ptr_$dyn_memory_ptr","typeString":"struct VmSafe.Rpc[]"},"typeName":{"baseType":{"id":15261,"nodeType":"UserDefinedTypeName","pathNode":{"id":15260,"name":"Rpc","nameLocations":["75660:3:15"],"nodeType":"IdentifierPath","referencedDeclaration":12256,"src":"75660:3:15"},"referencedDeclaration":12256,"src":"75660:3:15","typeDescriptions":{"typeIdentifier":"t_struct$_Rpc_$12256_storage_ptr","typeString":"struct VmSafe.Rpc"}},"id":15262,"nodeType":"ArrayTypeName","src":"75660:5:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Rpc_$12256_storage_$dyn_storage_ptr","typeString":"struct VmSafe.Rpc[]"}},"visibility":"internal"}],"src":"75659:19:15"},"scope":15595,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":15274,"nodeType":"FunctionDefinition","src":"75750:67:15","nodes":[],"documentation":{"id":15266,"nodeType":"StructuredDocumentation","src":"75685:60:15","text":"Returns all rpc urls and their aliases `[alias, url][]`."},"functionSelector":"a85a8418","implemented":false,"kind":"function","modifiers":[],"name":"rpcUrls","nameLocation":"75759:7:15","parameters":{"id":15267,"nodeType":"ParameterList","parameters":[],"src":"75766:2:15"},"returnParameters":{"id":15273,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15272,"mutability":"mutable","name":"urls","nameLocation":"75811:4:15","nodeType":"VariableDeclaration","scope":15274,"src":"75792:23:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_string_memory_ptr_$2_memory_ptr_$dyn_memory_ptr","typeString":"string[2][]"},"typeName":{"baseType":{"baseType":{"id":15268,"name":"string","nodeType":"ElementaryTypeName","src":"75792:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":15270,"length":{"hexValue":"32","id":15269,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"75799:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"ArrayTypeName","src":"75792:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$2_storage_ptr","typeString":"string[2]"}},"id":15271,"nodeType":"ArrayTypeName","src":"75792:11:15","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_string_storage_$2_storage_$dyn_storage_ptr","typeString":"string[2][]"}},"visibility":"internal"}],"src":"75791:25:15"},"scope":15595,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":15280,"nodeType":"FunctionDefinition","src":"75898:42:15","nodes":[],"documentation":{"id":15275,"nodeType":"StructuredDocumentation","src":"75823:70:15","text":"Suspends execution of the main thread for `duration` milliseconds."},"functionSelector":"fa9d8713","implemented":false,"kind":"function","modifiers":[],"name":"sleep","nameLocation":"75907:5:15","parameters":{"id":15278,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15277,"mutability":"mutable","name":"duration","nameLocation":"75921:8:15","nodeType":"VariableDeclaration","scope":15280,"src":"75913:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15276,"name":"uint256","nodeType":"ElementaryTypeName","src":"75913:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"75912:18:15"},"returnParameters":{"id":15279,"nodeType":"ParameterList","parameters":[],"src":"75939:0:15"},"scope":15595,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15290,"nodeType":"FunctionDefinition","src":"76025:95:15","nodes":[],"documentation":{"id":15281,"nodeType":"StructuredDocumentation","src":"75977:43:15","text":"Checks if `key` exists in a TOML table."},"functionSelector":"600903ad","implemented":false,"kind":"function","modifiers":[],"name":"keyExistsToml","nameLocation":"76034:13:15","parameters":{"id":15286,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15283,"mutability":"mutable","name":"toml","nameLocation":"76064:4:15","nodeType":"VariableDeclaration","scope":15290,"src":"76048:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15282,"name":"string","nodeType":"ElementaryTypeName","src":"76048:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15285,"mutability":"mutable","name":"key","nameLocation":"76086:3:15","nodeType":"VariableDeclaration","scope":15290,"src":"76070:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15284,"name":"string","nodeType":"ElementaryTypeName","src":"76070:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"76047:43:15"},"returnParameters":{"id":15289,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15288,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":15290,"src":"76114:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":15287,"name":"bool","nodeType":"ElementaryTypeName","src":"76114:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"76113:6:15"},"scope":15595,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":15300,"nodeType":"FunctionDefinition","src":"76201:101:15","nodes":[],"documentation":{"id":15291,"nodeType":"StructuredDocumentation","src":"76126:70:15","text":"Parses a string of TOML data at `key` and coerces it to `address`."},"functionSelector":"65e7c844","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlAddress","nameLocation":"76210:16:15","parameters":{"id":15296,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15293,"mutability":"mutable","name":"toml","nameLocation":"76243:4:15","nodeType":"VariableDeclaration","scope":15300,"src":"76227:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15292,"name":"string","nodeType":"ElementaryTypeName","src":"76227:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15295,"mutability":"mutable","name":"key","nameLocation":"76265:3:15","nodeType":"VariableDeclaration","scope":15300,"src":"76249:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15294,"name":"string","nodeType":"ElementaryTypeName","src":"76249:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"76226:43:15"},"returnParameters":{"id":15299,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15298,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":15300,"src":"76293:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15297,"name":"address","nodeType":"ElementaryTypeName","src":"76293:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"76292:9:15"},"scope":15595,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15311,"nodeType":"FunctionDefinition","src":"76385:139:15","nodes":[],"documentation":{"id":15301,"nodeType":"StructuredDocumentation","src":"76308:72:15","text":"Parses a string of TOML data at `key` and coerces it to `address[]`."},"functionSelector":"65c428e7","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlAddressArray","nameLocation":"76394:21:15","parameters":{"id":15306,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15303,"mutability":"mutable","name":"toml","nameLocation":"76432:4:15","nodeType":"VariableDeclaration","scope":15311,"src":"76416:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15302,"name":"string","nodeType":"ElementaryTypeName","src":"76416:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15305,"mutability":"mutable","name":"key","nameLocation":"76454:3:15","nodeType":"VariableDeclaration","scope":15311,"src":"76438:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15304,"name":"string","nodeType":"ElementaryTypeName","src":"76438:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"76415:43:15"},"returnParameters":{"id":15310,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15309,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":15311,"src":"76506:16:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":15307,"name":"address","nodeType":"ElementaryTypeName","src":"76506:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":15308,"nodeType":"ArrayTypeName","src":"76506:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"76505:18:15"},"scope":15595,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15321,"nodeType":"FunctionDefinition","src":"76602:95:15","nodes":[],"documentation":{"id":15312,"nodeType":"StructuredDocumentation","src":"76530:67:15","text":"Parses a string of TOML data at `key` and coerces it to `bool`."},"functionSelector":"d30dced6","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlBool","nameLocation":"76611:13:15","parameters":{"id":15317,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15314,"mutability":"mutable","name":"toml","nameLocation":"76641:4:15","nodeType":"VariableDeclaration","scope":15321,"src":"76625:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15313,"name":"string","nodeType":"ElementaryTypeName","src":"76625:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15316,"mutability":"mutable","name":"key","nameLocation":"76663:3:15","nodeType":"VariableDeclaration","scope":15321,"src":"76647:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15315,"name":"string","nodeType":"ElementaryTypeName","src":"76647:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"76624:43:15"},"returnParameters":{"id":15320,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15319,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":15321,"src":"76691:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":15318,"name":"bool","nodeType":"ElementaryTypeName","src":"76691:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"76690:6:15"},"scope":15595,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15332,"nodeType":"FunctionDefinition","src":"76777:109:15","nodes":[],"documentation":{"id":15322,"nodeType":"StructuredDocumentation","src":"76703:69:15","text":"Parses a string of TOML data at `key` and coerces it to `bool[]`."},"functionSelector":"127cfe9a","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlBoolArray","nameLocation":"76786:18:15","parameters":{"id":15327,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15324,"mutability":"mutable","name":"toml","nameLocation":"76821:4:15","nodeType":"VariableDeclaration","scope":15332,"src":"76805:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15323,"name":"string","nodeType":"ElementaryTypeName","src":"76805:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15326,"mutability":"mutable","name":"key","nameLocation":"76843:3:15","nodeType":"VariableDeclaration","scope":15332,"src":"76827:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15325,"name":"string","nodeType":"ElementaryTypeName","src":"76827:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"76804:43:15"},"returnParameters":{"id":15331,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15330,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":15332,"src":"76871:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":15328,"name":"bool","nodeType":"ElementaryTypeName","src":"76871:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":15329,"nodeType":"ArrayTypeName","src":"76871:6:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"src":"76870:15:15"},"scope":15595,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15342,"nodeType":"FunctionDefinition","src":"76965:104:15","nodes":[],"documentation":{"id":15333,"nodeType":"StructuredDocumentation","src":"76892:68:15","text":"Parses a string of TOML data at `key` and coerces it to `bytes`."},"functionSelector":"d77bfdb9","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlBytes","nameLocation":"76974:14:15","parameters":{"id":15338,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15335,"mutability":"mutable","name":"toml","nameLocation":"77005:4:15","nodeType":"VariableDeclaration","scope":15342,"src":"76989:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15334,"name":"string","nodeType":"ElementaryTypeName","src":"76989:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15337,"mutability":"mutable","name":"key","nameLocation":"77027:3:15","nodeType":"VariableDeclaration","scope":15342,"src":"77011:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15336,"name":"string","nodeType":"ElementaryTypeName","src":"77011:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"76988:43:15"},"returnParameters":{"id":15341,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15340,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":15342,"src":"77055:12:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":15339,"name":"bytes","nodeType":"ElementaryTypeName","src":"77055:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"77054:14:15"},"scope":15595,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15352,"nodeType":"FunctionDefinition","src":"77150:101:15","nodes":[],"documentation":{"id":15343,"nodeType":"StructuredDocumentation","src":"77075:70:15","text":"Parses a string of TOML data at `key` and coerces it to `bytes32`."},"functionSelector":"8e214810","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlBytes32","nameLocation":"77159:16:15","parameters":{"id":15348,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15345,"mutability":"mutable","name":"toml","nameLocation":"77192:4:15","nodeType":"VariableDeclaration","scope":15352,"src":"77176:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15344,"name":"string","nodeType":"ElementaryTypeName","src":"77176:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15347,"mutability":"mutable","name":"key","nameLocation":"77214:3:15","nodeType":"VariableDeclaration","scope":15352,"src":"77198:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15346,"name":"string","nodeType":"ElementaryTypeName","src":"77198:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"77175:43:15"},"returnParameters":{"id":15351,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15350,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":15352,"src":"77242:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15349,"name":"bytes32","nodeType":"ElementaryTypeName","src":"77242:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"77241:9:15"},"scope":15595,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15363,"nodeType":"FunctionDefinition","src":"77334:139:15","nodes":[],"documentation":{"id":15353,"nodeType":"StructuredDocumentation","src":"77257:72:15","text":"Parses a string of TOML data at `key` and coerces it to `bytes32[]`."},"functionSelector":"3e716f81","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlBytes32Array","nameLocation":"77343:21:15","parameters":{"id":15358,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15355,"mutability":"mutable","name":"toml","nameLocation":"77381:4:15","nodeType":"VariableDeclaration","scope":15363,"src":"77365:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15354,"name":"string","nodeType":"ElementaryTypeName","src":"77365:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15357,"mutability":"mutable","name":"key","nameLocation":"77403:3:15","nodeType":"VariableDeclaration","scope":15363,"src":"77387:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15356,"name":"string","nodeType":"ElementaryTypeName","src":"77387:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"77364:43:15"},"returnParameters":{"id":15362,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15361,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":15363,"src":"77455:16:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":15359,"name":"bytes32","nodeType":"ElementaryTypeName","src":"77455:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":15360,"nodeType":"ArrayTypeName","src":"77455:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"77454:18:15"},"scope":15595,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15374,"nodeType":"FunctionDefinition","src":"77554:111:15","nodes":[],"documentation":{"id":15364,"nodeType":"StructuredDocumentation","src":"77479:70:15","text":"Parses a string of TOML data at `key` and coerces it to `bytes[]`."},"functionSelector":"b197c247","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlBytesArray","nameLocation":"77563:19:15","parameters":{"id":15369,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15366,"mutability":"mutable","name":"toml","nameLocation":"77599:4:15","nodeType":"VariableDeclaration","scope":15374,"src":"77583:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15365,"name":"string","nodeType":"ElementaryTypeName","src":"77583:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15368,"mutability":"mutable","name":"key","nameLocation":"77621:3:15","nodeType":"VariableDeclaration","scope":15374,"src":"77605:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15367,"name":"string","nodeType":"ElementaryTypeName","src":"77605:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"77582:43:15"},"returnParameters":{"id":15373,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15372,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":15374,"src":"77649:14:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":15370,"name":"bytes","nodeType":"ElementaryTypeName","src":"77649:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":15371,"nodeType":"ArrayTypeName","src":"77649:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"77648:16:15"},"scope":15595,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15384,"nodeType":"FunctionDefinition","src":"77745:96:15","nodes":[],"documentation":{"id":15375,"nodeType":"StructuredDocumentation","src":"77671:69:15","text":"Parses a string of TOML data at `key` and coerces it to `int256`."},"functionSelector":"c1350739","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlInt","nameLocation":"77754:12:15","parameters":{"id":15380,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15377,"mutability":"mutable","name":"toml","nameLocation":"77783:4:15","nodeType":"VariableDeclaration","scope":15384,"src":"77767:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15376,"name":"string","nodeType":"ElementaryTypeName","src":"77767:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15379,"mutability":"mutable","name":"key","nameLocation":"77805:3:15","nodeType":"VariableDeclaration","scope":15384,"src":"77789:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15378,"name":"string","nodeType":"ElementaryTypeName","src":"77789:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"77766:43:15"},"returnParameters":{"id":15383,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15382,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":15384,"src":"77833:6:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15381,"name":"int256","nodeType":"ElementaryTypeName","src":"77833:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"77832:8:15"},"scope":15595,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15395,"nodeType":"FunctionDefinition","src":"77923:110:15","nodes":[],"documentation":{"id":15385,"nodeType":"StructuredDocumentation","src":"77847:71:15","text":"Parses a string of TOML data at `key` and coerces it to `int256[]`."},"functionSelector":"d3522ae6","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlIntArray","nameLocation":"77932:17:15","parameters":{"id":15390,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15387,"mutability":"mutable","name":"toml","nameLocation":"77966:4:15","nodeType":"VariableDeclaration","scope":15395,"src":"77950:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15386,"name":"string","nodeType":"ElementaryTypeName","src":"77950:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15389,"mutability":"mutable","name":"key","nameLocation":"77988:3:15","nodeType":"VariableDeclaration","scope":15395,"src":"77972:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15388,"name":"string","nodeType":"ElementaryTypeName","src":"77972:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"77949:43:15"},"returnParameters":{"id":15394,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15393,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":15395,"src":"78016:15:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_memory_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":15391,"name":"int256","nodeType":"ElementaryTypeName","src":"78016:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":15392,"nodeType":"ArrayTypeName","src":"78016:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"}],"src":"78015:17:15"},"scope":15595,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15406,"nodeType":"FunctionDefinition","src":"78097:111:15","nodes":[],"documentation":{"id":15396,"nodeType":"StructuredDocumentation","src":"78039:53:15","text":"Returns an array of all the keys in a TOML table."},"functionSelector":"812a44b2","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlKeys","nameLocation":"78106:13:15","parameters":{"id":15401,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15398,"mutability":"mutable","name":"toml","nameLocation":"78136:4:15","nodeType":"VariableDeclaration","scope":15406,"src":"78120:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15397,"name":"string","nodeType":"ElementaryTypeName","src":"78120:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15400,"mutability":"mutable","name":"key","nameLocation":"78158:3:15","nodeType":"VariableDeclaration","scope":15406,"src":"78142:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15399,"name":"string","nodeType":"ElementaryTypeName","src":"78142:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"78119:43:15"},"returnParameters":{"id":15405,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15404,"mutability":"mutable","name":"keys","nameLocation":"78202:4:15","nodeType":"VariableDeclaration","scope":15406,"src":"78186:20:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":15402,"name":"string","nodeType":"ElementaryTypeName","src":"78186:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":15403,"nodeType":"ArrayTypeName","src":"78186:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"78185:22:15"},"scope":15595,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15416,"nodeType":"FunctionDefinition","src":"78288:106:15","nodes":[],"documentation":{"id":15407,"nodeType":"StructuredDocumentation","src":"78214:69:15","text":"Parses a string of TOML data at `key` and coerces it to `string`."},"functionSelector":"8bb8dd43","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlString","nameLocation":"78297:15:15","parameters":{"id":15412,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15409,"mutability":"mutable","name":"toml","nameLocation":"78329:4:15","nodeType":"VariableDeclaration","scope":15416,"src":"78313:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15408,"name":"string","nodeType":"ElementaryTypeName","src":"78313:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15411,"mutability":"mutable","name":"key","nameLocation":"78351:3:15","nodeType":"VariableDeclaration","scope":15416,"src":"78335:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15410,"name":"string","nodeType":"ElementaryTypeName","src":"78335:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"78312:43:15"},"returnParameters":{"id":15415,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15414,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":15416,"src":"78379:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":15413,"name":"string","nodeType":"ElementaryTypeName","src":"78379:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"78378:15:15"},"scope":15595,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15427,"nodeType":"FunctionDefinition","src":"78476:113:15","nodes":[],"documentation":{"id":15417,"nodeType":"StructuredDocumentation","src":"78400:71:15","text":"Parses a string of TOML data at `key` and coerces it to `string[]`."},"functionSelector":"9f629281","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlStringArray","nameLocation":"78485:20:15","parameters":{"id":15422,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15419,"mutability":"mutable","name":"toml","nameLocation":"78522:4:15","nodeType":"VariableDeclaration","scope":15427,"src":"78506:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15418,"name":"string","nodeType":"ElementaryTypeName","src":"78506:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15421,"mutability":"mutable","name":"key","nameLocation":"78544:3:15","nodeType":"VariableDeclaration","scope":15427,"src":"78528:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15420,"name":"string","nodeType":"ElementaryTypeName","src":"78528:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"78505:43:15"},"returnParameters":{"id":15426,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15425,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":15427,"src":"78572:15:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":15423,"name":"string","nodeType":"ElementaryTypeName","src":"78572:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":15424,"nodeType":"ArrayTypeName","src":"78572:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"78571:17:15"},"scope":15595,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15437,"nodeType":"FunctionDefinition","src":"78670:98:15","nodes":[],"documentation":{"id":15428,"nodeType":"StructuredDocumentation","src":"78595:70:15","text":"Parses a string of TOML data at `key` and coerces it to `uint256`."},"functionSelector":"cc7b0487","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlUint","nameLocation":"78679:13:15","parameters":{"id":15433,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15430,"mutability":"mutable","name":"toml","nameLocation":"78709:4:15","nodeType":"VariableDeclaration","scope":15437,"src":"78693:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15429,"name":"string","nodeType":"ElementaryTypeName","src":"78693:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15432,"mutability":"mutable","name":"key","nameLocation":"78731:3:15","nodeType":"VariableDeclaration","scope":15437,"src":"78715:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15431,"name":"string","nodeType":"ElementaryTypeName","src":"78715:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"78692:43:15"},"returnParameters":{"id":15436,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15435,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":15437,"src":"78759:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15434,"name":"uint256","nodeType":"ElementaryTypeName","src":"78759:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"78758:9:15"},"scope":15595,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15448,"nodeType":"FunctionDefinition","src":"78851:112:15","nodes":[],"documentation":{"id":15438,"nodeType":"StructuredDocumentation","src":"78774:72:15","text":"Parses a string of TOML data at `key` and coerces it to `uint256[]`."},"functionSelector":"b5df27c8","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlUintArray","nameLocation":"78860:18:15","parameters":{"id":15443,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15440,"mutability":"mutable","name":"toml","nameLocation":"78895:4:15","nodeType":"VariableDeclaration","scope":15448,"src":"78879:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15439,"name":"string","nodeType":"ElementaryTypeName","src":"78879:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15442,"mutability":"mutable","name":"key","nameLocation":"78917:3:15","nodeType":"VariableDeclaration","scope":15448,"src":"78901:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15441,"name":"string","nodeType":"ElementaryTypeName","src":"78901:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"78878:43:15"},"returnParameters":{"id":15447,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15446,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":15448,"src":"78945:16:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":15444,"name":"uint256","nodeType":"ElementaryTypeName","src":"78945:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":15445,"nodeType":"ArrayTypeName","src":"78945:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"78944:18:15"},"scope":15595,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15456,"nodeType":"FunctionDefinition","src":"79003:93:15","nodes":[],"documentation":{"id":15449,"nodeType":"StructuredDocumentation","src":"78969:29:15","text":"ABI-encodes a TOML table."},"functionSelector":"592151f0","implemented":false,"kind":"function","modifiers":[],"name":"parseToml","nameLocation":"79012:9:15","parameters":{"id":15452,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15451,"mutability":"mutable","name":"toml","nameLocation":"79038:4:15","nodeType":"VariableDeclaration","scope":15456,"src":"79022:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15450,"name":"string","nodeType":"ElementaryTypeName","src":"79022:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"79021:22:15"},"returnParameters":{"id":15455,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15454,"mutability":"mutable","name":"abiEncodedData","nameLocation":"79080:14:15","nodeType":"VariableDeclaration","scope":15456,"src":"79067:27:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":15453,"name":"bytes","nodeType":"ElementaryTypeName","src":"79067:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"79066:29:15"},"scope":15595,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15466,"nodeType":"FunctionDefinition","src":"79145:114:15","nodes":[],"documentation":{"id":15457,"nodeType":"StructuredDocumentation","src":"79102:38:15","text":"ABI-encodes a TOML table at `key`."},"functionSelector":"37736e08","implemented":false,"kind":"function","modifiers":[],"name":"parseToml","nameLocation":"79154:9:15","parameters":{"id":15462,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15459,"mutability":"mutable","name":"toml","nameLocation":"79180:4:15","nodeType":"VariableDeclaration","scope":15466,"src":"79164:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15458,"name":"string","nodeType":"ElementaryTypeName","src":"79164:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15461,"mutability":"mutable","name":"key","nameLocation":"79202:3:15","nodeType":"VariableDeclaration","scope":15466,"src":"79186:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15460,"name":"string","nodeType":"ElementaryTypeName","src":"79186:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"79163:43:15"},"returnParameters":{"id":15465,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15464,"mutability":"mutable","name":"abiEncodedData","nameLocation":"79243:14:15","nodeType":"VariableDeclaration","scope":15466,"src":"79230:27:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":15463,"name":"bytes","nodeType":"ElementaryTypeName","src":"79230:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"79229:29:15"},"scope":15595,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15474,"nodeType":"FunctionDefinition","src":"79352:72:15","nodes":[],"documentation":{"id":15467,"nodeType":"StructuredDocumentation","src":"79265:82:15","text":"Takes serialized JSON, converts to TOML and write a serialized TOML to a file."},"functionSelector":"c0865ba7","implemented":false,"kind":"function","modifiers":[],"name":"writeToml","nameLocation":"79361:9:15","parameters":{"id":15472,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15469,"mutability":"mutable","name":"json","nameLocation":"79387:4:15","nodeType":"VariableDeclaration","scope":15474,"src":"79371:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15468,"name":"string","nodeType":"ElementaryTypeName","src":"79371:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15471,"mutability":"mutable","name":"path","nameLocation":"79409:4:15","nodeType":"VariableDeclaration","scope":15474,"src":"79393:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15470,"name":"string","nodeType":"ElementaryTypeName","src":"79393:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"79370:44:15"},"returnParameters":{"id":15473,"nodeType":"ParameterList","parameters":[],"src":"79423:0:15"},"scope":15595,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15484,"nodeType":"FunctionDefinition","src":"79693:98:15","nodes":[],"documentation":{"id":15475,"nodeType":"StructuredDocumentation","src":"79430:258:15","text":"Takes serialized JSON, converts to TOML and write a serialized TOML table to an **existing** TOML file, replacing a value with key = <value_key.>\n This is useful to replace a specific value of a TOML file, without having to parse the entire thing."},"functionSelector":"51ac6a33","implemented":false,"kind":"function","modifiers":[],"name":"writeToml","nameLocation":"79702:9:15","parameters":{"id":15482,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15477,"mutability":"mutable","name":"json","nameLocation":"79728:4:15","nodeType":"VariableDeclaration","scope":15484,"src":"79712:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15476,"name":"string","nodeType":"ElementaryTypeName","src":"79712:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15479,"mutability":"mutable","name":"path","nameLocation":"79750:4:15","nodeType":"VariableDeclaration","scope":15484,"src":"79734:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15478,"name":"string","nodeType":"ElementaryTypeName","src":"79734:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15481,"mutability":"mutable","name":"valueKey","nameLocation":"79772:8:15","nodeType":"VariableDeclaration","scope":15484,"src":"79756:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15480,"name":"string","nodeType":"ElementaryTypeName","src":"79756:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"79711:70:15"},"returnParameters":{"id":15483,"nodeType":"ParameterList","parameters":[],"src":"79790:0:15"},"scope":15595,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15496,"nodeType":"FunctionDefinition","src":"79930:141:15","nodes":[],"documentation":{"id":15485,"nodeType":"StructuredDocumentation","src":"79833:92:15","text":"Compute the address of a contract created with CREATE2 using the given CREATE2 deployer."},"functionSelector":"d323826a","implemented":false,"kind":"function","modifiers":[],"name":"computeCreate2Address","nameLocation":"79939:21:15","parameters":{"id":15492,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15487,"mutability":"mutable","name":"salt","nameLocation":"79969:4:15","nodeType":"VariableDeclaration","scope":15496,"src":"79961:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15486,"name":"bytes32","nodeType":"ElementaryTypeName","src":"79961:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":15489,"mutability":"mutable","name":"initCodeHash","nameLocation":"79983:12:15","nodeType":"VariableDeclaration","scope":15496,"src":"79975:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15488,"name":"bytes32","nodeType":"ElementaryTypeName","src":"79975:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":15491,"mutability":"mutable","name":"deployer","nameLocation":"80005:8:15","nodeType":"VariableDeclaration","scope":15496,"src":"79997:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15490,"name":"address","nodeType":"ElementaryTypeName","src":"79997:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"79960:54:15"},"returnParameters":{"id":15495,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15494,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":15496,"src":"80062:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15493,"name":"address","nodeType":"ElementaryTypeName","src":"80062:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"80061:9:15"},"scope":15595,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15506,"nodeType":"FunctionDefinition","src":"80176:99:15","nodes":[],"documentation":{"id":15497,"nodeType":"StructuredDocumentation","src":"80077:94:15","text":"Compute the address of a contract created with CREATE2 using the default CREATE2 deployer."},"functionSelector":"890c283b","implemented":false,"kind":"function","modifiers":[],"name":"computeCreate2Address","nameLocation":"80185:21:15","parameters":{"id":15502,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15499,"mutability":"mutable","name":"salt","nameLocation":"80215:4:15","nodeType":"VariableDeclaration","scope":15506,"src":"80207:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15498,"name":"bytes32","nodeType":"ElementaryTypeName","src":"80207:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":15501,"mutability":"mutable","name":"initCodeHash","nameLocation":"80229:12:15","nodeType":"VariableDeclaration","scope":15506,"src":"80221:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15500,"name":"bytes32","nodeType":"ElementaryTypeName","src":"80221:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"80206:36:15"},"returnParameters":{"id":15505,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15504,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":15506,"src":"80266:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15503,"name":"address","nodeType":"ElementaryTypeName","src":"80266:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"80265:9:15"},"scope":15595,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15516,"nodeType":"FunctionDefinition","src":"80380:95:15","nodes":[],"documentation":{"id":15507,"nodeType":"StructuredDocumentation","src":"80281:94:15","text":"Compute the address a contract will be deployed at for a given deployer address and nonce."},"functionSelector":"74637a7a","implemented":false,"kind":"function","modifiers":[],"name":"computeCreateAddress","nameLocation":"80389:20:15","parameters":{"id":15512,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15509,"mutability":"mutable","name":"deployer","nameLocation":"80418:8:15","nodeType":"VariableDeclaration","scope":15516,"src":"80410:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15508,"name":"address","nodeType":"ElementaryTypeName","src":"80410:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":15511,"mutability":"mutable","name":"nonce","nameLocation":"80436:5:15","nodeType":"VariableDeclaration","scope":15516,"src":"80428:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15510,"name":"uint256","nodeType":"ElementaryTypeName","src":"80428:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"80409:33:15"},"returnParameters":{"id":15515,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15514,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":15516,"src":"80466:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15513,"name":"address","nodeType":"ElementaryTypeName","src":"80466:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"80465:9:15"},"scope":15595,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15524,"nodeType":"FunctionDefinition","src":"80531:75:15","nodes":[],"documentation":{"id":15517,"nodeType":"StructuredDocumentation","src":"80481:45:15","text":"Returns ENS namehash for provided string."},"functionSelector":"8c374c65","implemented":false,"kind":"function","modifiers":[],"name":"ensNamehash","nameLocation":"80540:11:15","parameters":{"id":15520,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15519,"mutability":"mutable","name":"name","nameLocation":"80568:4:15","nodeType":"VariableDeclaration","scope":15524,"src":"80552:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15518,"name":"string","nodeType":"ElementaryTypeName","src":"80552:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"80551:22:15"},"returnParameters":{"id":15523,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15522,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":15524,"src":"80597:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15521,"name":"bytes32","nodeType":"ElementaryTypeName","src":"80597:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"80596:9:15"},"scope":15595,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15532,"nodeType":"FunctionDefinition","src":"80662:86:15","nodes":[],"documentation":{"id":15525,"nodeType":"StructuredDocumentation","src":"80612:45:15","text":"Gets the label for the specified address."},"functionSelector":"28a249b0","implemented":false,"kind":"function","modifiers":[],"name":"getLabel","nameLocation":"80671:8:15","parameters":{"id":15528,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15527,"mutability":"mutable","name":"account","nameLocation":"80688:7:15","nodeType":"VariableDeclaration","scope":15532,"src":"80680:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15526,"name":"address","nodeType":"ElementaryTypeName","src":"80680:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"80679:17:15"},"returnParameters":{"id":15531,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15530,"mutability":"mutable","name":"currentLabel","nameLocation":"80734:12:15","nodeType":"VariableDeclaration","scope":15532,"src":"80720:26:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":15529,"name":"string","nodeType":"ElementaryTypeName","src":"80720:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"80719:28:15"},"scope":15595,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":15540,"nodeType":"FunctionDefinition","src":"80796:67:15","nodes":[],"documentation":{"id":15533,"nodeType":"StructuredDocumentation","src":"80754:37:15","text":"Labels an address in call traces."},"functionSelector":"c657c718","implemented":false,"kind":"function","modifiers":[],"name":"label","nameLocation":"80805:5:15","parameters":{"id":15538,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15535,"mutability":"mutable","name":"account","nameLocation":"80819:7:15","nodeType":"VariableDeclaration","scope":15540,"src":"80811:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15534,"name":"address","nodeType":"ElementaryTypeName","src":"80811:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":15537,"mutability":"mutable","name":"newLabel","nameLocation":"80844:8:15","nodeType":"VariableDeclaration","scope":15540,"src":"80828:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15536,"name":"string","nodeType":"ElementaryTypeName","src":"80828:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"80810:43:15"},"returnParameters":{"id":15539,"nodeType":"ParameterList","parameters":[],"src":"80862:0:15"},"scope":15595,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15546,"nodeType":"FunctionDefinition","src":"80905:52:15","nodes":[],"documentation":{"id":15541,"nodeType":"StructuredDocumentation","src":"80869:31:15","text":"Returns a random `address`."},"functionSelector":"d5bee9f5","implemented":false,"kind":"function","modifiers":[],"name":"randomAddress","nameLocation":"80914:13:15","parameters":{"id":15542,"nodeType":"ParameterList","parameters":[],"src":"80927:2:15"},"returnParameters":{"id":15545,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15544,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":15546,"src":"80948:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15543,"name":"address","nodeType":"ElementaryTypeName","src":"80948:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"80947:9:15"},"scope":15595,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15552,"nodeType":"FunctionDefinition","src":"81003:49:15","nodes":[],"documentation":{"id":15547,"nodeType":"StructuredDocumentation","src":"80963:35:15","text":"Returns a random uint256 value."},"functionSelector":"25124730","implemented":false,"kind":"function","modifiers":[],"name":"randomUint","nameLocation":"81012:10:15","parameters":{"id":15548,"nodeType":"ParameterList","parameters":[],"src":"81022:2:15"},"returnParameters":{"id":15551,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15550,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":15552,"src":"81043:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15549,"name":"uint256","nodeType":"ElementaryTypeName","src":"81043:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"81042:9:15"},"scope":15595,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15562,"nodeType":"FunctionDefinition","src":"81135:73:15","nodes":[],"documentation":{"id":15553,"nodeType":"StructuredDocumentation","src":"81058:72:15","text":"Returns random uin256 value between the provided range (=min..=max)."},"functionSelector":"d61b051b","implemented":false,"kind":"function","modifiers":[],"name":"randomUint","nameLocation":"81144:10:15","parameters":{"id":15558,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15555,"mutability":"mutable","name":"min","nameLocation":"81163:3:15","nodeType":"VariableDeclaration","scope":15562,"src":"81155:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15554,"name":"uint256","nodeType":"ElementaryTypeName","src":"81155:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15557,"mutability":"mutable","name":"max","nameLocation":"81176:3:15","nodeType":"VariableDeclaration","scope":15562,"src":"81168:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15556,"name":"uint256","nodeType":"ElementaryTypeName","src":"81168:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"81154:26:15"},"returnParameters":{"id":15561,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15560,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":15562,"src":"81199:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15559,"name":"uint256","nodeType":"ElementaryTypeName","src":"81199:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"81198:9:15"},"scope":15595,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15570,"nodeType":"FunctionDefinition","src":"81269:80:15","nodes":[],"documentation":{"id":15563,"nodeType":"StructuredDocumentation","src":"81214:50:15","text":"Encodes a `bytes` value to a base64url string."},"functionSelector":"c8bd0e4a","implemented":false,"kind":"function","modifiers":[],"name":"toBase64URL","nameLocation":"81278:11:15","parameters":{"id":15566,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15565,"mutability":"mutable","name":"data","nameLocation":"81305:4:15","nodeType":"VariableDeclaration","scope":15570,"src":"81290:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":15564,"name":"bytes","nodeType":"ElementaryTypeName","src":"81290:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"81289:21:15"},"returnParameters":{"id":15569,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15568,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":15570,"src":"81334:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":15567,"name":"string","nodeType":"ElementaryTypeName","src":"81334:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"81333:15:15"},"scope":15595,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15578,"nodeType":"FunctionDefinition","src":"81411:81:15","nodes":[],"documentation":{"id":15571,"nodeType":"StructuredDocumentation","src":"81355:51:15","text":"Encodes a `string` value to a base64url string."},"functionSelector":"ae3165b3","implemented":false,"kind":"function","modifiers":[],"name":"toBase64URL","nameLocation":"81420:11:15","parameters":{"id":15574,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15573,"mutability":"mutable","name":"data","nameLocation":"81448:4:15","nodeType":"VariableDeclaration","scope":15578,"src":"81432:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15572,"name":"string","nodeType":"ElementaryTypeName","src":"81432:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"81431:22:15"},"returnParameters":{"id":15577,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15576,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":15578,"src":"81477:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":15575,"name":"string","nodeType":"ElementaryTypeName","src":"81477:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"81476:15:15"},"scope":15595,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15586,"nodeType":"FunctionDefinition","src":"81550:77:15","nodes":[],"documentation":{"id":15579,"nodeType":"StructuredDocumentation","src":"81498:47:15","text":"Encodes a `bytes` value to a base64 string."},"functionSelector":"a5cbfe65","implemented":false,"kind":"function","modifiers":[],"name":"toBase64","nameLocation":"81559:8:15","parameters":{"id":15582,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15581,"mutability":"mutable","name":"data","nameLocation":"81583:4:15","nodeType":"VariableDeclaration","scope":15586,"src":"81568:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":15580,"name":"bytes","nodeType":"ElementaryTypeName","src":"81568:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"81567:21:15"},"returnParameters":{"id":15585,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15584,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":15586,"src":"81612:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":15583,"name":"string","nodeType":"ElementaryTypeName","src":"81612:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"81611:15:15"},"scope":15595,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15594,"nodeType":"FunctionDefinition","src":"81686:78:15","nodes":[],"documentation":{"id":15587,"nodeType":"StructuredDocumentation","src":"81633:48:15","text":"Encodes a `string` value to a base64 string."},"functionSelector":"3f8be2c8","implemented":false,"kind":"function","modifiers":[],"name":"toBase64","nameLocation":"81695:8:15","parameters":{"id":15590,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15589,"mutability":"mutable","name":"data","nameLocation":"81720:4:15","nodeType":"VariableDeclaration","scope":15594,"src":"81704:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15588,"name":"string","nodeType":"ElementaryTypeName","src":"81704:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"81703:22:15"},"returnParameters":{"id":15593,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15592,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":15594,"src":"81749:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":15591,"name":"string","nodeType":"ElementaryTypeName","src":"81749:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"81748:15:15"},"scope":15595,"stateMutability":"pure","virtual":false,"visibility":"external"}],"abstract":false,"baseContracts":[],"canonicalName":"VmSafe","contractDependencies":[],"contractKind":"interface","documentation":{"id":12210,"nodeType":"StructuredDocumentation","src":"184:225:15","text":"The `VmSafe` interface does not allow manipulation of the EVM state or other actions that may\n result in Script simulations differing from on-chain execution. It is recommended to only use\n these cheats in scripts."},"fullyImplemented":false,"linearizedBaseContracts":[15595],"name":"VmSafe","nameLocation":"419:6:15","scope":16245,"usedErrors":[],"usedEvents":[]},{"id":16244,"nodeType":"ContractDefinition","src":"81939:15888:15","nodes":[{"id":15604,"nodeType":"FunctionDefinition","src":"82099:61:15","nodes":[],"documentation":{"id":15599,"nodeType":"StructuredDocumentation","src":"81998:96:15","text":"Returns the identifier of the currently active fork. Reverts if no fork is currently active."},"functionSelector":"2f103f22","implemented":false,"kind":"function","modifiers":[],"name":"activeFork","nameLocation":"82108:10:15","parameters":{"id":15600,"nodeType":"ParameterList","parameters":[],"src":"82118:2:15"},"returnParameters":{"id":15603,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15602,"mutability":"mutable","name":"forkId","nameLocation":"82152:6:15","nodeType":"VariableDeclaration","scope":15604,"src":"82144:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15601,"name":"uint256","nodeType":"ElementaryTypeName","src":"82144:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"82143:16:15"},"scope":16244,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":15610,"nodeType":"FunctionDefinition","src":"82244:51:15","nodes":[],"documentation":{"id":15605,"nodeType":"StructuredDocumentation","src":"82166:73:15","text":"In forking mode, explicitly grant the given address cheatcode access."},"functionSelector":"ea060291","implemented":false,"kind":"function","modifiers":[],"name":"allowCheatcodes","nameLocation":"82253:15:15","parameters":{"id":15608,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15607,"mutability":"mutable","name":"account","nameLocation":"82277:7:15","nodeType":"VariableDeclaration","scope":15610,"src":"82269:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15606,"name":"address","nodeType":"ElementaryTypeName","src":"82269:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"82268:17:15"},"returnParameters":{"id":15609,"nodeType":"ParameterList","parameters":[],"src":"82294:0:15"},"scope":16244,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15616,"nodeType":"FunctionDefinition","src":"82334:54:15","nodes":[],"documentation":{"id":15611,"nodeType":"StructuredDocumentation","src":"82301:28:15","text":"Sets `block.blobbasefee`"},"functionSelector":"6d315d7e","implemented":false,"kind":"function","modifiers":[],"name":"blobBaseFee","nameLocation":"82343:11:15","parameters":{"id":15614,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15613,"mutability":"mutable","name":"newBlobBaseFee","nameLocation":"82363:14:15","nodeType":"VariableDeclaration","scope":15616,"src":"82355:22:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15612,"name":"uint256","nodeType":"ElementaryTypeName","src":"82355:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"82354:24:15"},"returnParameters":{"id":15615,"nodeType":"ParameterList","parameters":[],"src":"82387:0:15"},"scope":16244,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15623,"nodeType":"FunctionDefinition","src":"82555:56:15","nodes":[],"documentation":{"id":15617,"nodeType":"StructuredDocumentation","src":"82394:156:15","text":"Sets the blobhashes in the transaction.\n Not available on EVM versions before Cancun.\n If used on unsupported EVM versions it will revert."},"functionSelector":"129de7eb","implemented":false,"kind":"function","modifiers":[],"name":"blobhashes","nameLocation":"82564:10:15","parameters":{"id":15621,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15620,"mutability":"mutable","name":"hashes","nameLocation":"82594:6:15","nodeType":"VariableDeclaration","scope":15623,"src":"82575:25:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":15618,"name":"bytes32","nodeType":"ElementaryTypeName","src":"82575:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":15619,"nodeType":"ArrayTypeName","src":"82575:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"82574:27:15"},"returnParameters":{"id":15622,"nodeType":"ParameterList","parameters":[],"src":"82610:0:15"},"scope":16244,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15629,"nodeType":"FunctionDefinition","src":"82647:46:15","nodes":[],"documentation":{"id":15624,"nodeType":"StructuredDocumentation","src":"82617:25:15","text":"Sets `block.chainid`."},"functionSelector":"4049ddd2","implemented":false,"kind":"function","modifiers":[],"name":"chainId","nameLocation":"82656:7:15","parameters":{"id":15627,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15626,"mutability":"mutable","name":"newChainId","nameLocation":"82672:10:15","nodeType":"VariableDeclaration","scope":15629,"src":"82664:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15625,"name":"uint256","nodeType":"ElementaryTypeName","src":"82664:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"82663:20:15"},"returnParameters":{"id":15628,"nodeType":"ParameterList","parameters":[],"src":"82692:0:15"},"scope":16244,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15633,"nodeType":"FunctionDefinition","src":"82732:37:15","nodes":[],"documentation":{"id":15630,"nodeType":"StructuredDocumentation","src":"82699:28:15","text":"Clears all mocked calls."},"functionSelector":"3fdf4e15","implemented":false,"kind":"function","modifiers":[],"name":"clearMockedCalls","nameLocation":"82741:16:15","parameters":{"id":15631,"nodeType":"ParameterList","parameters":[],"src":"82757:2:15"},"returnParameters":{"id":15632,"nodeType":"ParameterList","parameters":[],"src":"82768:0:15"},"scope":16244,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15639,"nodeType":"FunctionDefinition","src":"82806:48:15","nodes":[],"documentation":{"id":15634,"nodeType":"StructuredDocumentation","src":"82775:26:15","text":"Sets `block.coinbase`."},"functionSelector":"ff483c54","implemented":false,"kind":"function","modifiers":[],"name":"coinbase","nameLocation":"82815:8:15","parameters":{"id":15637,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15636,"mutability":"mutable","name":"newCoinbase","nameLocation":"82832:11:15","nodeType":"VariableDeclaration","scope":15639,"src":"82824:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15635,"name":"address","nodeType":"ElementaryTypeName","src":"82824:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"82823:21:15"},"returnParameters":{"id":15638,"nodeType":"ParameterList","parameters":[],"src":"82853:0:15"},"scope":16244,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15647,"nodeType":"FunctionDefinition","src":"82974:82:15","nodes":[],"documentation":{"id":15640,"nodeType":"StructuredDocumentation","src":"82860:109:15","text":"Creates a new fork with the given endpoint and the _latest_ block and returns the identifier of the fork."},"functionSelector":"31ba3498","implemented":false,"kind":"function","modifiers":[],"name":"createFork","nameLocation":"82983:10:15","parameters":{"id":15643,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15642,"mutability":"mutable","name":"urlOrAlias","nameLocation":"83010:10:15","nodeType":"VariableDeclaration","scope":15647,"src":"82994:26:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15641,"name":"string","nodeType":"ElementaryTypeName","src":"82994:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"82993:28:15"},"returnParameters":{"id":15646,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15645,"mutability":"mutable","name":"forkId","nameLocation":"83048:6:15","nodeType":"VariableDeclaration","scope":15647,"src":"83040:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15644,"name":"uint256","nodeType":"ElementaryTypeName","src":"83040:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"83039:16:15"},"scope":16244,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15657,"nodeType":"FunctionDefinition","src":"83163:103:15","nodes":[],"documentation":{"id":15648,"nodeType":"StructuredDocumentation","src":"83062:96:15","text":"Creates a new fork with the given endpoint and block and returns the identifier of the fork."},"functionSelector":"6ba3ba2b","implemented":false,"kind":"function","modifiers":[],"name":"createFork","nameLocation":"83172:10:15","parameters":{"id":15653,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15650,"mutability":"mutable","name":"urlOrAlias","nameLocation":"83199:10:15","nodeType":"VariableDeclaration","scope":15657,"src":"83183:26:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15649,"name":"string","nodeType":"ElementaryTypeName","src":"83183:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15652,"mutability":"mutable","name":"blockNumber","nameLocation":"83219:11:15","nodeType":"VariableDeclaration","scope":15657,"src":"83211:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15651,"name":"uint256","nodeType":"ElementaryTypeName","src":"83211:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"83182:49:15"},"returnParameters":{"id":15656,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15655,"mutability":"mutable","name":"forkId","nameLocation":"83258:6:15","nodeType":"VariableDeclaration","scope":15657,"src":"83250:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15654,"name":"uint256","nodeType":"ElementaryTypeName","src":"83250:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"83249:16:15"},"scope":16244,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15667,"nodeType":"FunctionDefinition","src":"83491:98:15","nodes":[],"documentation":{"id":15658,"nodeType":"StructuredDocumentation","src":"83272:214:15","text":"Creates a new fork with the given endpoint and at the block the given transaction was mined in,\n replays all transaction mined in the block before the transaction, and returns the identifier of the fork."},"functionSelector":"7ca29682","implemented":false,"kind":"function","modifiers":[],"name":"createFork","nameLocation":"83500:10:15","parameters":{"id":15663,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15660,"mutability":"mutable","name":"urlOrAlias","nameLocation":"83527:10:15","nodeType":"VariableDeclaration","scope":15667,"src":"83511:26:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15659,"name":"string","nodeType":"ElementaryTypeName","src":"83511:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15662,"mutability":"mutable","name":"txHash","nameLocation":"83547:6:15","nodeType":"VariableDeclaration","scope":15667,"src":"83539:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15661,"name":"bytes32","nodeType":"ElementaryTypeName","src":"83539:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"83510:44:15"},"returnParameters":{"id":15666,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15665,"mutability":"mutable","name":"forkId","nameLocation":"83581:6:15","nodeType":"VariableDeclaration","scope":15667,"src":"83573:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15664,"name":"uint256","nodeType":"ElementaryTypeName","src":"83573:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"83572:16:15"},"scope":16244,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15675,"nodeType":"FunctionDefinition","src":"83724:88:15","nodes":[],"documentation":{"id":15668,"nodeType":"StructuredDocumentation","src":"83595:124:15","text":"Creates and also selects a new fork with the given endpoint and the latest block and returns the identifier of the fork."},"functionSelector":"98680034","implemented":false,"kind":"function","modifiers":[],"name":"createSelectFork","nameLocation":"83733:16:15","parameters":{"id":15671,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15670,"mutability":"mutable","name":"urlOrAlias","nameLocation":"83766:10:15","nodeType":"VariableDeclaration","scope":15675,"src":"83750:26:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15669,"name":"string","nodeType":"ElementaryTypeName","src":"83750:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"83749:28:15"},"returnParameters":{"id":15674,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15673,"mutability":"mutable","name":"forkId","nameLocation":"83804:6:15","nodeType":"VariableDeclaration","scope":15675,"src":"83796:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15672,"name":"uint256","nodeType":"ElementaryTypeName","src":"83796:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"83795:16:15"},"scope":16244,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15685,"nodeType":"FunctionDefinition","src":"83936:109:15","nodes":[],"documentation":{"id":15676,"nodeType":"StructuredDocumentation","src":"83818:113:15","text":"Creates and also selects a new fork with the given endpoint and block and returns the identifier of the fork."},"functionSelector":"71ee464d","implemented":false,"kind":"function","modifiers":[],"name":"createSelectFork","nameLocation":"83945:16:15","parameters":{"id":15681,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15678,"mutability":"mutable","name":"urlOrAlias","nameLocation":"83978:10:15","nodeType":"VariableDeclaration","scope":15685,"src":"83962:26:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15677,"name":"string","nodeType":"ElementaryTypeName","src":"83962:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15680,"mutability":"mutable","name":"blockNumber","nameLocation":"83998:11:15","nodeType":"VariableDeclaration","scope":15685,"src":"83990:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15679,"name":"uint256","nodeType":"ElementaryTypeName","src":"83990:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"83961:49:15"},"returnParameters":{"id":15684,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15683,"mutability":"mutable","name":"forkId","nameLocation":"84037:6:15","nodeType":"VariableDeclaration","scope":15685,"src":"84029:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15682,"name":"uint256","nodeType":"ElementaryTypeName","src":"84029:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"84028:16:15"},"scope":16244,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15695,"nodeType":"FunctionDefinition","src":"84281:104:15","nodes":[],"documentation":{"id":15686,"nodeType":"StructuredDocumentation","src":"84051:225:15","text":"Creates and also selects new fork with the given endpoint and at the block the given transaction was mined in,\n replays all transaction mined in the block before the transaction, returns the identifier of the fork."},"functionSelector":"84d52b7a","implemented":false,"kind":"function","modifiers":[],"name":"createSelectFork","nameLocation":"84290:16:15","parameters":{"id":15691,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15688,"mutability":"mutable","name":"urlOrAlias","nameLocation":"84323:10:15","nodeType":"VariableDeclaration","scope":15695,"src":"84307:26:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15687,"name":"string","nodeType":"ElementaryTypeName","src":"84307:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15690,"mutability":"mutable","name":"txHash","nameLocation":"84343:6:15","nodeType":"VariableDeclaration","scope":15695,"src":"84335:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15689,"name":"bytes32","nodeType":"ElementaryTypeName","src":"84335:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"84306:44:15"},"returnParameters":{"id":15694,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15693,"mutability":"mutable","name":"forkId","nameLocation":"84377:6:15","nodeType":"VariableDeclaration","scope":15695,"src":"84369:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15692,"name":"uint256","nodeType":"ElementaryTypeName","src":"84369:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"84368:16:15"},"scope":16244,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15703,"nodeType":"FunctionDefinition","src":"84425:60:15","nodes":[],"documentation":{"id":15696,"nodeType":"StructuredDocumentation","src":"84391:29:15","text":"Sets an address' balance."},"functionSelector":"c88a5e6d","implemented":false,"kind":"function","modifiers":[],"name":"deal","nameLocation":"84434:4:15","parameters":{"id":15701,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15698,"mutability":"mutable","name":"account","nameLocation":"84447:7:15","nodeType":"VariableDeclaration","scope":15703,"src":"84439:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15697,"name":"address","nodeType":"ElementaryTypeName","src":"84439:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":15700,"mutability":"mutable","name":"newBalance","nameLocation":"84464:10:15","nodeType":"VariableDeclaration","scope":15703,"src":"84456:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15699,"name":"uint256","nodeType":"ElementaryTypeName","src":"84456:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"84438:37:15"},"returnParameters":{"id":15702,"nodeType":"ParameterList","parameters":[],"src":"84484:0:15"},"scope":16244,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15711,"nodeType":"FunctionDefinition","src":"84723:76:15","nodes":[],"documentation":{"id":15704,"nodeType":"StructuredDocumentation","src":"84491:227:15","text":"Removes the snapshot with the given ID created by `snapshot`.\n Takes the snapshot ID to delete.\n Returns `true` if the snapshot was successfully deleted.\n Returns `false` if the snapshot does not exist."},"functionSelector":"a6368557","implemented":false,"kind":"function","modifiers":[],"name":"deleteSnapshot","nameLocation":"84732:14:15","parameters":{"id":15707,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15706,"mutability":"mutable","name":"snapshotId","nameLocation":"84755:10:15","nodeType":"VariableDeclaration","scope":15711,"src":"84747:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15705,"name":"uint256","nodeType":"ElementaryTypeName","src":"84747:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"84746:20:15"},"returnParameters":{"id":15710,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15709,"mutability":"mutable","name":"success","nameLocation":"84790:7:15","nodeType":"VariableDeclaration","scope":15711,"src":"84785:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":15708,"name":"bool","nodeType":"ElementaryTypeName","src":"84785:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"84784:14:15"},"scope":16244,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15715,"nodeType":"FunctionDefinition","src":"84871:36:15","nodes":[],"documentation":{"id":15712,"nodeType":"StructuredDocumentation","src":"84805:61:15","text":"Removes _all_ snapshots previously created by `snapshot`."},"functionSelector":"421ae469","implemented":false,"kind":"function","modifiers":[],"name":"deleteSnapshots","nameLocation":"84880:15:15","parameters":{"id":15713,"nodeType":"ParameterList","parameters":[],"src":"84895:2:15"},"returnParameters":{"id":15714,"nodeType":"ParameterList","parameters":[],"src":"84906:0:15"},"scope":16244,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15721,"nodeType":"FunctionDefinition","src":"85083:52:15","nodes":[],"documentation":{"id":15716,"nodeType":"StructuredDocumentation","src":"84913:165:15","text":"Sets `block.difficulty`.\n Not available on EVM versions from Paris onwards. Use `prevrandao` instead.\n Reverts if used on unsupported EVM versions."},"functionSelector":"46cc92d9","implemented":false,"kind":"function","modifiers":[],"name":"difficulty","nameLocation":"85092:10:15","parameters":{"id":15719,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15718,"mutability":"mutable","name":"newDifficulty","nameLocation":"85111:13:15","nodeType":"VariableDeclaration","scope":15721,"src":"85103:21:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15717,"name":"uint256","nodeType":"ElementaryTypeName","src":"85103:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"85102:23:15"},"returnParameters":{"id":15720,"nodeType":"ParameterList","parameters":[],"src":"85134:0:15"},"scope":16244,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15727,"nodeType":"FunctionDefinition","src":"85194:61:15","nodes":[],"documentation":{"id":15722,"nodeType":"StructuredDocumentation","src":"85141:48:15","text":"Dump a genesis JSON file's `allocs` to disk."},"functionSelector":"709ecd3f","implemented":false,"kind":"function","modifiers":[],"name":"dumpState","nameLocation":"85203:9:15","parameters":{"id":15725,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15724,"mutability":"mutable","name":"pathToStateJson","nameLocation":"85229:15:15","nodeType":"VariableDeclaration","scope":15727,"src":"85213:31:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15723,"name":"string","nodeType":"ElementaryTypeName","src":"85213:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"85212:33:15"},"returnParameters":{"id":15726,"nodeType":"ParameterList","parameters":[],"src":"85254:0:15"},"scope":16244,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15735,"nodeType":"FunctionDefinition","src":"85292:74:15","nodes":[],"documentation":{"id":15728,"nodeType":"StructuredDocumentation","src":"85261:26:15","text":"Sets an address' code."},"functionSelector":"b4d6c782","implemented":false,"kind":"function","modifiers":[],"name":"etch","nameLocation":"85301:4:15","parameters":{"id":15733,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15730,"mutability":"mutable","name":"target","nameLocation":"85314:6:15","nodeType":"VariableDeclaration","scope":15735,"src":"85306:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15729,"name":"address","nodeType":"ElementaryTypeName","src":"85306:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":15732,"mutability":"mutable","name":"newRuntimeBytecode","nameLocation":"85337:18:15","nodeType":"VariableDeclaration","scope":15735,"src":"85322:33:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":15731,"name":"bytes","nodeType":"ElementaryTypeName","src":"85322:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"85305:51:15"},"returnParameters":{"id":15734,"nodeType":"ParameterList","parameters":[],"src":"85365:0:15"},"scope":16244,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15741,"nodeType":"FunctionDefinition","src":"85402:42:15","nodes":[],"documentation":{"id":15736,"nodeType":"StructuredDocumentation","src":"85372:25:15","text":"Sets `block.basefee`."},"functionSelector":"39b37ab0","implemented":false,"kind":"function","modifiers":[],"name":"fee","nameLocation":"85411:3:15","parameters":{"id":15739,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15738,"mutability":"mutable","name":"newBasefee","nameLocation":"85423:10:15","nodeType":"VariableDeclaration","scope":15741,"src":"85415:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15737,"name":"uint256","nodeType":"ElementaryTypeName","src":"85415:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"85414:20:15"},"returnParameters":{"id":15740,"nodeType":"ParameterList","parameters":[],"src":"85443:0:15"},"scope":16244,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15748,"nodeType":"FunctionDefinition","src":"85622:73:15","nodes":[],"documentation":{"id":15742,"nodeType":"StructuredDocumentation","src":"85450:167:15","text":"Gets the blockhashes from the current transaction.\n Not available on EVM versions before Cancun.\n If used on unsupported EVM versions it will revert."},"functionSelector":"f56ff18b","implemented":false,"kind":"function","modifiers":[],"name":"getBlobhashes","nameLocation":"85631:13:15","parameters":{"id":15743,"nodeType":"ParameterList","parameters":[],"src":"85644:2:15"},"returnParameters":{"id":15747,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15746,"mutability":"mutable","name":"hashes","nameLocation":"85687:6:15","nodeType":"VariableDeclaration","scope":15748,"src":"85670:23:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":15744,"name":"bytes32","nodeType":"ElementaryTypeName","src":"85670:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":15745,"nodeType":"ArrayTypeName","src":"85670:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"85669:25:15"},"scope":16244,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":15756,"nodeType":"FunctionDefinition","src":"85762:79:15","nodes":[],"documentation":{"id":15749,"nodeType":"StructuredDocumentation","src":"85701:56:15","text":"Returns true if the account is marked as persistent."},"functionSelector":"d92d8efd","implemented":false,"kind":"function","modifiers":[],"name":"isPersistent","nameLocation":"85771:12:15","parameters":{"id":15752,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15751,"mutability":"mutable","name":"account","nameLocation":"85792:7:15","nodeType":"VariableDeclaration","scope":15756,"src":"85784:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15750,"name":"address","nodeType":"ElementaryTypeName","src":"85784:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"85783:17:15"},"returnParameters":{"id":15755,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15754,"mutability":"mutable","name":"persistent","nameLocation":"85829:10:15","nodeType":"VariableDeclaration","scope":15756,"src":"85824:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":15753,"name":"bool","nodeType":"ElementaryTypeName","src":"85824:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"85823:17:15"},"scope":16244,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":15762,"nodeType":"FunctionDefinition","src":"85922:63:15","nodes":[],"documentation":{"id":15757,"nodeType":"StructuredDocumentation","src":"85847:70:15","text":"Load a genesis JSON file's `allocs` into the in-memory revm state."},"functionSelector":"b3a056d7","implemented":false,"kind":"function","modifiers":[],"name":"loadAllocs","nameLocation":"85931:10:15","parameters":{"id":15760,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15759,"mutability":"mutable","name":"pathToAllocsJson","nameLocation":"85958:16:15","nodeType":"VariableDeclaration","scope":15762,"src":"85942:32:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15758,"name":"string","nodeType":"ElementaryTypeName","src":"85942:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"85941:34:15"},"returnParameters":{"id":15761,"nodeType":"ParameterList","parameters":[],"src":"85984:0:15"},"scope":16244,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15768,"nodeType":"FunctionDefinition","src":"86188:50:15","nodes":[],"documentation":{"id":15763,"nodeType":"StructuredDocumentation","src":"85991:192:15","text":"Marks that the account(s) should use persistent storage across fork swaps in a multifork setup\n Meaning, changes made to the state of this account will be kept when switching forks."},"functionSelector":"57e22dde","implemented":false,"kind":"function","modifiers":[],"name":"makePersistent","nameLocation":"86197:14:15","parameters":{"id":15766,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15765,"mutability":"mutable","name":"account","nameLocation":"86220:7:15","nodeType":"VariableDeclaration","scope":15768,"src":"86212:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15764,"name":"address","nodeType":"ElementaryTypeName","src":"86212:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"86211:17:15"},"returnParameters":{"id":15767,"nodeType":"ParameterList","parameters":[],"src":"86237:0:15"},"scope":16244,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15776,"nodeType":"FunctionDefinition","src":"86283:69:15","nodes":[],"documentation":{"id":15769,"nodeType":"StructuredDocumentation","src":"86244:34:15","text":"See `makePersistent(address)`."},"functionSelector":"4074e0a8","implemented":false,"kind":"function","modifiers":[],"name":"makePersistent","nameLocation":"86292:14:15","parameters":{"id":15774,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15771,"mutability":"mutable","name":"account0","nameLocation":"86315:8:15","nodeType":"VariableDeclaration","scope":15776,"src":"86307:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15770,"name":"address","nodeType":"ElementaryTypeName","src":"86307:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":15773,"mutability":"mutable","name":"account1","nameLocation":"86333:8:15","nodeType":"VariableDeclaration","scope":15776,"src":"86325:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15772,"name":"address","nodeType":"ElementaryTypeName","src":"86325:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"86306:36:15"},"returnParameters":{"id":15775,"nodeType":"ParameterList","parameters":[],"src":"86351:0:15"},"scope":16244,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15786,"nodeType":"FunctionDefinition","src":"86397:87:15","nodes":[],"documentation":{"id":15777,"nodeType":"StructuredDocumentation","src":"86358:34:15","text":"See `makePersistent(address)`."},"functionSelector":"efb77a75","implemented":false,"kind":"function","modifiers":[],"name":"makePersistent","nameLocation":"86406:14:15","parameters":{"id":15784,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15779,"mutability":"mutable","name":"account0","nameLocation":"86429:8:15","nodeType":"VariableDeclaration","scope":15786,"src":"86421:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15778,"name":"address","nodeType":"ElementaryTypeName","src":"86421:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":15781,"mutability":"mutable","name":"account1","nameLocation":"86447:8:15","nodeType":"VariableDeclaration","scope":15786,"src":"86439:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15780,"name":"address","nodeType":"ElementaryTypeName","src":"86439:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":15783,"mutability":"mutable","name":"account2","nameLocation":"86465:8:15","nodeType":"VariableDeclaration","scope":15786,"src":"86457:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15782,"name":"address","nodeType":"ElementaryTypeName","src":"86457:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"86420:54:15"},"returnParameters":{"id":15785,"nodeType":"ParameterList","parameters":[],"src":"86483:0:15"},"scope":16244,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15793,"nodeType":"FunctionDefinition","src":"86529:62:15","nodes":[],"documentation":{"id":15787,"nodeType":"StructuredDocumentation","src":"86490:34:15","text":"See `makePersistent(address)`."},"functionSelector":"1d9e269e","implemented":false,"kind":"function","modifiers":[],"name":"makePersistent","nameLocation":"86538:14:15","parameters":{"id":15791,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15790,"mutability":"mutable","name":"accounts","nameLocation":"86572:8:15","nodeType":"VariableDeclaration","scope":15793,"src":"86553:27:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":15788,"name":"address","nodeType":"ElementaryTypeName","src":"86553:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":15789,"nodeType":"ArrayTypeName","src":"86553:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"86552:29:15"},"returnParameters":{"id":15792,"nodeType":"ParameterList","parameters":[],"src":"86590:0:15"},"scope":16244,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15803,"nodeType":"FunctionDefinition","src":"86662:97:15","nodes":[],"documentation":{"id":15794,"nodeType":"StructuredDocumentation","src":"86597:60:15","text":"Reverts a call to an address with specified revert data."},"functionSelector":"dbaad147","implemented":false,"kind":"function","modifiers":[],"name":"mockCallRevert","nameLocation":"86671:14:15","parameters":{"id":15801,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15796,"mutability":"mutable","name":"callee","nameLocation":"86694:6:15","nodeType":"VariableDeclaration","scope":15803,"src":"86686:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15795,"name":"address","nodeType":"ElementaryTypeName","src":"86686:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":15798,"mutability":"mutable","name":"data","nameLocation":"86717:4:15","nodeType":"VariableDeclaration","scope":15803,"src":"86702:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":15797,"name":"bytes","nodeType":"ElementaryTypeName","src":"86702:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":15800,"mutability":"mutable","name":"revertData","nameLocation":"86738:10:15","nodeType":"VariableDeclaration","scope":15803,"src":"86723:25:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":15799,"name":"bytes","nodeType":"ElementaryTypeName","src":"86723:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"86685:64:15"},"returnParameters":{"id":15802,"nodeType":"ParameterList","parameters":[],"src":"86758:0:15"},"scope":16244,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15815,"nodeType":"FunctionDefinition","src":"86859:123:15","nodes":[],"documentation":{"id":15804,"nodeType":"StructuredDocumentation","src":"86765:89:15","text":"Reverts a call to an address with a specific `msg.value`, with specified revert data."},"functionSelector":"d23cd037","implemented":false,"kind":"function","modifiers":[],"name":"mockCallRevert","nameLocation":"86868:14:15","parameters":{"id":15813,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15806,"mutability":"mutable","name":"callee","nameLocation":"86891:6:15","nodeType":"VariableDeclaration","scope":15815,"src":"86883:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15805,"name":"address","nodeType":"ElementaryTypeName","src":"86883:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":15808,"mutability":"mutable","name":"msgValue","nameLocation":"86907:8:15","nodeType":"VariableDeclaration","scope":15815,"src":"86899:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15807,"name":"uint256","nodeType":"ElementaryTypeName","src":"86899:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15810,"mutability":"mutable","name":"data","nameLocation":"86932:4:15","nodeType":"VariableDeclaration","scope":15815,"src":"86917:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":15809,"name":"bytes","nodeType":"ElementaryTypeName","src":"86917:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":15812,"mutability":"mutable","name":"revertData","nameLocation":"86953:10:15","nodeType":"VariableDeclaration","scope":15815,"src":"86938:25:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":15811,"name":"bytes","nodeType":"ElementaryTypeName","src":"86938:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"86882:82:15"},"returnParameters":{"id":15814,"nodeType":"ParameterList","parameters":[],"src":"86981:0:15"},"scope":16244,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15825,"nodeType":"FunctionDefinition","src":"87242:91:15","nodes":[],"documentation":{"id":15816,"nodeType":"StructuredDocumentation","src":"86988:249:15","text":"Mocks a call to an address, returning specified data.\n Calldata can either be strict or a partial match, e.g. if you only\n pass a Solidity selector to the expected calldata, then the entire Solidity\n function will be mocked."},"functionSelector":"b96213e4","implemented":false,"kind":"function","modifiers":[],"name":"mockCall","nameLocation":"87251:8:15","parameters":{"id":15823,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15818,"mutability":"mutable","name":"callee","nameLocation":"87268:6:15","nodeType":"VariableDeclaration","scope":15825,"src":"87260:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15817,"name":"address","nodeType":"ElementaryTypeName","src":"87260:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":15820,"mutability":"mutable","name":"data","nameLocation":"87291:4:15","nodeType":"VariableDeclaration","scope":15825,"src":"87276:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":15819,"name":"bytes","nodeType":"ElementaryTypeName","src":"87276:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":15822,"mutability":"mutable","name":"returnData","nameLocation":"87312:10:15","nodeType":"VariableDeclaration","scope":15825,"src":"87297:25:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":15821,"name":"bytes","nodeType":"ElementaryTypeName","src":"87297:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"87259:64:15"},"returnParameters":{"id":15824,"nodeType":"ParameterList","parameters":[],"src":"87332:0:15"},"scope":16244,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15837,"nodeType":"FunctionDefinition","src":"87508:109:15","nodes":[],"documentation":{"id":15826,"nodeType":"StructuredDocumentation","src":"87339:164:15","text":"Mocks a call to an address with a specific `msg.value`, returning specified data.\n Calldata match takes precedence over `msg.value` in case of ambiguity."},"functionSelector":"81409b91","implemented":false,"kind":"function","modifiers":[],"name":"mockCall","nameLocation":"87517:8:15","parameters":{"id":15835,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15828,"mutability":"mutable","name":"callee","nameLocation":"87534:6:15","nodeType":"VariableDeclaration","scope":15837,"src":"87526:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15827,"name":"address","nodeType":"ElementaryTypeName","src":"87526:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":15830,"mutability":"mutable","name":"msgValue","nameLocation":"87550:8:15","nodeType":"VariableDeclaration","scope":15837,"src":"87542:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15829,"name":"uint256","nodeType":"ElementaryTypeName","src":"87542:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15832,"mutability":"mutable","name":"data","nameLocation":"87575:4:15","nodeType":"VariableDeclaration","scope":15837,"src":"87560:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":15831,"name":"bytes","nodeType":"ElementaryTypeName","src":"87560:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":15834,"mutability":"mutable","name":"returnData","nameLocation":"87596:10:15","nodeType":"VariableDeclaration","scope":15837,"src":"87581:25:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":15833,"name":"bytes","nodeType":"ElementaryTypeName","src":"87581:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"87525:82:15"},"returnParameters":{"id":15836,"nodeType":"ParameterList","parameters":[],"src":"87616:0:15"},"scope":16244,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15843,"nodeType":"FunctionDefinition","src":"87692:43:15","nodes":[],"documentation":{"id":15838,"nodeType":"StructuredDocumentation","src":"87623:64:15","text":"Sets the *next* call's `msg.sender` to be the input address."},"functionSelector":"ca669fa7","implemented":false,"kind":"function","modifiers":[],"name":"prank","nameLocation":"87701:5:15","parameters":{"id":15841,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15840,"mutability":"mutable","name":"msgSender","nameLocation":"87715:9:15","nodeType":"VariableDeclaration","scope":15843,"src":"87707:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15839,"name":"address","nodeType":"ElementaryTypeName","src":"87707:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"87706:19:15"},"returnParameters":{"id":15842,"nodeType":"ParameterList","parameters":[],"src":"87734:0:15"},"scope":16244,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15851,"nodeType":"FunctionDefinition","src":"87854:61:15","nodes":[],"documentation":{"id":15844,"nodeType":"StructuredDocumentation","src":"87741:108:15","text":"Sets the *next* call's `msg.sender` to be the input address, and the `tx.origin` to be the second input."},"functionSelector":"47e50cce","implemented":false,"kind":"function","modifiers":[],"name":"prank","nameLocation":"87863:5:15","parameters":{"id":15849,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15846,"mutability":"mutable","name":"msgSender","nameLocation":"87877:9:15","nodeType":"VariableDeclaration","scope":15851,"src":"87869:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15845,"name":"address","nodeType":"ElementaryTypeName","src":"87869:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":15848,"mutability":"mutable","name":"txOrigin","nameLocation":"87896:8:15","nodeType":"VariableDeclaration","scope":15851,"src":"87888:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15847,"name":"address","nodeType":"ElementaryTypeName","src":"87888:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"87868:37:15"},"returnParameters":{"id":15850,"nodeType":"ParameterList","parameters":[],"src":"87914:0:15"},"scope":16244,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15857,"nodeType":"FunctionDefinition","src":"88092:52:15","nodes":[],"documentation":{"id":15852,"nodeType":"StructuredDocumentation","src":"87921:166:15","text":"Sets `block.prevrandao`.\n Not available on EVM versions before Paris. Use `difficulty` instead.\n If used on unsupported EVM versions it will revert."},"functionSelector":"3b925549","implemented":false,"kind":"function","modifiers":[],"name":"prevrandao","nameLocation":"88101:10:15","parameters":{"id":15855,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15854,"mutability":"mutable","name":"newPrevrandao","nameLocation":"88120:13:15","nodeType":"VariableDeclaration","scope":15857,"src":"88112:21:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15853,"name":"bytes32","nodeType":"ElementaryTypeName","src":"88112:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"88111:23:15"},"returnParameters":{"id":15856,"nodeType":"ParameterList","parameters":[],"src":"88143:0:15"},"scope":16244,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15863,"nodeType":"FunctionDefinition","src":"88321:52:15","nodes":[],"documentation":{"id":15858,"nodeType":"StructuredDocumentation","src":"88150:166:15","text":"Sets `block.prevrandao`.\n Not available on EVM versions before Paris. Use `difficulty` instead.\n If used on unsupported EVM versions it will revert."},"functionSelector":"9cb1c0d4","implemented":false,"kind":"function","modifiers":[],"name":"prevrandao","nameLocation":"88330:10:15","parameters":{"id":15861,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15860,"mutability":"mutable","name":"newPrevrandao","nameLocation":"88349:13:15","nodeType":"VariableDeclaration","scope":15863,"src":"88341:21:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15859,"name":"uint256","nodeType":"ElementaryTypeName","src":"88341:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"88340:23:15"},"returnParameters":{"id":15862,"nodeType":"ParameterList","parameters":[],"src":"88372:0:15"},"scope":16244,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15874,"nodeType":"FunctionDefinition","src":"88501:101:15","nodes":[],"documentation":{"id":15864,"nodeType":"StructuredDocumentation","src":"88379:117:15","text":"Reads the current `msg.sender` and `tx.origin` from state and reports if there is any active caller modification."},"functionSelector":"4ad0bac9","implemented":false,"kind":"function","modifiers":[],"name":"readCallers","nameLocation":"88510:11:15","parameters":{"id":15865,"nodeType":"ParameterList","parameters":[],"src":"88521:2:15"},"returnParameters":{"id":15873,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15868,"mutability":"mutable","name":"callerMode","nameLocation":"88553:10:15","nodeType":"VariableDeclaration","scope":15874,"src":"88542:21:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_CallerMode_$12217","typeString":"enum VmSafe.CallerMode"},"typeName":{"id":15867,"nodeType":"UserDefinedTypeName","pathNode":{"id":15866,"name":"CallerMode","nameLocations":["88542:10:15"],"nodeType":"IdentifierPath","referencedDeclaration":12217,"src":"88542:10:15"},"referencedDeclaration":12217,"src":"88542:10:15","typeDescriptions":{"typeIdentifier":"t_enum$_CallerMode_$12217","typeString":"enum VmSafe.CallerMode"}},"visibility":"internal"},{"constant":false,"id":15870,"mutability":"mutable","name":"msgSender","nameLocation":"88573:9:15","nodeType":"VariableDeclaration","scope":15874,"src":"88565:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15869,"name":"address","nodeType":"ElementaryTypeName","src":"88565:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":15872,"mutability":"mutable","name":"txOrigin","nameLocation":"88592:8:15","nodeType":"VariableDeclaration","scope":15874,"src":"88584:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15871,"name":"address","nodeType":"ElementaryTypeName","src":"88584:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"88541:60:15"},"scope":16244,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15880,"nodeType":"FunctionDefinition","src":"88690:46:15","nodes":[],"documentation":{"id":15875,"nodeType":"StructuredDocumentation","src":"88608:77:15","text":"Resets the nonce of an account to 0 for EOAs and 1 for contract accounts."},"functionSelector":"1c72346d","implemented":false,"kind":"function","modifiers":[],"name":"resetNonce","nameLocation":"88699:10:15","parameters":{"id":15878,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15877,"mutability":"mutable","name":"account","nameLocation":"88718:7:15","nodeType":"VariableDeclaration","scope":15880,"src":"88710:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15876,"name":"address","nodeType":"ElementaryTypeName","src":"88710:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"88709:17:15"},"returnParameters":{"id":15879,"nodeType":"ParameterList","parameters":[],"src":"88735:0:15"},"scope":16244,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15888,"nodeType":"FunctionDefinition","src":"89079:70:15","nodes":[],"documentation":{"id":15881,"nodeType":"StructuredDocumentation","src":"88742:332:15","text":"Revert the state of the EVM to a previous snapshot\n Takes the snapshot ID to revert to.\n Returns `true` if the snapshot was successfully reverted.\n Returns `false` if the snapshot does not exist.\n **Note:** This does not automatically delete the snapshot. To delete the snapshot use `deleteSnapshot`."},"functionSelector":"44d7f0a4","implemented":false,"kind":"function","modifiers":[],"name":"revertTo","nameLocation":"89088:8:15","parameters":{"id":15884,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15883,"mutability":"mutable","name":"snapshotId","nameLocation":"89105:10:15","nodeType":"VariableDeclaration","scope":15888,"src":"89097:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15882,"name":"uint256","nodeType":"ElementaryTypeName","src":"89097:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"89096:20:15"},"returnParameters":{"id":15887,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15886,"mutability":"mutable","name":"success","nameLocation":"89140:7:15","nodeType":"VariableDeclaration","scope":15888,"src":"89135:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":15885,"name":"bool","nodeType":"ElementaryTypeName","src":"89135:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"89134:14:15"},"scope":16244,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15896,"nodeType":"FunctionDefinition","src":"89432:79:15","nodes":[],"documentation":{"id":15889,"nodeType":"StructuredDocumentation","src":"89155:272:15","text":"Revert the state of the EVM to a previous snapshot and automatically deletes the snapshots\n Takes the snapshot ID to revert to.\n Returns `true` if the snapshot was successfully reverted and deleted.\n Returns `false` if the snapshot does not exist."},"functionSelector":"03e0aca9","implemented":false,"kind":"function","modifiers":[],"name":"revertToAndDelete","nameLocation":"89441:17:15","parameters":{"id":15892,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15891,"mutability":"mutable","name":"snapshotId","nameLocation":"89467:10:15","nodeType":"VariableDeclaration","scope":15896,"src":"89459:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15890,"name":"uint256","nodeType":"ElementaryTypeName","src":"89459:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"89458:20:15"},"returnParameters":{"id":15895,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15894,"mutability":"mutable","name":"success","nameLocation":"89502:7:15","nodeType":"VariableDeclaration","scope":15896,"src":"89497:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":15893,"name":"bool","nodeType":"ElementaryTypeName","src":"89497:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"89496:14:15"},"scope":16244,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15902,"nodeType":"FunctionDefinition","src":"89608:52:15","nodes":[],"documentation":{"id":15897,"nodeType":"StructuredDocumentation","src":"89517:86:15","text":"Revokes persistent status from the address, previously added via `makePersistent`."},"functionSelector":"997a0222","implemented":false,"kind":"function","modifiers":[],"name":"revokePersistent","nameLocation":"89617:16:15","parameters":{"id":15900,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15899,"mutability":"mutable","name":"account","nameLocation":"89642:7:15","nodeType":"VariableDeclaration","scope":15902,"src":"89634:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15898,"name":"address","nodeType":"ElementaryTypeName","src":"89634:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"89633:17:15"},"returnParameters":{"id":15901,"nodeType":"ParameterList","parameters":[],"src":"89659:0:15"},"scope":16244,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15909,"nodeType":"FunctionDefinition","src":"89707:64:15","nodes":[],"documentation":{"id":15903,"nodeType":"StructuredDocumentation","src":"89666:36:15","text":"See `revokePersistent(address)`."},"functionSelector":"3ce969e6","implemented":false,"kind":"function","modifiers":[],"name":"revokePersistent","nameLocation":"89716:16:15","parameters":{"id":15907,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15906,"mutability":"mutable","name":"accounts","nameLocation":"89752:8:15","nodeType":"VariableDeclaration","scope":15909,"src":"89733:27:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":15904,"name":"address","nodeType":"ElementaryTypeName","src":"89733:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":15905,"nodeType":"ArrayTypeName","src":"89733:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"89732:29:15"},"returnParameters":{"id":15908,"nodeType":"ParameterList","parameters":[],"src":"89770:0:15"},"scope":16244,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15915,"nodeType":"FunctionDefinition","src":"89806:42:15","nodes":[],"documentation":{"id":15910,"nodeType":"StructuredDocumentation","src":"89777:24:15","text":"Sets `block.height`."},"functionSelector":"1f7b4f30","implemented":false,"kind":"function","modifiers":[],"name":"roll","nameLocation":"89815:4:15","parameters":{"id":15913,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15912,"mutability":"mutable","name":"newHeight","nameLocation":"89828:9:15","nodeType":"VariableDeclaration","scope":15915,"src":"89820:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15911,"name":"uint256","nodeType":"ElementaryTypeName","src":"89820:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"89819:19:15"},"returnParameters":{"id":15914,"nodeType":"ParameterList","parameters":[],"src":"89847:0:15"},"scope":16244,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15921,"nodeType":"FunctionDefinition","src":"89987:48:15","nodes":[],"documentation":{"id":15916,"nodeType":"StructuredDocumentation","src":"89854:128:15","text":"Updates the currently active fork to given block number\n This is similar to `roll` but for the currently active fork."},"functionSelector":"d9bbf3a1","implemented":false,"kind":"function","modifiers":[],"name":"rollFork","nameLocation":"89996:8:15","parameters":{"id":15919,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15918,"mutability":"mutable","name":"blockNumber","nameLocation":"90013:11:15","nodeType":"VariableDeclaration","scope":15921,"src":"90005:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15917,"name":"uint256","nodeType":"ElementaryTypeName","src":"90005:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"90004:21:15"},"returnParameters":{"id":15920,"nodeType":"ParameterList","parameters":[],"src":"90034:0:15"},"scope":16244,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15927,"nodeType":"FunctionDefinition","src":"90250:43:15","nodes":[],"documentation":{"id":15922,"nodeType":"StructuredDocumentation","src":"90041:204:15","text":"Updates the currently active fork to given transaction. This will `rollFork` with the number\n of the block the transaction was mined in and replays all transaction mined before it in the block."},"functionSelector":"0f29772b","implemented":false,"kind":"function","modifiers":[],"name":"rollFork","nameLocation":"90259:8:15","parameters":{"id":15925,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15924,"mutability":"mutable","name":"txHash","nameLocation":"90276:6:15","nodeType":"VariableDeclaration","scope":15927,"src":"90268:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15923,"name":"bytes32","nodeType":"ElementaryTypeName","src":"90268:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"90267:16:15"},"returnParameters":{"id":15926,"nodeType":"ParameterList","parameters":[],"src":"90292:0:15"},"scope":16244,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15935,"nodeType":"FunctionDefinition","src":"90353:64:15","nodes":[],"documentation":{"id":15928,"nodeType":"StructuredDocumentation","src":"90299:49:15","text":"Updates the given fork to given block number."},"functionSelector":"d74c83a4","implemented":false,"kind":"function","modifiers":[],"name":"rollFork","nameLocation":"90362:8:15","parameters":{"id":15933,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15930,"mutability":"mutable","name":"forkId","nameLocation":"90379:6:15","nodeType":"VariableDeclaration","scope":15935,"src":"90371:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15929,"name":"uint256","nodeType":"ElementaryTypeName","src":"90371:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15932,"mutability":"mutable","name":"blockNumber","nameLocation":"90395:11:15","nodeType":"VariableDeclaration","scope":15935,"src":"90387:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15931,"name":"uint256","nodeType":"ElementaryTypeName","src":"90387:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"90370:37:15"},"returnParameters":{"id":15934,"nodeType":"ParameterList","parameters":[],"src":"90416:0:15"},"scope":16244,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15943,"nodeType":"FunctionDefinition","src":"90553:59:15","nodes":[],"documentation":{"id":15936,"nodeType":"StructuredDocumentation","src":"90423:125:15","text":"Updates the given fork to block number of the given transaction and replays all transaction mined before it in the block."},"functionSelector":"f2830f7b","implemented":false,"kind":"function","modifiers":[],"name":"rollFork","nameLocation":"90562:8:15","parameters":{"id":15941,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15938,"mutability":"mutable","name":"forkId","nameLocation":"90579:6:15","nodeType":"VariableDeclaration","scope":15943,"src":"90571:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15937,"name":"uint256","nodeType":"ElementaryTypeName","src":"90571:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15940,"mutability":"mutable","name":"txHash","nameLocation":"90595:6:15","nodeType":"VariableDeclaration","scope":15943,"src":"90587:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15939,"name":"bytes32","nodeType":"ElementaryTypeName","src":"90587:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"90570:32:15"},"returnParameters":{"id":15942,"nodeType":"ParameterList","parameters":[],"src":"90611:0:15"},"scope":16244,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15949,"nodeType":"FunctionDefinition","src":"90725:45:15","nodes":[],"documentation":{"id":15944,"nodeType":"StructuredDocumentation","src":"90618:102:15","text":"Takes a fork identifier created by `createFork` and sets the corresponding forked state as active."},"functionSelector":"9ebf6827","implemented":false,"kind":"function","modifiers":[],"name":"selectFork","nameLocation":"90734:10:15","parameters":{"id":15947,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15946,"mutability":"mutable","name":"forkId","nameLocation":"90753:6:15","nodeType":"VariableDeclaration","scope":15949,"src":"90745:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15945,"name":"uint256","nodeType":"ElementaryTypeName","src":"90745:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"90744:16:15"},"returnParameters":{"id":15948,"nodeType":"ParameterList","parameters":[],"src":"90769:0:15"},"scope":16244,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15957,"nodeType":"FunctionDefinition","src":"90920:71:15","nodes":[],"documentation":{"id":15950,"nodeType":"StructuredDocumentation","src":"90776:139:15","text":"Set blockhash for the current block.\n It only sets the blockhash for blocks where `block.number - 256 <= number < block.number`."},"functionSelector":"5314b54a","implemented":false,"kind":"function","modifiers":[],"name":"setBlockhash","nameLocation":"90929:12:15","parameters":{"id":15955,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15952,"mutability":"mutable","name":"blockNumber","nameLocation":"90950:11:15","nodeType":"VariableDeclaration","scope":15957,"src":"90942:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15951,"name":"uint256","nodeType":"ElementaryTypeName","src":"90942:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15954,"mutability":"mutable","name":"blockHash","nameLocation":"90971:9:15","nodeType":"VariableDeclaration","scope":15957,"src":"90963:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15953,"name":"bytes32","nodeType":"ElementaryTypeName","src":"90963:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"90941:40:15"},"returnParameters":{"id":15956,"nodeType":"ParameterList","parameters":[],"src":"90990:0:15"},"scope":16244,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15965,"nodeType":"FunctionDefinition","src":"91089:61:15","nodes":[],"documentation":{"id":15958,"nodeType":"StructuredDocumentation","src":"90997:87:15","text":"Sets the nonce of an account. Must be higher than the current nonce of the account."},"functionSelector":"f8e18b57","implemented":false,"kind":"function","modifiers":[],"name":"setNonce","nameLocation":"91098:8:15","parameters":{"id":15963,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15960,"mutability":"mutable","name":"account","nameLocation":"91115:7:15","nodeType":"VariableDeclaration","scope":15965,"src":"91107:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15959,"name":"address","nodeType":"ElementaryTypeName","src":"91107:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":15962,"mutability":"mutable","name":"newNonce","nameLocation":"91131:8:15","nodeType":"VariableDeclaration","scope":15965,"src":"91124:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":15961,"name":"uint64","nodeType":"ElementaryTypeName","src":"91124:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"91106:34:15"},"returnParameters":{"id":15964,"nodeType":"ParameterList","parameters":[],"src":"91149:0:15"},"scope":16244,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15973,"nodeType":"FunctionDefinition","src":"91216:67:15","nodes":[],"documentation":{"id":15966,"nodeType":"StructuredDocumentation","src":"91156:55:15","text":"Sets the nonce of an account to an arbitrary value."},"functionSelector":"9b67b21c","implemented":false,"kind":"function","modifiers":[],"name":"setNonceUnsafe","nameLocation":"91225:14:15","parameters":{"id":15971,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15968,"mutability":"mutable","name":"account","nameLocation":"91248:7:15","nodeType":"VariableDeclaration","scope":15973,"src":"91240:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15967,"name":"address","nodeType":"ElementaryTypeName","src":"91240:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":15970,"mutability":"mutable","name":"newNonce","nameLocation":"91264:8:15","nodeType":"VariableDeclaration","scope":15973,"src":"91257:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":15969,"name":"uint64","nodeType":"ElementaryTypeName","src":"91257:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"91239:34:15"},"returnParameters":{"id":15972,"nodeType":"ParameterList","parameters":[],"src":"91282:0:15"},"scope":16244,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15979,"nodeType":"FunctionDefinition","src":"91438:58:15","nodes":[],"documentation":{"id":15974,"nodeType":"StructuredDocumentation","src":"91289:144:15","text":"Snapshot the current state of the evm.\n Returns the ID of the snapshot that was created.\n To revert a snapshot use `revertTo`."},"functionSelector":"9711715a","implemented":false,"kind":"function","modifiers":[],"name":"snapshot","nameLocation":"91447:8:15","parameters":{"id":15975,"nodeType":"ParameterList","parameters":[],"src":"91455:2:15"},"returnParameters":{"id":15978,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15977,"mutability":"mutable","name":"snapshotId","nameLocation":"91484:10:15","nodeType":"VariableDeclaration","scope":15979,"src":"91476:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15976,"name":"uint256","nodeType":"ElementaryTypeName","src":"91476:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"91475:20:15"},"scope":16244,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15985,"nodeType":"FunctionDefinition","src":"91603:48:15","nodes":[],"documentation":{"id":15980,"nodeType":"StructuredDocumentation","src":"91502:96:15","text":"Sets all subsequent calls' `msg.sender` to be the input address until `stopPrank` is called."},"functionSelector":"06447d56","implemented":false,"kind":"function","modifiers":[],"name":"startPrank","nameLocation":"91612:10:15","parameters":{"id":15983,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15982,"mutability":"mutable","name":"msgSender","nameLocation":"91631:9:15","nodeType":"VariableDeclaration","scope":15985,"src":"91623:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15981,"name":"address","nodeType":"ElementaryTypeName","src":"91623:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"91622:19:15"},"returnParameters":{"id":15984,"nodeType":"ParameterList","parameters":[],"src":"91650:0:15"},"scope":16244,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15993,"nodeType":"FunctionDefinition","src":"91802:66:15","nodes":[],"documentation":{"id":15986,"nodeType":"StructuredDocumentation","src":"91657:140:15","text":"Sets all subsequent calls' `msg.sender` to be the input address until `stopPrank` is called, and the `tx.origin` to be the second input."},"functionSelector":"45b56078","implemented":false,"kind":"function","modifiers":[],"name":"startPrank","nameLocation":"91811:10:15","parameters":{"id":15991,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15988,"mutability":"mutable","name":"msgSender","nameLocation":"91830:9:15","nodeType":"VariableDeclaration","scope":15993,"src":"91822:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15987,"name":"address","nodeType":"ElementaryTypeName","src":"91822:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":15990,"mutability":"mutable","name":"txOrigin","nameLocation":"91849:8:15","nodeType":"VariableDeclaration","scope":15993,"src":"91841:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15989,"name":"address","nodeType":"ElementaryTypeName","src":"91841:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"91821:37:15"},"returnParameters":{"id":15992,"nodeType":"ParameterList","parameters":[],"src":"91867:0:15"},"scope":16244,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15997,"nodeType":"FunctionDefinition","src":"91943:30:15","nodes":[],"documentation":{"id":15994,"nodeType":"StructuredDocumentation","src":"91874:64:15","text":"Resets subsequent calls' `msg.sender` to be `address(this)`."},"functionSelector":"90c5013b","implemented":false,"kind":"function","modifiers":[],"name":"stopPrank","nameLocation":"91952:9:15","parameters":{"id":15995,"nodeType":"ParameterList","parameters":[],"src":"91961:2:15"},"returnParameters":{"id":15996,"nodeType":"ParameterList","parameters":[],"src":"91972:0:15"},"scope":16244,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16007,"nodeType":"FunctionDefinition","src":"92031:69:15","nodes":[],"documentation":{"id":15998,"nodeType":"StructuredDocumentation","src":"91979:47:15","text":"Stores a value to an address' storage slot."},"functionSelector":"70ca10bb","implemented":false,"kind":"function","modifiers":[],"name":"store","nameLocation":"92040:5:15","parameters":{"id":16005,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16000,"mutability":"mutable","name":"target","nameLocation":"92054:6:15","nodeType":"VariableDeclaration","scope":16007,"src":"92046:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15999,"name":"address","nodeType":"ElementaryTypeName","src":"92046:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":16002,"mutability":"mutable","name":"slot","nameLocation":"92070:4:15","nodeType":"VariableDeclaration","scope":16007,"src":"92062:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":16001,"name":"bytes32","nodeType":"ElementaryTypeName","src":"92062:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":16004,"mutability":"mutable","name":"value","nameLocation":"92084:5:15","nodeType":"VariableDeclaration","scope":16007,"src":"92076:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":16003,"name":"bytes32","nodeType":"ElementaryTypeName","src":"92076:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"92045:45:15"},"returnParameters":{"id":16006,"nodeType":"ParameterList","parameters":[],"src":"92099:0:15"},"scope":16244,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16013,"nodeType":"FunctionDefinition","src":"92203:43:15","nodes":[],"documentation":{"id":16008,"nodeType":"StructuredDocumentation","src":"92106:92:15","text":"Fetches the given transaction from the active fork and executes it on the current state."},"functionSelector":"be646da1","implemented":false,"kind":"function","modifiers":[],"name":"transact","nameLocation":"92212:8:15","parameters":{"id":16011,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16010,"mutability":"mutable","name":"txHash","nameLocation":"92229:6:15","nodeType":"VariableDeclaration","scope":16013,"src":"92221:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":16009,"name":"bytes32","nodeType":"ElementaryTypeName","src":"92221:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"92220:16:15"},"returnParameters":{"id":16012,"nodeType":"ParameterList","parameters":[],"src":"92245:0:15"},"scope":16244,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16021,"nodeType":"FunctionDefinition","src":"92348:59:15","nodes":[],"documentation":{"id":16014,"nodeType":"StructuredDocumentation","src":"92252:91:15","text":"Fetches the given transaction from the given fork and executes it on the current state."},"functionSelector":"4d8abc4b","implemented":false,"kind":"function","modifiers":[],"name":"transact","nameLocation":"92357:8:15","parameters":{"id":16019,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16016,"mutability":"mutable","name":"forkId","nameLocation":"92374:6:15","nodeType":"VariableDeclaration","scope":16021,"src":"92366:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16015,"name":"uint256","nodeType":"ElementaryTypeName","src":"92366:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":16018,"mutability":"mutable","name":"txHash","nameLocation":"92390:6:15","nodeType":"VariableDeclaration","scope":16021,"src":"92382:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":16017,"name":"bytes32","nodeType":"ElementaryTypeName","src":"92382:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"92365:32:15"},"returnParameters":{"id":16020,"nodeType":"ParameterList","parameters":[],"src":"92406:0:15"},"scope":16244,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16027,"nodeType":"FunctionDefinition","src":"92441:50:15","nodes":[],"documentation":{"id":16022,"nodeType":"StructuredDocumentation","src":"92413:23:15","text":"Sets `tx.gasprice`."},"functionSelector":"48f50c0f","implemented":false,"kind":"function","modifiers":[],"name":"txGasPrice","nameLocation":"92450:10:15","parameters":{"id":16025,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16024,"mutability":"mutable","name":"newGasPrice","nameLocation":"92469:11:15","nodeType":"VariableDeclaration","scope":16027,"src":"92461:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16023,"name":"uint256","nodeType":"ElementaryTypeName","src":"92461:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"92460:21:15"},"returnParameters":{"id":16026,"nodeType":"ParameterList","parameters":[],"src":"92490:0:15"},"scope":16244,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16033,"nodeType":"FunctionDefinition","src":"92529:45:15","nodes":[],"documentation":{"id":16028,"nodeType":"StructuredDocumentation","src":"92497:27:15","text":"Sets `block.timestamp`."},"functionSelector":"e5d6bf02","implemented":false,"kind":"function","modifiers":[],"name":"warp","nameLocation":"92538:4:15","parameters":{"id":16031,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16030,"mutability":"mutable","name":"newTimestamp","nameLocation":"92551:12:15","nodeType":"VariableDeclaration","scope":16033,"src":"92543:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16029,"name":"uint256","nodeType":"ElementaryTypeName","src":"92543:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"92542:22:15"},"returnParameters":{"id":16032,"nodeType":"ParameterList","parameters":[],"src":"92573:0:15"},"scope":16244,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16045,"nodeType":"FunctionDefinition","src":"92726:105:15","nodes":[],"documentation":{"id":16034,"nodeType":"StructuredDocumentation","src":"92614:107:15","text":"Expect a call to an address with the specified `msg.value` and calldata, and a *minimum* amount of gas."},"functionSelector":"08e4e116","implemented":false,"kind":"function","modifiers":[],"name":"expectCallMinGas","nameLocation":"92735:16:15","parameters":{"id":16043,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16036,"mutability":"mutable","name":"callee","nameLocation":"92760:6:15","nodeType":"VariableDeclaration","scope":16045,"src":"92752:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16035,"name":"address","nodeType":"ElementaryTypeName","src":"92752:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":16038,"mutability":"mutable","name":"msgValue","nameLocation":"92776:8:15","nodeType":"VariableDeclaration","scope":16045,"src":"92768:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16037,"name":"uint256","nodeType":"ElementaryTypeName","src":"92768:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":16040,"mutability":"mutable","name":"minGas","nameLocation":"92793:6:15","nodeType":"VariableDeclaration","scope":16045,"src":"92786:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":16039,"name":"uint64","nodeType":"ElementaryTypeName","src":"92786:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":16042,"mutability":"mutable","name":"data","nameLocation":"92816:4:15","nodeType":"VariableDeclaration","scope":16045,"src":"92801:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":16041,"name":"bytes","nodeType":"ElementaryTypeName","src":"92801:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"92751:70:15"},"returnParameters":{"id":16044,"nodeType":"ParameterList","parameters":[],"src":"92830:0:15"},"scope":16244,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16059,"nodeType":"FunctionDefinition","src":"92964:127:15","nodes":[],"documentation":{"id":16046,"nodeType":"StructuredDocumentation","src":"92837:122:15","text":"Expect given number of calls to an address with the specified `msg.value` and calldata, and a *minimum* amount of gas."},"functionSelector":"e13a1834","implemented":false,"kind":"function","modifiers":[],"name":"expectCallMinGas","nameLocation":"92973:16:15","parameters":{"id":16057,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16048,"mutability":"mutable","name":"callee","nameLocation":"92998:6:15","nodeType":"VariableDeclaration","scope":16059,"src":"92990:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16047,"name":"address","nodeType":"ElementaryTypeName","src":"92990:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":16050,"mutability":"mutable","name":"msgValue","nameLocation":"93014:8:15","nodeType":"VariableDeclaration","scope":16059,"src":"93006:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16049,"name":"uint256","nodeType":"ElementaryTypeName","src":"93006:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":16052,"mutability":"mutable","name":"minGas","nameLocation":"93031:6:15","nodeType":"VariableDeclaration","scope":16059,"src":"93024:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":16051,"name":"uint64","nodeType":"ElementaryTypeName","src":"93024:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":16054,"mutability":"mutable","name":"data","nameLocation":"93054:4:15","nodeType":"VariableDeclaration","scope":16059,"src":"93039:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":16053,"name":"bytes","nodeType":"ElementaryTypeName","src":"93039:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":16056,"mutability":"mutable","name":"count","nameLocation":"93067:5:15","nodeType":"VariableDeclaration","scope":16059,"src":"93060:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":16055,"name":"uint64","nodeType":"ElementaryTypeName","src":"93060:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"92989:84:15"},"returnParameters":{"id":16058,"nodeType":"ParameterList","parameters":[],"src":"93090:0:15"},"scope":16244,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16067,"nodeType":"FunctionDefinition","src":"93223:66:15","nodes":[],"documentation":{"id":16060,"nodeType":"StructuredDocumentation","src":"93097:121:15","text":"Expects a call to an address with the specified calldata.\n Calldata can either be a strict or a partial match."},"functionSelector":"bd6af434","implemented":false,"kind":"function","modifiers":[],"name":"expectCall","nameLocation":"93232:10:15","parameters":{"id":16065,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16062,"mutability":"mutable","name":"callee","nameLocation":"93251:6:15","nodeType":"VariableDeclaration","scope":16067,"src":"93243:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16061,"name":"address","nodeType":"ElementaryTypeName","src":"93243:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":16064,"mutability":"mutable","name":"data","nameLocation":"93274:4:15","nodeType":"VariableDeclaration","scope":16067,"src":"93259:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":16063,"name":"bytes","nodeType":"ElementaryTypeName","src":"93259:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"93242:37:15"},"returnParameters":{"id":16066,"nodeType":"ParameterList","parameters":[],"src":"93288:0:15"},"scope":16244,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16077,"nodeType":"FunctionDefinition","src":"93376:80:15","nodes":[],"documentation":{"id":16068,"nodeType":"StructuredDocumentation","src":"93295:76:15","text":"Expects given number of calls to an address with the specified calldata."},"functionSelector":"c1adbbff","implemented":false,"kind":"function","modifiers":[],"name":"expectCall","nameLocation":"93385:10:15","parameters":{"id":16075,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16070,"mutability":"mutable","name":"callee","nameLocation":"93404:6:15","nodeType":"VariableDeclaration","scope":16077,"src":"93396:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16069,"name":"address","nodeType":"ElementaryTypeName","src":"93396:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":16072,"mutability":"mutable","name":"data","nameLocation":"93427:4:15","nodeType":"VariableDeclaration","scope":16077,"src":"93412:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":16071,"name":"bytes","nodeType":"ElementaryTypeName","src":"93412:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":16074,"mutability":"mutable","name":"count","nameLocation":"93440:5:15","nodeType":"VariableDeclaration","scope":16077,"src":"93433:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":16073,"name":"uint64","nodeType":"ElementaryTypeName","src":"93433:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"93395:51:15"},"returnParameters":{"id":16076,"nodeType":"ParameterList","parameters":[],"src":"93455:0:15"},"scope":16244,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16087,"nodeType":"FunctionDefinition","src":"93544:84:15","nodes":[],"documentation":{"id":16078,"nodeType":"StructuredDocumentation","src":"93462:77:15","text":"Expects a call to an address with the specified `msg.value` and calldata."},"functionSelector":"f30c7ba3","implemented":false,"kind":"function","modifiers":[],"name":"expectCall","nameLocation":"93553:10:15","parameters":{"id":16085,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16080,"mutability":"mutable","name":"callee","nameLocation":"93572:6:15","nodeType":"VariableDeclaration","scope":16087,"src":"93564:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16079,"name":"address","nodeType":"ElementaryTypeName","src":"93564:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":16082,"mutability":"mutable","name":"msgValue","nameLocation":"93588:8:15","nodeType":"VariableDeclaration","scope":16087,"src":"93580:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16081,"name":"uint256","nodeType":"ElementaryTypeName","src":"93580:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":16084,"mutability":"mutable","name":"data","nameLocation":"93613:4:15","nodeType":"VariableDeclaration","scope":16087,"src":"93598:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":16083,"name":"bytes","nodeType":"ElementaryTypeName","src":"93598:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"93563:55:15"},"returnParameters":{"id":16086,"nodeType":"ParameterList","parameters":[],"src":"93627:0:15"},"scope":16244,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16099,"nodeType":"FunctionDefinition","src":"93731:98:15","nodes":[],"documentation":{"id":16088,"nodeType":"StructuredDocumentation","src":"93634:92:15","text":"Expects given number of calls to an address with the specified `msg.value` and calldata."},"functionSelector":"a2b1a1ae","implemented":false,"kind":"function","modifiers":[],"name":"expectCall","nameLocation":"93740:10:15","parameters":{"id":16097,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16090,"mutability":"mutable","name":"callee","nameLocation":"93759:6:15","nodeType":"VariableDeclaration","scope":16099,"src":"93751:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16089,"name":"address","nodeType":"ElementaryTypeName","src":"93751:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":16092,"mutability":"mutable","name":"msgValue","nameLocation":"93775:8:15","nodeType":"VariableDeclaration","scope":16099,"src":"93767:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16091,"name":"uint256","nodeType":"ElementaryTypeName","src":"93767:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":16094,"mutability":"mutable","name":"data","nameLocation":"93800:4:15","nodeType":"VariableDeclaration","scope":16099,"src":"93785:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":16093,"name":"bytes","nodeType":"ElementaryTypeName","src":"93785:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":16096,"mutability":"mutable","name":"count","nameLocation":"93813:5:15","nodeType":"VariableDeclaration","scope":16099,"src":"93806:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":16095,"name":"uint64","nodeType":"ElementaryTypeName","src":"93806:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"93750:69:15"},"returnParameters":{"id":16098,"nodeType":"ParameterList","parameters":[],"src":"93828:0:15"},"scope":16244,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16111,"nodeType":"FunctionDefinition","src":"93922:96:15","nodes":[],"documentation":{"id":16100,"nodeType":"StructuredDocumentation","src":"93835:82:15","text":"Expect a call to an address with the specified `msg.value`, gas, and calldata."},"functionSelector":"23361207","implemented":false,"kind":"function","modifiers":[],"name":"expectCall","nameLocation":"93931:10:15","parameters":{"id":16109,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16102,"mutability":"mutable","name":"callee","nameLocation":"93950:6:15","nodeType":"VariableDeclaration","scope":16111,"src":"93942:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16101,"name":"address","nodeType":"ElementaryTypeName","src":"93942:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":16104,"mutability":"mutable","name":"msgValue","nameLocation":"93966:8:15","nodeType":"VariableDeclaration","scope":16111,"src":"93958:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16103,"name":"uint256","nodeType":"ElementaryTypeName","src":"93958:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":16106,"mutability":"mutable","name":"gas","nameLocation":"93983:3:15","nodeType":"VariableDeclaration","scope":16111,"src":"93976:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":16105,"name":"uint64","nodeType":"ElementaryTypeName","src":"93976:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":16108,"mutability":"mutable","name":"data","nameLocation":"94003:4:15","nodeType":"VariableDeclaration","scope":16111,"src":"93988:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":16107,"name":"bytes","nodeType":"ElementaryTypeName","src":"93988:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"93941:67:15"},"returnParameters":{"id":16110,"nodeType":"ParameterList","parameters":[],"src":"94017:0:15"},"scope":16244,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16125,"nodeType":"FunctionDefinition","src":"94127:110:15","nodes":[],"documentation":{"id":16112,"nodeType":"StructuredDocumentation","src":"94024:98:15","text":"Expects given number of calls to an address with the specified `msg.value`, gas, and calldata."},"functionSelector":"65b7b7cc","implemented":false,"kind":"function","modifiers":[],"name":"expectCall","nameLocation":"94136:10:15","parameters":{"id":16123,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16114,"mutability":"mutable","name":"callee","nameLocation":"94155:6:15","nodeType":"VariableDeclaration","scope":16125,"src":"94147:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16113,"name":"address","nodeType":"ElementaryTypeName","src":"94147:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":16116,"mutability":"mutable","name":"msgValue","nameLocation":"94171:8:15","nodeType":"VariableDeclaration","scope":16125,"src":"94163:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16115,"name":"uint256","nodeType":"ElementaryTypeName","src":"94163:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":16118,"mutability":"mutable","name":"gas","nameLocation":"94188:3:15","nodeType":"VariableDeclaration","scope":16125,"src":"94181:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":16117,"name":"uint64","nodeType":"ElementaryTypeName","src":"94181:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":16120,"mutability":"mutable","name":"data","nameLocation":"94208:4:15","nodeType":"VariableDeclaration","scope":16125,"src":"94193:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":16119,"name":"bytes","nodeType":"ElementaryTypeName","src":"94193:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":16122,"mutability":"mutable","name":"count","nameLocation":"94221:5:15","nodeType":"VariableDeclaration","scope":16125,"src":"94214:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":16121,"name":"uint64","nodeType":"ElementaryTypeName","src":"94214:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"94146:81:15"},"returnParameters":{"id":16124,"nodeType":"ParameterList","parameters":[],"src":"94236:0:15"},"scope":16244,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16139,"nodeType":"FunctionDefinition","src":"94596:134:15","nodes":[],"documentation":{"id":16126,"nodeType":"StructuredDocumentation","src":"94243:348:15","text":"Prepare an expected anonymous log with (bool checkTopic1, bool checkTopic2, bool checkTopic3, bool checkData.).\n Call this function, then emit an anonymous event, then call a function. Internally after the call, we check if\n logs were emitted in the expected order with the expected topics and data (as specified by the booleans)."},"functionSelector":"c948db5e","implemented":false,"kind":"function","modifiers":[],"name":"expectEmitAnonymous","nameLocation":"94605:19:15","parameters":{"id":16137,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16128,"mutability":"mutable","name":"checkTopic0","nameLocation":"94630:11:15","nodeType":"VariableDeclaration","scope":16139,"src":"94625:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":16127,"name":"bool","nodeType":"ElementaryTypeName","src":"94625:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":16130,"mutability":"mutable","name":"checkTopic1","nameLocation":"94648:11:15","nodeType":"VariableDeclaration","scope":16139,"src":"94643:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":16129,"name":"bool","nodeType":"ElementaryTypeName","src":"94643:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":16132,"mutability":"mutable","name":"checkTopic2","nameLocation":"94666:11:15","nodeType":"VariableDeclaration","scope":16139,"src":"94661:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":16131,"name":"bool","nodeType":"ElementaryTypeName","src":"94661:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":16134,"mutability":"mutable","name":"checkTopic3","nameLocation":"94684:11:15","nodeType":"VariableDeclaration","scope":16139,"src":"94679:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":16133,"name":"bool","nodeType":"ElementaryTypeName","src":"94679:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":16136,"mutability":"mutable","name":"checkData","nameLocation":"94702:9:15","nodeType":"VariableDeclaration","scope":16139,"src":"94697:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":16135,"name":"bool","nodeType":"ElementaryTypeName","src":"94697:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"94624:88:15"},"returnParameters":{"id":16138,"nodeType":"ParameterList","parameters":[],"src":"94729:0:15"},"scope":16244,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16155,"nodeType":"FunctionDefinition","src":"94833:197:15","nodes":[],"documentation":{"id":16140,"nodeType":"StructuredDocumentation","src":"94736:92:15","text":"Same as the previous method, but also checks supplied address against emitting contract."},"functionSelector":"71c95899","implemented":false,"kind":"function","modifiers":[],"name":"expectEmitAnonymous","nameLocation":"94842:19:15","parameters":{"id":16153,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16142,"mutability":"mutable","name":"checkTopic0","nameLocation":"94876:11:15","nodeType":"VariableDeclaration","scope":16155,"src":"94871:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":16141,"name":"bool","nodeType":"ElementaryTypeName","src":"94871:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":16144,"mutability":"mutable","name":"checkTopic1","nameLocation":"94902:11:15","nodeType":"VariableDeclaration","scope":16155,"src":"94897:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":16143,"name":"bool","nodeType":"ElementaryTypeName","src":"94897:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":16146,"mutability":"mutable","name":"checkTopic2","nameLocation":"94928:11:15","nodeType":"VariableDeclaration","scope":16155,"src":"94923:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":16145,"name":"bool","nodeType":"ElementaryTypeName","src":"94923:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":16148,"mutability":"mutable","name":"checkTopic3","nameLocation":"94954:11:15","nodeType":"VariableDeclaration","scope":16155,"src":"94949:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":16147,"name":"bool","nodeType":"ElementaryTypeName","src":"94949:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":16150,"mutability":"mutable","name":"checkData","nameLocation":"94980:9:15","nodeType":"VariableDeclaration","scope":16155,"src":"94975:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":16149,"name":"bool","nodeType":"ElementaryTypeName","src":"94975:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":16152,"mutability":"mutable","name":"emitter","nameLocation":"95007:7:15","nodeType":"VariableDeclaration","scope":16155,"src":"94999:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16151,"name":"address","nodeType":"ElementaryTypeName","src":"94999:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"94861:159:15"},"returnParameters":{"id":16154,"nodeType":"ParameterList","parameters":[],"src":"95029:0:15"},"scope":16244,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16159,"nodeType":"FunctionDefinition","src":"95320:40:15","nodes":[],"documentation":{"id":16156,"nodeType":"StructuredDocumentation","src":"95036:279:15","text":"Prepare an expected anonymous log with all topic and data checks enabled.\n Call this function, then emit an anonymous event, then call a function. Internally after the call, we check if\n logs were emitted in the expected order with the expected topics and data."},"functionSelector":"2e5f270c","implemented":false,"kind":"function","modifiers":[],"name":"expectEmitAnonymous","nameLocation":"95329:19:15","parameters":{"id":16157,"nodeType":"ParameterList","parameters":[],"src":"95348:2:15"},"returnParameters":{"id":16158,"nodeType":"ParameterList","parameters":[],"src":"95359:0:15"},"scope":16244,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16165,"nodeType":"FunctionDefinition","src":"95463:55:15","nodes":[],"documentation":{"id":16160,"nodeType":"StructuredDocumentation","src":"95366:92:15","text":"Same as the previous method, but also checks supplied address against emitting contract."},"functionSelector":"6fc68705","implemented":false,"kind":"function","modifiers":[],"name":"expectEmitAnonymous","nameLocation":"95472:19:15","parameters":{"id":16163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16162,"mutability":"mutable","name":"emitter","nameLocation":"95500:7:15","nodeType":"VariableDeclaration","scope":16165,"src":"95492:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16161,"name":"address","nodeType":"ElementaryTypeName","src":"95492:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"95491:17:15"},"returnParameters":{"id":16164,"nodeType":"ParameterList","parameters":[],"src":"95517:0:15"},"scope":16244,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16177,"nodeType":"FunctionDefinition","src":"95857:99:15","nodes":[],"documentation":{"id":16166,"nodeType":"StructuredDocumentation","src":"95524:328:15","text":"Prepare an expected log with (bool checkTopic1, bool checkTopic2, bool checkTopic3, bool checkData.).\n Call this function, then emit an event, then call a function. Internally after the call, we check if\n logs were emitted in the expected order with the expected topics and data (as specified by the booleans)."},"functionSelector":"491cc7c2","implemented":false,"kind":"function","modifiers":[],"name":"expectEmit","nameLocation":"95866:10:15","parameters":{"id":16175,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16168,"mutability":"mutable","name":"checkTopic1","nameLocation":"95882:11:15","nodeType":"VariableDeclaration","scope":16177,"src":"95877:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":16167,"name":"bool","nodeType":"ElementaryTypeName","src":"95877:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":16170,"mutability":"mutable","name":"checkTopic2","nameLocation":"95900:11:15","nodeType":"VariableDeclaration","scope":16177,"src":"95895:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":16169,"name":"bool","nodeType":"ElementaryTypeName","src":"95895:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":16172,"mutability":"mutable","name":"checkTopic3","nameLocation":"95918:11:15","nodeType":"VariableDeclaration","scope":16177,"src":"95913:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":16171,"name":"bool","nodeType":"ElementaryTypeName","src":"95913:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":16174,"mutability":"mutable","name":"checkData","nameLocation":"95936:9:15","nodeType":"VariableDeclaration","scope":16177,"src":"95931:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":16173,"name":"bool","nodeType":"ElementaryTypeName","src":"95931:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"95876:70:15"},"returnParameters":{"id":16176,"nodeType":"ParameterList","parameters":[],"src":"95955:0:15"},"scope":16244,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16191,"nodeType":"FunctionDefinition","src":"96059:124:15","nodes":[],"documentation":{"id":16178,"nodeType":"StructuredDocumentation","src":"95962:92:15","text":"Same as the previous method, but also checks supplied address against emitting contract."},"functionSelector":"81bad6f3","implemented":false,"kind":"function","modifiers":[],"name":"expectEmit","nameLocation":"96068:10:15","parameters":{"id":16189,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16180,"mutability":"mutable","name":"checkTopic1","nameLocation":"96084:11:15","nodeType":"VariableDeclaration","scope":16191,"src":"96079:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":16179,"name":"bool","nodeType":"ElementaryTypeName","src":"96079:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":16182,"mutability":"mutable","name":"checkTopic2","nameLocation":"96102:11:15","nodeType":"VariableDeclaration","scope":16191,"src":"96097:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":16181,"name":"bool","nodeType":"ElementaryTypeName","src":"96097:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":16184,"mutability":"mutable","name":"checkTopic3","nameLocation":"96120:11:15","nodeType":"VariableDeclaration","scope":16191,"src":"96115:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":16183,"name":"bool","nodeType":"ElementaryTypeName","src":"96115:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":16186,"mutability":"mutable","name":"checkData","nameLocation":"96138:9:15","nodeType":"VariableDeclaration","scope":16191,"src":"96133:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":16185,"name":"bool","nodeType":"ElementaryTypeName","src":"96133:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":16188,"mutability":"mutable","name":"emitter","nameLocation":"96157:7:15","nodeType":"VariableDeclaration","scope":16191,"src":"96149:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16187,"name":"address","nodeType":"ElementaryTypeName","src":"96149:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"96078:87:15"},"returnParameters":{"id":16190,"nodeType":"ParameterList","parameters":[],"src":"96182:0:15"},"scope":16244,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16195,"nodeType":"FunctionDefinition","src":"96453:31:15","nodes":[],"documentation":{"id":16192,"nodeType":"StructuredDocumentation","src":"96189:259:15","text":"Prepare an expected log with all topic and data checks enabled.\n Call this function, then emit an event, then call a function. Internally after the call, we check if\n logs were emitted in the expected order with the expected topics and data."},"functionSelector":"440ed10d","implemented":false,"kind":"function","modifiers":[],"name":"expectEmit","nameLocation":"96462:10:15","parameters":{"id":16193,"nodeType":"ParameterList","parameters":[],"src":"96472:2:15"},"returnParameters":{"id":16194,"nodeType":"ParameterList","parameters":[],"src":"96483:0:15"},"scope":16244,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16201,"nodeType":"FunctionDefinition","src":"96587:46:15","nodes":[],"documentation":{"id":16196,"nodeType":"StructuredDocumentation","src":"96490:92:15","text":"Same as the previous method, but also checks supplied address against emitting contract."},"functionSelector":"86b9620d","implemented":false,"kind":"function","modifiers":[],"name":"expectEmit","nameLocation":"96596:10:15","parameters":{"id":16199,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16198,"mutability":"mutable","name":"emitter","nameLocation":"96615:7:15","nodeType":"VariableDeclaration","scope":16201,"src":"96607:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16197,"name":"address","nodeType":"ElementaryTypeName","src":"96607:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"96606:17:15"},"returnParameters":{"id":16200,"nodeType":"ParameterList","parameters":[],"src":"96632:0:15"},"scope":16244,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16205,"nodeType":"FunctionDefinition","src":"96699:33:15","nodes":[],"documentation":{"id":16202,"nodeType":"StructuredDocumentation","src":"96639:55:15","text":"Expects an error on next call with any revert data."},"functionSelector":"f4844814","implemented":false,"kind":"function","modifiers":[],"name":"expectRevert","nameLocation":"96708:12:15","parameters":{"id":16203,"nodeType":"ParameterList","parameters":[],"src":"96720:2:15"},"returnParameters":{"id":16204,"nodeType":"ParameterList","parameters":[],"src":"96731:0:15"},"scope":16244,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16211,"nodeType":"FunctionDefinition","src":"96810:50:15","nodes":[],"documentation":{"id":16206,"nodeType":"StructuredDocumentation","src":"96738:67:15","text":"Expects an error on next call that starts with the revert data."},"functionSelector":"c31eb0e0","implemented":false,"kind":"function","modifiers":[],"name":"expectRevert","nameLocation":"96819:12:15","parameters":{"id":16209,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16208,"mutability":"mutable","name":"revertData","nameLocation":"96839:10:15","nodeType":"VariableDeclaration","scope":16211,"src":"96832:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":16207,"name":"bytes4","nodeType":"ElementaryTypeName","src":"96832:6:15","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"96831:19:15"},"returnParameters":{"id":16210,"nodeType":"ParameterList","parameters":[],"src":"96859:0:15"},"scope":16244,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16217,"nodeType":"FunctionDefinition","src":"96942:58:15","nodes":[],"documentation":{"id":16212,"nodeType":"StructuredDocumentation","src":"96866:71:15","text":"Expects an error on next call that exactly matches the revert data."},"functionSelector":"f28dceb3","implemented":false,"kind":"function","modifiers":[],"name":"expectRevert","nameLocation":"96951:12:15","parameters":{"id":16215,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16214,"mutability":"mutable","name":"revertData","nameLocation":"96979:10:15","nodeType":"VariableDeclaration","scope":16217,"src":"96964:25:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":16213,"name":"bytes","nodeType":"ElementaryTypeName","src":"96964:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"96963:27:15"},"returnParameters":{"id":16216,"nodeType":"ParameterList","parameters":[],"src":"96999:0:15"},"scope":16244,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16225,"nodeType":"FunctionDefinition","src":"97229:59:15","nodes":[],"documentation":{"id":16218,"nodeType":"StructuredDocumentation","src":"97006:218:15","text":"Only allows memory writes to offsets [0x00, 0x60) ∪ [min, max) in the current subcontext. If any other\n memory is written to, the test will fail. Can be called multiple times to add more ranges to the set."},"functionSelector":"6d016688","implemented":false,"kind":"function","modifiers":[],"name":"expectSafeMemory","nameLocation":"97238:16:15","parameters":{"id":16223,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16220,"mutability":"mutable","name":"min","nameLocation":"97262:3:15","nodeType":"VariableDeclaration","scope":16225,"src":"97255:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":16219,"name":"uint64","nodeType":"ElementaryTypeName","src":"97255:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":16222,"mutability":"mutable","name":"max","nameLocation":"97274:3:15","nodeType":"VariableDeclaration","scope":16225,"src":"97267:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":16221,"name":"uint64","nodeType":"ElementaryTypeName","src":"97267:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"97254:24:15"},"returnParameters":{"id":16224,"nodeType":"ParameterList","parameters":[],"src":"97287:0:15"},"scope":16244,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16233,"nodeType":"FunctionDefinition","src":"97530:63:15","nodes":[],"documentation":{"id":16226,"nodeType":"StructuredDocumentation","src":"97294:231:15","text":"Only allows memory writes to offsets [0x00, 0x60) ∪ [min, max) in the next created subcontext.\n If any other memory is written to, the test will fail. Can be called multiple times to add more ranges\n to the set."},"functionSelector":"05838bf4","implemented":false,"kind":"function","modifiers":[],"name":"expectSafeMemoryCall","nameLocation":"97539:20:15","parameters":{"id":16231,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16228,"mutability":"mutable","name":"min","nameLocation":"97567:3:15","nodeType":"VariableDeclaration","scope":16233,"src":"97560:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":16227,"name":"uint64","nodeType":"ElementaryTypeName","src":"97560:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":16230,"mutability":"mutable","name":"max","nameLocation":"97579:3:15","nodeType":"VariableDeclaration","scope":16233,"src":"97572:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":16229,"name":"uint64","nodeType":"ElementaryTypeName","src":"97572:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"97559:24:15"},"returnParameters":{"id":16232,"nodeType":"ParameterList","parameters":[],"src":"97592:0:15"},"scope":16244,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16239,"nodeType":"FunctionDefinition","src":"97671:38:15","nodes":[],"documentation":{"id":16234,"nodeType":"StructuredDocumentation","src":"97599:67:15","text":"Marks a test as skipped. Must be called at the top of the test."},"functionSelector":"dd82d13e","implemented":false,"kind":"function","modifiers":[],"name":"skip","nameLocation":"97680:4:15","parameters":{"id":16237,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16236,"mutability":"mutable","name":"skipTest","nameLocation":"97690:8:15","nodeType":"VariableDeclaration","scope":16239,"src":"97685:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":16235,"name":"bool","nodeType":"ElementaryTypeName","src":"97685:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"97684:15:15"},"returnParameters":{"id":16238,"nodeType":"ParameterList","parameters":[],"src":"97708:0:15"},"scope":16244,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16243,"nodeType":"FunctionDefinition","src":"97784:41:15","nodes":[],"documentation":{"id":16240,"nodeType":"StructuredDocumentation","src":"97715:64:15","text":"Stops all safe memory expectation in the current subcontext."},"functionSelector":"0956441b","implemented":false,"kind":"function","modifiers":[],"name":"stopExpectSafeMemory","nameLocation":"97793:20:15","parameters":{"id":16241,"nodeType":"ParameterList","parameters":[],"src":"97813:2:15"},"returnParameters":{"id":16242,"nodeType":"ParameterList","parameters":[],"src":"97824:0:15"},"scope":16244,"stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"abstract":false,"baseContracts":[{"baseName":{"id":15597,"name":"VmSafe","nameLocations":["81955:6:15"],"nodeType":"IdentifierPath","referencedDeclaration":15595,"src":"81955:6:15"},"id":15598,"nodeType":"InheritanceSpecifier","src":"81955:6:15"}],"canonicalName":"Vm","contractDependencies":[],"contractKind":"interface","documentation":{"id":15596,"nodeType":"StructuredDocumentation","src":"81768:171:15","text":"The `Vm` interface does allow manipulation of the EVM state. These are all intended to be used\n in tests, but it is not recommended to use these cheats in scripts."},"fullyImplemented":false,"linearizedBaseContracts":[16244,15595],"name":"Vm","nameLocation":"81949:2:15","scope":16245,"usedErrors":[],"usedEvents":[]}],"license":"MIT OR Apache-2.0"},"id":15}